!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AF_BRIDGE	netfilter/nf_tables_bridge.c	/^MODULE_ALIAS_NFT_FAMILY(AF_BRIDGE);$/;"	v
BPDU_TYPE_CONFIG	br_private_stp.h	16;"	d
BPDU_TYPE_CONFIG	netfilter/ebt_stp.c	16;"	d	file:
BPDU_TYPE_TCN	br_private_stp.h	17;"	d
BPDU_TYPE_TCN	netfilter/ebt_stp.c	17;"	d	file:
BRPORT_ATTR	br_sysfs_if.c	/^static BRPORT_ATTR(change_ack, S_IRUGO, show_change_ack, NULL);$/;"	p	file:
BRPORT_ATTR	br_sysfs_if.c	/^static BRPORT_ATTR(config_pending, S_IRUGO, show_config_pending, NULL);$/;"	p	file:
BRPORT_ATTR	br_sysfs_if.c	/^static BRPORT_ATTR(designated_bridge, S_IRUGO, show_designated_bridge, NULL);$/;"	p	file:
BRPORT_ATTR	br_sysfs_if.c	/^static BRPORT_ATTR(designated_cost, S_IRUGO, show_designated_cost, NULL);$/;"	p	file:
BRPORT_ATTR	br_sysfs_if.c	/^static BRPORT_ATTR(designated_port, S_IRUGO, show_designated_port, NULL);$/;"	p	file:
BRPORT_ATTR	br_sysfs_if.c	/^static BRPORT_ATTR(designated_root, S_IRUGO, show_designated_root, NULL);$/;"	p	file:
BRPORT_ATTR	br_sysfs_if.c	/^static BRPORT_ATTR(flush, S_IWUSR, NULL, store_flush);$/;"	p	file:
BRPORT_ATTR	br_sysfs_if.c	/^static BRPORT_ATTR(forward_delay_timer, S_IRUGO, show_forward_delay_timer, NULL);$/;"	p	file:
BRPORT_ATTR	br_sysfs_if.c	/^static BRPORT_ATTR(hold_timer, S_IRUGO, show_hold_timer, NULL);$/;"	p	file:
BRPORT_ATTR	br_sysfs_if.c	/^static BRPORT_ATTR(message_age_timer, S_IRUGO, show_message_age_timer, NULL);$/;"	p	file:
BRPORT_ATTR	br_sysfs_if.c	/^static BRPORT_ATTR(port_id, S_IRUGO, show_port_id, NULL);$/;"	p	file:
BRPORT_ATTR	br_sysfs_if.c	/^static BRPORT_ATTR(port_no, S_IRUGO, show_port_no, NULL);$/;"	p	file:
BRPORT_ATTR	br_sysfs_if.c	/^static BRPORT_ATTR(state, S_IRUGO, show_port_state, NULL);$/;"	p	file:
BRPORT_ATTR	br_sysfs_if.c	29;"	d	file:
BRPORT_ATTR_FLAG	br_sysfs_if.c	37;"	d	file:
BR_ADMIN_COST	br_private.h	174;"	d
BR_BPDU_GUARD	br_private.h	171;"	d
BR_FLOOD	br_private.h	176;"	d
BR_GROUPFWD_DEFAULT	br_private.h	35;"	d
BR_GROUPFWD_RESTRICTED	br_private.h	37;"	d
BR_HAIRPIN_MODE	br_private.h	170;"	d
BR_HASH_BITS	br_private.h	23;"	d
BR_HASH_SIZE	br_private.h	24;"	d
BR_HOLD_TIME	br_private.h	26;"	d
BR_INPUT_SKB_CB	br_private.h	310;"	d
BR_INPUT_SKB_CB_MROUTERS_ONLY	br_private.h	313;"	d
BR_INPUT_SKB_CB_MROUTERS_ONLY	br_private.h	315;"	d
BR_KERNEL_STP	br_private.h	/^		BR_KERNEL_STP,		\/* old STP in kernel *\/$/;"	e	enum:net_bridge::__anon3
BR_LEARNING	br_private.h	175;"	d
BR_MAX_FORWARD_DELAY	br_private_stp.h	24;"	d
BR_MAX_HELLO_TIME	br_private_stp.h	21;"	d
BR_MAX_MAX_AGE	br_private_stp.h	27;"	d
BR_MAX_PATH_COST	br_private_stp.h	30;"	d
BR_MAX_PORTS	br_private.h	29;"	d
BR_MAX_PORT_PRIORITY	br_stp_if.c	33;"	d	file:
BR_MIN_FORWARD_DELAY	br_private_stp.h	23;"	d
BR_MIN_HELLO_TIME	br_private_stp.h	20;"	d
BR_MIN_MAX_AGE	br_private_stp.h	26;"	d
BR_MIN_PATH_COST	br_private_stp.h	29;"	d
BR_MULTICAST_FAST_LEAVE	br_private.h	173;"	d
BR_NO_STP	br_private.h	/^		BR_NO_STP, 		\/* no spanning tree *\/$/;"	e	enum:net_bridge::__anon3
BR_PORT_BITS	br_private.h	28;"	d
BR_ROOT_BLOCK	br_private.h	172;"	d
BR_STP_PROG	br_private.h	40;"	d
BR_USER_STP	br_private.h	/^		BR_USER_STP,		\/* new RSTP in userspace *\/$/;"	e	enum:net_bridge::__anon3
BR_VERSION	br_private.h	32;"	d
BR_VLAN_BITMAP_LEN	br_private.h	30;"	d
BUGPRINT	netfilter/ebtables.c	33;"	d	file:
COMMON_FEATURES	br_device.c	25;"	d	file:
COUNTER_BASE	netfilter/ebtables.c	47;"	d	file:
COUNTER_OFFSET	netfilter/ebtables.c	46;"	d	file:
CREDITS_PER_JIFFY	netfilter/ebt_limit.c	32;"	d	file:
DEFINE_MUTEX	netfilter/ebtables.c	/^static DEFINE_MUTEX(ebt_mutex);$/;"	p	file:
DEFINE_SPINLOCK	netfilter/ebt_limit.c	/^static DEFINE_SPINLOCK(limit_lock);$/;"	p	file:
DEFINE_SPINLOCK	netfilter/ebt_log.c	/^static DEFINE_SPINLOCK(ebt_log_lock);$/;"	p	file:
DEVICE_ATTR_RO	br_sysfs_br.c	/^static DEVICE_ATTR_RO(bridge_id);$/;"	p	file:
DEVICE_ATTR_RO	br_sysfs_br.c	/^static DEVICE_ATTR_RO(gc_timer);$/;"	p	file:
DEVICE_ATTR_RO	br_sysfs_br.c	/^static DEVICE_ATTR_RO(hello_timer);$/;"	p	file:
DEVICE_ATTR_RO	br_sysfs_br.c	/^static DEVICE_ATTR_RO(root_id);$/;"	p	file:
DEVICE_ATTR_RO	br_sysfs_br.c	/^static DEVICE_ATTR_RO(root_path_cost);$/;"	p	file:
DEVICE_ATTR_RO	br_sysfs_br.c	/^static DEVICE_ATTR_RO(root_port);$/;"	p	file:
DEVICE_ATTR_RO	br_sysfs_br.c	/^static DEVICE_ATTR_RO(tcn_timer);$/;"	p	file:
DEVICE_ATTR_RO	br_sysfs_br.c	/^static DEVICE_ATTR_RO(topology_change);$/;"	p	file:
DEVICE_ATTR_RO	br_sysfs_br.c	/^static DEVICE_ATTR_RO(topology_change_detected);$/;"	p	file:
DEVICE_ATTR_RO	br_sysfs_br.c	/^static DEVICE_ATTR_RO(topology_change_timer);$/;"	p	file:
DEVICE_ATTR_RW	br_sysfs_br.c	/^static DEVICE_ATTR_RW(ageing_time);$/;"	p	file:
DEVICE_ATTR_RW	br_sysfs_br.c	/^static DEVICE_ATTR_RW(forward_delay);$/;"	p	file:
DEVICE_ATTR_RW	br_sysfs_br.c	/^static DEVICE_ATTR_RW(group_addr);$/;"	p	file:
DEVICE_ATTR_RW	br_sysfs_br.c	/^static DEVICE_ATTR_RW(group_fwd_mask);$/;"	p	file:
DEVICE_ATTR_RW	br_sysfs_br.c	/^static DEVICE_ATTR_RW(hash_elasticity);$/;"	p	file:
DEVICE_ATTR_RW	br_sysfs_br.c	/^static DEVICE_ATTR_RW(hash_max);$/;"	p	file:
DEVICE_ATTR_RW	br_sysfs_br.c	/^static DEVICE_ATTR_RW(hello_time);$/;"	p	file:
DEVICE_ATTR_RW	br_sysfs_br.c	/^static DEVICE_ATTR_RW(max_age);$/;"	p	file:
DEVICE_ATTR_RW	br_sysfs_br.c	/^static DEVICE_ATTR_RW(multicast_last_member_count);$/;"	p	file:
DEVICE_ATTR_RW	br_sysfs_br.c	/^static DEVICE_ATTR_RW(multicast_last_member_interval);$/;"	p	file:
DEVICE_ATTR_RW	br_sysfs_br.c	/^static DEVICE_ATTR_RW(multicast_membership_interval);$/;"	p	file:
DEVICE_ATTR_RW	br_sysfs_br.c	/^static DEVICE_ATTR_RW(multicast_querier);$/;"	p	file:
DEVICE_ATTR_RW	br_sysfs_br.c	/^static DEVICE_ATTR_RW(multicast_querier_interval);$/;"	p	file:
DEVICE_ATTR_RW	br_sysfs_br.c	/^static DEVICE_ATTR_RW(multicast_query_interval);$/;"	p	file:
DEVICE_ATTR_RW	br_sysfs_br.c	/^static DEVICE_ATTR_RW(multicast_query_response_interval);$/;"	p	file:
DEVICE_ATTR_RW	br_sysfs_br.c	/^static DEVICE_ATTR_RW(multicast_query_use_ifaddr);$/;"	p	file:
DEVICE_ATTR_RW	br_sysfs_br.c	/^static DEVICE_ATTR_RW(multicast_router);$/;"	p	file:
DEVICE_ATTR_RW	br_sysfs_br.c	/^static DEVICE_ATTR_RW(multicast_snooping);$/;"	p	file:
DEVICE_ATTR_RW	br_sysfs_br.c	/^static DEVICE_ATTR_RW(multicast_startup_query_count);$/;"	p	file:
DEVICE_ATTR_RW	br_sysfs_br.c	/^static DEVICE_ATTR_RW(multicast_startup_query_interval);$/;"	p	file:
DEVICE_ATTR_RW	br_sysfs_br.c	/^static DEVICE_ATTR_RW(nf_call_arptables);$/;"	p	file:
DEVICE_ATTR_RW	br_sysfs_br.c	/^static DEVICE_ATTR_RW(nf_call_ip6tables);$/;"	p	file:
DEVICE_ATTR_RW	br_sysfs_br.c	/^static DEVICE_ATTR_RW(nf_call_iptables);$/;"	p	file:
DEVICE_ATTR_RW	br_sysfs_br.c	/^static DEVICE_ATTR_RW(priority);$/;"	p	file:
DEVICE_ATTR_RW	br_sysfs_br.c	/^static DEVICE_ATTR_RW(stp_state);$/;"	p	file:
DEVICE_ATTR_RW	br_sysfs_br.c	/^static DEVICE_ATTR_RW(vlan_filtering);$/;"	p	file:
DEVICE_ATTR_WO	br_sysfs_br.c	/^static DEVICE_ATTR_WO(flush);$/;"	p	file:
EBT_COMPAT_MATCH	netfilter/ebtables.c	/^	EBT_COMPAT_MATCH,$/;"	e	enum:compat_mwt	file:
EBT_COMPAT_TARGET	netfilter/ebtables.c	/^	EBT_COMPAT_TARGET,$/;"	e	enum:compat_mwt	file:
EBT_COMPAT_WATCHER	netfilter/ebtables.c	/^	EBT_COMPAT_WATCHER,$/;"	e	enum:compat_mwt	file:
EXIT_ON_MISMATCH	netfilter/ebt_vlan.c	35;"	d	file:
FILTER_VALID_HOOKS	netfilter/ebtable_filter.c	14;"	d	file:
FWINV2	netfilter/ebtables.c	124;"	d	file:
GET_BITMASK	netfilter/ebt_vlan.c	34;"	d	file:
IS_ARP	br_netfilter.c	73;"	d	file:
IS_IP	br_netfilter.c	67;"	d	file:
IS_IPV6	br_netfilter.c	70;"	d	file:
IS_PPPOE_IP	br_netfilter.c	104;"	d	file:
IS_PPPOE_IPV6	br_netfilter.c	109;"	d	file:
IS_VLAN_ARP	br_netfilter.c	94;"	d	file:
IS_VLAN_IP	br_netfilter.c	86;"	d	file:
IS_VLAN_IPV6	br_netfilter.c	90;"	d	file:
LLC_RESERVE	br_stp_bpdu.c	31;"	d	file:
MAX_CPJ	netfilter/ebt_limit.c	23;"	d	file:
MESSAGE_AGE_INCR	br_stp.c	22;"	d	file:
MODULE_VERS	netfilter/ebt_vlan.c	28;"	d	file:
MODULE_VERSION	br.c	/^MODULE_VERSION(BR_VERSION);$/;"	v
NAT_VALID_HOOKS	netfilter/ebtable_nat.c	14;"	d	file:
NR16	netfilter/ebt_stp.c	40;"	d	file:
NR32	netfilter/ebt_stp.c	41;"	d	file:
POW2_BELOW32	netfilter/ebt_limit.c	30;"	d	file:
SMP_ALIGN	netfilter/ebtables.c	45;"	d	file:
STP_HZ	br_stp_bpdu.c	29;"	d	file:
_BR_PRIVATE_H	br_private.h	14;"	d
_BR_PRIVATE_STP_H	br_private_stp.h	14;"	d
_POW2_BELOW16	netfilter/ebt_limit.c	28;"	d	file:
_POW2_BELOW2	netfilter/ebt_limit.c	25;"	d	file:
_POW2_BELOW32	netfilter/ebt_limit.c	29;"	d	file:
_POW2_BELOW4	netfilter/ebt_limit.c	26;"	d	file:
_POW2_BELOW8	netfilter/ebt_limit.c	27;"	d	file:
__anon4::lastnlh	netfilter/ebt_ulog.c	/^	struct nlmsghdr *lastnlh;	\/* netlink header of last msg in skb *\/$/;"	m	struct:__anon4	typeref:struct:__anon4::nlmsghdr	file:	access:public
__anon4::lock	netfilter/ebt_ulog.c	/^	spinlock_t lock;		\/* the per-queue lock *\/$/;"	m	struct:__anon4	file:	access:public
__anon4::qlen	netfilter/ebt_ulog.c	/^	unsigned int qlen;		\/* number of nlmsgs' in the skb *\/$/;"	m	struct:__anon4	file:	access:public
__anon4::skb	netfilter/ebt_ulog.c	/^	struct sk_buff *skb;		\/* the pre-allocated skb *\/$/;"	m	struct:__anon4	typeref:struct:__anon4::sk_buff	file:	access:public
__anon4::timer	netfilter/ebt_ulog.c	/^	struct timer_list timer;	\/* the timer function *\/$/;"	m	struct:__anon4	typeref:struct:__anon4::timer_list	file:	access:public
__br_deliver	br_forward.c	/^static void __br_deliver(const struct net_bridge_port *to, struct sk_buff *skb)$/;"	f	file:	signature:(const struct net_bridge_port *to, struct sk_buff *skb)
__br_fdb_add	br_fdb.c	/^static int __br_fdb_add(struct ndmsg *ndm, struct net_bridge_port *p,$/;"	f	file:	signature:(struct ndmsg *ndm, struct net_bridge_port *p, const unsigned char *addr, u16 nlh_flags, u16 vid)
__br_fdb_delete	br_fdb.c	/^static int __br_fdb_delete(struct net_bridge_port *p,$/;"	f	file:	signature:(struct net_bridge_port *p, const unsigned char *addr, u16 vid)
__br_fdb_get	br_fdb.c	/^struct net_bridge_fdb_entry *__br_fdb_get(struct net_bridge *br,$/;"	f	signature:(struct net_bridge *br, const unsigned char *addr, __u16 vid)
__br_fdb_get	br_private.h	/^struct net_bridge_fdb_entry *__br_fdb_get(struct net_bridge *br,$/;"	p	signature:(struct net_bridge *br, const unsigned char *addr, __u16 vid)
__br_forward	br_forward.c	/^static void __br_forward(const struct net_bridge_port *to, struct sk_buff *skb)$/;"	f	file:	signature:(const struct net_bridge_port *to, struct sk_buff *skb)
__br_ip4_hash	br_multicast.c	/^static inline int __br_ip4_hash(struct net_bridge_mdb_htable *mdb, __be32 ip,$/;"	f	file:	signature:(struct net_bridge_mdb_htable *mdb, __be32 ip, __u16 vid)
__br_ip6_hash	br_multicast.c	/^static inline int __br_ip6_hash(struct net_bridge_mdb_htable *mdb,$/;"	f	file:	signature:(struct net_bridge_mdb_htable *mdb, const struct in6_addr *ip, __u16 vid)
__br_mdb_add	br_mdb.c	/^static int __br_mdb_add(struct net *net, struct net_bridge *br,$/;"	f	file:	signature:(struct net *net, struct net_bridge *br, struct br_mdb_entry *entry)
__br_mdb_del	br_mdb.c	/^static int __br_mdb_del(struct net_bridge *br, struct br_mdb_entry *entry)$/;"	f	file:	signature:(struct net_bridge *br, struct br_mdb_entry *entry)
__br_mdb_ip_get	br_multicast.c	/^static struct net_bridge_mdb_entry *__br_mdb_ip_get($/;"	f	file:	signature:( struct net_bridge_mdb_htable *mdb, struct br_ip *dst, int hash)
__br_mdb_notify	br_mdb.c	/^static void __br_mdb_notify(struct net_device *dev, struct br_mdb_entry *entry,$/;"	f	file:	signature:(struct net_device *dev, struct br_mdb_entry *entry, int type)
__br_multicast_open	br_multicast.c	/^static void __br_multicast_open(struct net_bridge *br,$/;"	f	file:	signature:(struct net_bridge *br, struct bridge_mcast_query *query)
__br_multicast_querier_exists	br_private.h	/^__br_multicast_querier_exists(struct net_bridge *br,$/;"	f	signature:(struct net_bridge *br, struct bridge_mcast_querier *querier)
__br_multicast_send_query	br_multicast.c	/^static void __br_multicast_send_query(struct net_bridge *br,$/;"	f	file:	signature:(struct net_bridge *br, struct net_bridge_port *port, struct br_ip *ip)
__br_netpoll_enable	br_device.c	/^static int __br_netpoll_enable(struct net_bridge_port *p, gfp_t gfp)$/;"	f	file:	signature:(struct net_bridge_port *p, gfp_t gfp)
__br_set_forward_delay	br_private.h	/^void __br_set_forward_delay(struct net_bridge *br, unsigned long t);$/;"	p	signature:(struct net_bridge *br, unsigned long t)
__br_set_forward_delay	br_stp.c	/^void __br_set_forward_delay(struct net_bridge *br, unsigned long t)$/;"	f	signature:(struct net_bridge *br, unsigned long t)
__read_mostly	br_fdb.c	/^static struct kmem_cache *br_fdb_cache __read_mostly;$/;"	v	typeref:struct:br_fdb_cache	file:
__read_mostly	br_fdb.c	/^static u32 fdb_salt __read_mostly;$/;"	v	file:
__read_mostly	br_input.c	/^br_should_route_hook_t __rcu *br_should_route_hook __read_mostly;$/;"	v
__read_mostly	br_netfilter.c	/^static int brnf_call_arptables __read_mostly = 1;$/;"	v	file:
__read_mostly	br_netfilter.c	/^static int brnf_call_ip6tables __read_mostly = 1;$/;"	v	file:
__read_mostly	br_netfilter.c	/^static int brnf_call_iptables __read_mostly = 1;$/;"	v	file:
__read_mostly	br_netfilter.c	/^static int brnf_filter_pppoe_tagged __read_mostly = 0;$/;"	v	file:
__read_mostly	br_netfilter.c	/^static int brnf_filter_vlan_tagged __read_mostly = 0;$/;"	v	file:
__read_mostly	br_netfilter.c	/^static int brnf_pass_vlan_indev __read_mostly = 0;$/;"	v	file:
__read_mostly	br_netfilter.c	/^static struct nf_hook_ops br_nf_ops[] __read_mostly = {$/;"	v	typeref:struct:br_nf_ops	file:
__read_mostly	br_netlink.c	/^struct rtnl_link_ops br_link_ops __read_mostly = {$/;"	v	typeref:struct:br_link_ops
__read_mostly	netfilter/ebt_802_3.c	/^static struct xt_match ebt_802_3_mt_reg __read_mostly = {$/;"	v	typeref:struct:ebt_802_3_mt_reg	file:
__read_mostly	netfilter/ebt_among.c	/^static struct xt_match ebt_among_mt_reg __read_mostly = {$/;"	v	typeref:struct:ebt_among_mt_reg	file:
__read_mostly	netfilter/ebt_arp.c	/^static struct xt_match ebt_arp_mt_reg __read_mostly = {$/;"	v	typeref:struct:ebt_arp_mt_reg	file:
__read_mostly	netfilter/ebt_arpreply.c	/^static struct xt_target ebt_arpreply_tg_reg __read_mostly = {$/;"	v	typeref:struct:ebt_arpreply_tg_reg	file:
__read_mostly	netfilter/ebt_dnat.c	/^static struct xt_target ebt_dnat_tg_reg __read_mostly = {$/;"	v	typeref:struct:ebt_dnat_tg_reg	file:
__read_mostly	netfilter/ebt_ip.c	/^static struct xt_match ebt_ip_mt_reg __read_mostly = {$/;"	v	typeref:struct:ebt_ip_mt_reg	file:
__read_mostly	netfilter/ebt_ip6.c	/^static struct xt_match ebt_ip6_mt_reg __read_mostly = {$/;"	v	typeref:struct:ebt_ip6_mt_reg	file:
__read_mostly	netfilter/ebt_limit.c	/^static struct xt_match ebt_limit_mt_reg __read_mostly = {$/;"	v	typeref:struct:ebt_limit_mt_reg	file:
__read_mostly	netfilter/ebt_log.c	/^static struct nf_logger ebt_log_logger __read_mostly = {$/;"	v	typeref:struct:ebt_log_logger	file:
__read_mostly	netfilter/ebt_log.c	/^static struct xt_target ebt_log_tg_reg __read_mostly = {$/;"	v	typeref:struct:ebt_log_tg_reg	file:
__read_mostly	netfilter/ebt_mark.c	/^static struct xt_target ebt_mark_tg_reg __read_mostly = {$/;"	v	typeref:struct:ebt_mark_tg_reg	file:
__read_mostly	netfilter/ebt_mark_m.c	/^static struct xt_match ebt_mark_mt_reg __read_mostly = {$/;"	v	typeref:struct:ebt_mark_mt_reg	file:
__read_mostly	netfilter/ebt_nflog.c	/^static struct xt_target ebt_nflog_tg_reg __read_mostly = {$/;"	v	typeref:struct:ebt_nflog_tg_reg	file:
__read_mostly	netfilter/ebt_pkttype.c	/^static struct xt_match ebt_pkttype_mt_reg __read_mostly = {$/;"	v	typeref:struct:ebt_pkttype_mt_reg	file:
__read_mostly	netfilter/ebt_redirect.c	/^static struct xt_target ebt_redirect_tg_reg __read_mostly = {$/;"	v	typeref:struct:ebt_redirect_tg_reg	file:
__read_mostly	netfilter/ebt_snat.c	/^static struct xt_target ebt_snat_tg_reg __read_mostly = {$/;"	v	typeref:struct:ebt_snat_tg_reg	file:
__read_mostly	netfilter/ebt_stp.c	/^static struct xt_match ebt_stp_mt_reg __read_mostly = {$/;"	v	typeref:struct:ebt_stp_mt_reg	file:
__read_mostly	netfilter/ebt_ulog.c	/^static int ebt_ulog_net_id __read_mostly;$/;"	v	file:
__read_mostly	netfilter/ebt_ulog.c	/^static struct nf_logger ebt_ulog_logger __read_mostly = {$/;"	v	typeref:struct:ebt_ulog_logger	file:
__read_mostly	netfilter/ebt_ulog.c	/^static struct xt_target ebt_ulog_tg_reg __read_mostly = {$/;"	v	typeref:struct:ebt_ulog_tg_reg	file:
__read_mostly	netfilter/ebt_vlan.c	/^static struct xt_match ebt_vlan_mt_reg __read_mostly = {$/;"	v	typeref:struct:ebt_vlan_mt_reg	file:
__read_mostly	netfilter/ebtable_filter.c	/^static struct nf_hook_ops ebt_ops_filter[] __read_mostly = {$/;"	v	typeref:struct:ebt_ops_filter	file:
__read_mostly	netfilter/ebtable_nat.c	/^static struct nf_hook_ops ebt_ops_nat[] __read_mostly = {$/;"	v	typeref:struct:ebt_ops_nat	file:
__read_mostly	netfilter/nf_tables_bridge.c	/^static struct nft_af_info nft_af_bridge __read_mostly = {$/;"	v	typeref:struct:nft_af_bridge	file:
__vlan_add	br_vlan.c	/^static int __vlan_add(struct net_port_vlans *v, u16 vid, u16 flags)$/;"	f	file:	signature:(struct net_port_vlans *v, u16 vid, u16 flags)
__vlan_add_flags	br_vlan.c	/^static void __vlan_add_flags(struct net_port_vlans *v, u16 vid, u16 flags)$/;"	f	file:	signature:(struct net_port_vlans *v, u16 vid, u16 flags)
__vlan_add_pvid	br_vlan.c	/^static void __vlan_add_pvid(struct net_port_vlans *v, u16 vid)$/;"	f	file:	signature:(struct net_port_vlans *v, u16 vid)
__vlan_del	br_vlan.c	/^static int __vlan_del(struct net_port_vlans *v, u16 vid)$/;"	f	file:	signature:(struct net_port_vlans *v, u16 vid)
__vlan_delete_pvid	br_vlan.c	/^static void __vlan_delete_pvid(struct net_port_vlans *v, u16 vid)$/;"	f	file:	signature:(struct net_port_vlans *v, u16 vid)
__vlan_flush	br_vlan.c	/^static void __vlan_flush(struct net_port_vlans *v)$/;"	f	file:	signature:(struct net_port_vlans *v)
add_del_if	br_ioctl.c	/^static int add_del_if(struct net_bridge *br, int ifindex, int isadd)$/;"	f	file:	signature:(struct net_bridge *br, int ifindex, int isadd)
added_by_user	br_private.h	/^	unsigned char			added_by_user;$/;"	m	struct:net_bridge_fdb_entry	access:public
addr	br_private.h	/^	mac_addr			addr;$/;"	m	struct:net_bridge_fdb_entry	access:public
addr	br_private.h	/^	struct br_ip			addr;$/;"	m	struct:net_bridge_mdb_entry	typeref:struct:net_bridge_mdb_entry::br_ip	access:public
addr	br_private.h	/^	struct br_ip			addr;$/;"	m	struct:net_bridge_port_group	typeref:struct:net_bridge_port_group::br_ip	access:public
addr	br_private.h	/^	unsigned char	addr[6];$/;"	m	struct:bridge_id	access:public
addr	br_private.h	/^	unsigned char	addr[6];$/;"	m	struct:mac_addr	access:public
ageing_time	br_private.h	/^	unsigned long			ageing_time;$/;"	m	struct:net_bridge	access:public
ageing_time_show	br_sysfs_br.c	/^static ssize_t ageing_time_show(struct device *d,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, char *buf)
ageing_time_store	br_sysfs_br.c	/^static ssize_t ageing_time_store(struct device *d,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, const char *buf, size_t len)
arppayload	netfilter/ebt_log.c	/^struct arppayload$/;"	s	file:
arppayload::ip_dst	netfilter/ebt_log.c	/^	unsigned char ip_dst[4];$/;"	m	struct:arppayload	file:	access:public
arppayload::ip_src	netfilter/ebt_log.c	/^	unsigned char ip_src[4];$/;"	m	struct:arppayload	file:	access:public
arppayload::mac_dst	netfilter/ebt_log.c	/^	unsigned char mac_dst[ETH_ALEN];$/;"	m	struct:arppayload	file:	access:public
arppayload::mac_src	netfilter/ebt_log.c	/^	unsigned char mac_src[ETH_ALEN];$/;"	m	struct:arppayload	file:	access:public
attr	br_sysfs_if.c	/^	struct attribute	attr;$/;"	m	struct:brport_attribute	typeref:struct:brport_attribute::attribute	file:	access:public
avg	netfilter/ebt_limit.c	/^	compat_uint_t avg, burst;$/;"	m	struct:ebt_compat_limit_info	file:	access:public
bitmask	netfilter/ebt_mark_m.c	/^	uint8_t invert, bitmask;$/;"	m	struct:compat_ebt_mark_m_info	file:	access:public
br	br_private.h	/^		struct net_bridge		*br;$/;"	m	union:net_port_vlans::__anon2	typeref:struct:net_port_vlans::__anon2::net_bridge	access:public
br	br_private.h	/^	struct net_bridge		*br;$/;"	m	struct:net_bridge_mdb_entry	typeref:struct:net_bridge_mdb_entry::net_bridge	access:public
br	br_private.h	/^	struct net_bridge		*br;$/;"	m	struct:net_bridge_port	typeref:struct:net_bridge_port::net_bridge	access:public
br_add_bridge	br_if.c	/^int br_add_bridge(struct net *net, const char *name)$/;"	f	signature:(struct net *net, const char *name)
br_add_bridge	br_private.h	/^int br_add_bridge(struct net *net, const char *name);$/;"	p	signature:(struct net *net, const char *name)
br_add_if	br_if.c	/^int br_add_if(struct net_bridge *br, struct net_device *dev)$/;"	f	signature:(struct net_bridge *br, struct net_device *dev)
br_add_if	br_private.h	/^int br_add_if(struct net_bridge *br, struct net_device *dev);$/;"	p	signature:(struct net_bridge *br, struct net_device *dev)
br_add_slave	br_device.c	/^static int br_add_slave(struct net_device *dev, struct net_device *slave_dev)$/;"	f	file:	signature:(struct net_device *dev, struct net_device *slave_dev)
br_af_ops	br_netlink.c	/^static struct rtnl_af_ops br_af_ops = {$/;"	v	typeref:struct:rtnl_af_ops	file:
br_afspec	br_netlink.c	/^static int br_afspec(struct net_bridge *br,$/;"	f	file:	signature:(struct net_bridge *br, struct net_bridge_port *p, struct nlattr *af_spec, int cmd)
br_allowed_egress	br_private.h	/^bool br_allowed_egress(struct net_bridge *br, const struct net_port_vlans *v,$/;"	p	signature:(struct net_bridge *br, const struct net_port_vlans *v, const struct sk_buff *skb)
br_allowed_egress	br_private.h	/^static inline bool br_allowed_egress(struct net_bridge *br,$/;"	f	signature:(struct net_bridge *br, const struct net_port_vlans *v, const struct sk_buff *skb)
br_allowed_egress	br_vlan.c	/^bool br_allowed_egress(struct net_bridge *br,$/;"	f	signature:(struct net_bridge *br, const struct net_port_vlans *v, const struct sk_buff *skb)
br_allowed_ingress	br_private.h	/^bool br_allowed_ingress(struct net_bridge *br, struct net_port_vlans *v,$/;"	p	signature:(struct net_bridge *br, struct net_port_vlans *v, struct sk_buff *skb, u16 *vid)
br_allowed_ingress	br_private.h	/^static inline bool br_allowed_ingress(struct net_bridge *br,$/;"	f	signature:(struct net_bridge *br, struct net_port_vlans *v, struct sk_buff *skb, u16 *vid)
br_allowed_ingress	br_vlan.c	/^bool br_allowed_ingress(struct net_bridge *br, struct net_port_vlans *v,$/;"	f	signature:(struct net_bridge *br, struct net_port_vlans *v, struct sk_buff *skb, u16 *vid)
br_become_designated_port	br_private.h	/^void br_become_designated_port(struct net_bridge_port *p);$/;"	p	signature:(struct net_bridge_port *p)
br_become_designated_port	br_stp.c	/^void br_become_designated_port(struct net_bridge_port *p)$/;"	f	signature:(struct net_bridge_port *p)
br_become_root_bridge	br_private_stp.h	/^void br_become_root_bridge(struct net_bridge *br);$/;"	p	signature:(struct net_bridge *br)
br_become_root_bridge	br_stp.c	/^void br_become_root_bridge(struct net_bridge *br)$/;"	f	signature:(struct net_bridge *br)
br_change_mtu	br_device.c	/^static int br_change_mtu(struct net_device *dev, int new_mtu)$/;"	f	file:	signature:(struct net_device *dev, int new_mtu)
br_config_bpdu	br_private_stp.h	/^struct br_config_bpdu {$/;"	s
br_config_bpdu::bridge_id	br_private_stp.h	/^	bridge_id	bridge_id;$/;"	m	struct:br_config_bpdu	access:public
br_config_bpdu::forward_delay	br_private_stp.h	/^	int		forward_delay;$/;"	m	struct:br_config_bpdu	access:public
br_config_bpdu::hello_time	br_private_stp.h	/^	int		hello_time;$/;"	m	struct:br_config_bpdu	access:public
br_config_bpdu::max_age	br_private_stp.h	/^	int		max_age;$/;"	m	struct:br_config_bpdu	access:public
br_config_bpdu::message_age	br_private_stp.h	/^	int		message_age;$/;"	m	struct:br_config_bpdu	access:public
br_config_bpdu::port_id	br_private_stp.h	/^	port_id		port_id;$/;"	m	struct:br_config_bpdu	access:public
br_config_bpdu::root	br_private_stp.h	/^	bridge_id	root;$/;"	m	struct:br_config_bpdu	access:public
br_config_bpdu::root_path_cost	br_private_stp.h	/^	int		root_path_cost;$/;"	m	struct:br_config_bpdu	access:public
br_config_bpdu::topology_change	br_private_stp.h	/^	unsigned int	topology_change:1;$/;"	m	struct:br_config_bpdu	access:public
br_config_bpdu::topology_change_ack	br_private_stp.h	/^	unsigned int	topology_change_ack:1;$/;"	m	struct:br_config_bpdu	access:public
br_config_bpdu_generation	br_private_stp.h	/^void br_config_bpdu_generation(struct net_bridge *);$/;"	p	signature:(struct net_bridge *)
br_config_bpdu_generation	br_stp.c	/^void br_config_bpdu_generation(struct net_bridge *br)$/;"	f	signature:(struct net_bridge *br)
br_configuration_update	br_private_stp.h	/^void br_configuration_update(struct net_bridge *);$/;"	p	signature:(struct net_bridge *)
br_configuration_update	br_stp.c	/^void br_configuration_update(struct net_bridge *br)$/;"	f	signature:(struct net_bridge *br)
br_debug	br_private.h	330;"	d
br_deinit	br.c	/^static void __exit br_deinit(void)$/;"	f	file:	signature:(void)
br_del_bridge	br_if.c	/^int br_del_bridge(struct net *net, const char *name)$/;"	f	signature:(struct net *net, const char *name)
br_del_bridge	br_private.h	/^int br_del_bridge(struct net *net, const char *name);$/;"	p	signature:(struct net *net, const char *name)
br_del_if	br_if.c	/^int br_del_if(struct net_bridge *br, struct net_device *dev)$/;"	f	signature:(struct net_bridge *br, struct net_device *dev)
br_del_if	br_private.h	/^int br_del_if(struct net_bridge *br, struct net_device *dev);$/;"	p	signature:(struct net_bridge *br, struct net_device *dev)
br_del_slave	br_device.c	/^static int br_del_slave(struct net_device *dev, struct net_device *slave_dev)$/;"	f	file:	signature:(struct net_device *dev, struct net_device *slave_dev)
br_deliver	br_forward.c	/^void br_deliver(const struct net_bridge_port *to, struct sk_buff *skb)$/;"	f	signature:(const struct net_bridge_port *to, struct sk_buff *skb)
br_deliver	br_private.h	/^void br_deliver(const struct net_bridge_port *to, struct sk_buff *skb);$/;"	p	signature:(const struct net_bridge_port *to, struct sk_buff *skb)
br_dellink	br_netlink.c	/^int br_dellink(struct net_device *dev, struct nlmsghdr *nlh)$/;"	f	signature:(struct net_device *dev, struct nlmsghdr *nlh)
br_dellink	br_private.h	/^int br_dellink(struct net_device *dev, struct nlmsghdr *nlmsg);$/;"	p	signature:(struct net_device *dev, struct nlmsghdr *nlmsg)
br_designated_port_selection	br_stp.c	/^static void br_designated_port_selection(struct net_bridge *br)$/;"	f	file:	signature:(struct net_bridge *br)
br_dev_delete	br_if.c	/^void br_dev_delete(struct net_device *dev, struct list_head *head)$/;"	f	signature:(struct net_device *dev, struct list_head *head)
br_dev_delete	br_private.h	/^void br_dev_delete(struct net_device *dev, struct list_head *list);$/;"	p	signature:(struct net_device *dev, struct list_head *list)
br_dev_free	br_device.c	/^static void br_dev_free(struct net_device *dev)$/;"	f	file:	signature:(struct net_device *dev)
br_dev_init	br_device.c	/^static int br_dev_init(struct net_device *dev)$/;"	f	file:	signature:(struct net_device *dev)
br_dev_ioctl	br_ioctl.c	/^int br_dev_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)$/;"	f	signature:(struct net_device *dev, struct ifreq *rq, int cmd)
br_dev_ioctl	br_private.h	/^int br_dev_ioctl(struct net_device *dev, struct ifreq *rq, int cmd);$/;"	p	signature:(struct net_device *dev, struct ifreq *rq, int cmd)
br_dev_newlink	br_netlink.c	/^static int br_dev_newlink(struct net *src_net, struct net_device *dev,$/;"	f	file:	signature:(struct net *src_net, struct net_device *dev, struct nlattr *tb[], struct nlattr *data[])
br_dev_open	br_device.c	/^static int br_dev_open(struct net_device *dev)$/;"	f	file:	signature:(struct net_device *dev)
br_dev_queue_push_xmit	br_forward.c	/^int br_dev_queue_push_xmit(struct sk_buff *skb)$/;"	f	signature:(struct sk_buff *skb)
br_dev_queue_push_xmit	br_private.h	/^int br_dev_queue_push_xmit(struct sk_buff *skb);$/;"	p	signature:(struct sk_buff *skb)
br_dev_set_multicast_list	br_device.c	/^static void br_dev_set_multicast_list(struct net_device *dev)$/;"	f	file:	signature:(struct net_device *dev)
br_dev_setup	br_device.c	/^void br_dev_setup(struct net_device *dev)$/;"	f	signature:(struct net_device *dev)
br_dev_setup	br_private.h	/^void br_dev_setup(struct net_device *dev);$/;"	p	signature:(struct net_device *dev)
br_dev_stop	br_device.c	/^static int br_dev_stop(struct net_device *dev)$/;"	f	file:	signature:(struct net_device *dev)
br_dev_xmit	br_device.c	/^netdev_tx_t br_dev_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	signature:(struct sk_buff *skb, struct net_device *dev)
br_dev_xmit	br_private.h	/^netdev_tx_t br_dev_xmit(struct sk_buff *skb, struct net_device *dev);$/;"	p	signature:(struct sk_buff *skb, struct net_device *dev)
br_device_event	br_notify.c	/^static int br_device_event(struct notifier_block *unused, unsigned long event, void *ptr)$/;"	f	file:	signature:(struct notifier_block *unused, unsigned long event, void *ptr)
br_device_event	br_notify.c	/^static int br_device_event(struct notifier_block *unused, unsigned long event, void *ptr);$/;"	p	file:	signature:(struct notifier_block *unused, unsigned long event, void *ptr)
br_device_notifier	br_notify.c	/^struct notifier_block br_device_notifier = {$/;"	v	typeref:struct:notifier_block
br_dst_default_metrics	br_netfilter.c	/^static const u32 br_dst_default_metrics[RTAX_MAX] = {$/;"	v	file:
br_err	br_private.h	321;"	d
br_ethtool_ops	br_device.c	/^static const struct ethtool_ops br_ethtool_ops = {$/;"	v	typeref:struct:ethtool_ops	file:
br_fdb_add	br_fdb.c	/^int br_fdb_add(struct ndmsg *ndm, struct nlattr *tb[],$/;"	f	signature:(struct ndmsg *ndm, struct nlattr *tb[], struct net_device *dev, const unsigned char *addr, u16 nlh_flags)
br_fdb_add	br_private.h	/^int br_fdb_add(struct ndmsg *nlh, struct nlattr *tb[], struct net_device *dev,$/;"	p	signature:(struct ndmsg *nlh, struct nlattr *tb[], struct net_device *dev, const unsigned char *addr, u16 nlh_flags)
br_fdb_change_mac_address	br_fdb.c	/^void br_fdb_change_mac_address(struct net_bridge *br, const u8 *newaddr)$/;"	f	signature:(struct net_bridge *br, const u8 *newaddr)
br_fdb_change_mac_address	br_private.h	/^void br_fdb_change_mac_address(struct net_bridge *br, const u8 *newaddr);$/;"	p	signature:(struct net_bridge *br, const u8 *newaddr)
br_fdb_changeaddr	br_fdb.c	/^void br_fdb_changeaddr(struct net_bridge_port *p, const unsigned char *newaddr)$/;"	f	signature:(struct net_bridge_port *p, const unsigned char *newaddr)
br_fdb_changeaddr	br_private.h	/^void br_fdb_changeaddr(struct net_bridge_port *p, const unsigned char *newaddr);$/;"	p	signature:(struct net_bridge_port *p, const unsigned char *newaddr)
br_fdb_cleanup	br_fdb.c	/^void br_fdb_cleanup(unsigned long _data)$/;"	f	signature:(unsigned long _data)
br_fdb_cleanup	br_private.h	/^void br_fdb_cleanup(unsigned long arg);$/;"	p	signature:(unsigned long arg)
br_fdb_delete	br_fdb.c	/^int br_fdb_delete(struct ndmsg *ndm, struct nlattr *tb[],$/;"	f	signature:(struct ndmsg *ndm, struct nlattr *tb[], struct net_device *dev, const unsigned char *addr)
br_fdb_delete	br_private.h	/^int br_fdb_delete(struct ndmsg *ndm, struct nlattr *tb[],$/;"	p	signature:(struct ndmsg *ndm, struct nlattr *tb[], struct net_device *dev, const unsigned char *addr)
br_fdb_delete_by_port	br_fdb.c	/^void br_fdb_delete_by_port(struct net_bridge *br,$/;"	f	signature:(struct net_bridge *br, const struct net_bridge_port *p, int do_all)
br_fdb_delete_by_port	br_private.h	/^void br_fdb_delete_by_port(struct net_bridge *br,$/;"	p	signature:(struct net_bridge *br, const struct net_bridge_port *p, int do_all)
br_fdb_dump	br_fdb.c	/^int br_fdb_dump(struct sk_buff *skb,$/;"	f	signature:(struct sk_buff *skb, struct netlink_callback *cb, struct net_device *dev, int idx)
br_fdb_dump	br_private.h	/^int br_fdb_dump(struct sk_buff *skb, struct netlink_callback *cb,$/;"	p	signature:(struct sk_buff *skb, struct netlink_callback *cb, struct net_device *dev, int idx)
br_fdb_fillbuf	br_fdb.c	/^int br_fdb_fillbuf(struct net_bridge *br, void *buf,$/;"	f	signature:(struct net_bridge *br, void *buf, unsigned long maxnum, unsigned long skip)
br_fdb_fillbuf	br_private.h	/^int br_fdb_fillbuf(struct net_bridge *br, void *buf, unsigned long count,$/;"	p	signature:(struct net_bridge *br, void *buf, unsigned long count, unsigned long off)
br_fdb_find_delete_local	br_fdb.c	/^void br_fdb_find_delete_local(struct net_bridge *br,$/;"	f	signature:(struct net_bridge *br, const struct net_bridge_port *p, const unsigned char *addr, u16 vid)
br_fdb_find_delete_local	br_private.h	/^void br_fdb_find_delete_local(struct net_bridge *br,$/;"	p	signature:(struct net_bridge *br, const struct net_bridge_port *p, const unsigned char *addr, u16 vid)
br_fdb_fini	br_fdb.c	/^void br_fdb_fini(void)$/;"	f	signature:(void)
br_fdb_fini	br_private.h	/^void br_fdb_fini(void);$/;"	p	signature:(void)
br_fdb_flush	br_fdb.c	/^void br_fdb_flush(struct net_bridge *br)$/;"	f	signature:(struct net_bridge *br)
br_fdb_flush	br_private.h	/^void br_fdb_flush(struct net_bridge *br);$/;"	p	signature:(struct net_bridge *br)
br_fdb_init	br_fdb.c	/^int __init br_fdb_init(void)$/;"	f	signature:(void)
br_fdb_init	br_private.h	/^int br_fdb_init(void);$/;"	p	signature:(void)
br_fdb_insert	br_fdb.c	/^int br_fdb_insert(struct net_bridge *br, struct net_bridge_port *source,$/;"	f	signature:(struct net_bridge *br, struct net_bridge_port *source, const unsigned char *addr, u16 vid)
br_fdb_insert	br_private.h	/^int br_fdb_insert(struct net_bridge *br, struct net_bridge_port *source,$/;"	p	signature:(struct net_bridge *br, struct net_bridge_port *source, const unsigned char *addr, u16 vid)
br_fdb_test_addr	br_fdb.c	/^int br_fdb_test_addr(struct net_device *dev, unsigned char *addr)$/;"	f	signature:(struct net_device *dev, unsigned char *addr)
br_fdb_test_addr	br_private.h	/^int br_fdb_test_addr(struct net_device *dev, unsigned char *addr);$/;"	p	signature:(struct net_device *dev, unsigned char *addr)
br_fdb_update	br_fdb.c	/^void br_fdb_update(struct net_bridge *br, struct net_bridge_port *source,$/;"	f	signature:(struct net_bridge *br, struct net_bridge_port *source, const unsigned char *addr, u16 vid, bool added_by_user)
br_fdb_update	br_private.h	/^void br_fdb_update(struct net_bridge *br, struct net_bridge_port *source,$/;"	p	signature:(struct net_bridge *br, struct net_bridge_port *source, const unsigned char *addr, u16 vid, bool added_by_user)
br_features_recompute	br_if.c	/^netdev_features_t br_features_recompute(struct net_bridge *br,$/;"	f	signature:(struct net_bridge *br, netdev_features_t features)
br_features_recompute	br_private.h	/^netdev_features_t br_features_recompute(struct net_bridge *br,$/;"	p	signature:(struct net_bridge *br, netdev_features_t features)
br_fill_ifinfo	br_netlink.c	/^static int br_fill_ifinfo(struct sk_buff *skb,$/;"	f	file:	signature:(struct sk_buff *skb, const struct net_bridge_port *port, u32 pid, u32 seq, int event, unsigned int flags, u32 filter_mask, const struct net_device *dev)
br_fix_features	br_device.c	/^static netdev_features_t br_fix_features(struct net_device *dev,$/;"	f	file:	signature:(struct net_device *dev, netdev_features_t features)
br_flood	br_forward.c	/^static void br_flood(struct net_bridge *br, struct sk_buff *skb,$/;"	f	file:	signature:(struct net_bridge *br, struct sk_buff *skb, struct sk_buff *skb0, void (*__packet_hook)(const struct net_bridge_port *p, struct sk_buff *skb), bool unicast)
br_flood_deliver	br_forward.c	/^void br_flood_deliver(struct net_bridge *br, struct sk_buff *skb, bool unicast)$/;"	f	signature:(struct net_bridge *br, struct sk_buff *skb, bool unicast)
br_flood_deliver	br_private.h	/^void br_flood_deliver(struct net_bridge *br, struct sk_buff *skb, bool unicast);$/;"	p	signature:(struct net_bridge *br, struct sk_buff *skb, bool unicast)
br_flood_forward	br_forward.c	/^void br_flood_forward(struct net_bridge *br, struct sk_buff *skb,$/;"	f	signature:(struct net_bridge *br, struct sk_buff *skb, struct sk_buff *skb2, bool unicast)
br_flood_forward	br_private.h	/^void br_flood_forward(struct net_bridge *br, struct sk_buff *skb,$/;"	p	signature:(struct net_bridge *br, struct sk_buff *skb, struct sk_buff *skb2, bool unicast)
br_forward	br_forward.c	/^void br_forward(const struct net_bridge_port *to, struct sk_buff *skb, struct sk_buff *skb0)$/;"	f	signature:(const struct net_bridge_port *to, struct sk_buff *skb, struct sk_buff *skb0)
br_forward	br_private.h	/^void br_forward(const struct net_bridge_port *to,$/;"	p	signature:(const struct net_bridge_port *to, struct sk_buff *skb, struct sk_buff *skb0)
br_forward_delay_timer_expired	br_stp_timer.c	/^static void br_forward_delay_timer_expired(unsigned long arg)$/;"	f	file:	signature:(unsigned long arg)
br_forward_finish	br_forward.c	/^int br_forward_finish(struct sk_buff *skb)$/;"	f	signature:(struct sk_buff *skb)
br_forward_finish	br_private.h	/^int br_forward_finish(struct sk_buff *skb);$/;"	p	signature:(struct sk_buff *skb)
br_get_link_af_size	br_netlink.c	/^static size_t br_get_link_af_size(const struct net_device *dev)$/;"	f	file:	signature:(const struct net_device *dev)
br_get_port	br_private.h	/^struct net_bridge_port *br_get_port(struct net_bridge *br, u16 port_no);$/;"	p	signature:(struct net_bridge *br, u16 port_no)
br_get_port	br_stp.c	/^struct net_bridge_port *br_get_port(struct net_bridge *br, u16 port_no)$/;"	f	signature:(struct net_bridge *br, u16 port_no)
br_get_pvid	br_private.h	/^static inline u16 br_get_pvid(const struct net_port_vlans *v)$/;"	f	signature:(const struct net_port_vlans *v)
br_get_stats64	br_device.c	/^static struct rtnl_link_stats64 *br_get_stats64(struct net_device *dev,$/;"	f	file:	signature:(struct net_device *dev, struct rtnl_link_stats64 *stats)
br_get_ticks	br_stp_bpdu.c	/^static inline int br_get_ticks(const unsigned char *src)$/;"	f	file:	signature:(const unsigned char *src)
br_get_vlan_info	br_private.h	/^static inline struct net_port_vlans *br_get_vlan_info($/;"	f	signature:( const struct net_bridge *br)
br_getinfo	br_device.c	/^static void br_getinfo(struct net_device *dev, struct ethtool_drvinfo *info)$/;"	f	file:	signature:(struct net_device *dev, struct ethtool_drvinfo *info)
br_getlink	br_netlink.c	/^int br_getlink(struct sk_buff *skb, u32 pid, u32 seq,$/;"	f	signature:(struct sk_buff *skb, u32 pid, u32 seq, struct net_device *dev, u32 filter_mask)
br_getlink	br_private.h	/^int br_getlink(struct sk_buff *skb, u32 pid, u32 seq, struct net_device *dev,$/;"	p	signature:(struct sk_buff *skb, u32 pid, u32 seq, struct net_device *dev, u32 filter_mask)
br_handle_frame	br_input.c	/^rx_handler_result_t br_handle_frame(struct sk_buff **pskb)$/;"	f	signature:(struct sk_buff **pskb)
br_handle_frame	br_private.h	/^rx_handler_result_t br_handle_frame(struct sk_buff **pskb);$/;"	p	signature:(struct sk_buff **pskb)
br_handle_frame_finish	br_input.c	/^int br_handle_frame_finish(struct sk_buff *skb)$/;"	f	signature:(struct sk_buff *skb)
br_handle_frame_finish	br_private.h	/^int br_handle_frame_finish(struct sk_buff *skb);$/;"	p	signature:(struct sk_buff *skb)
br_handle_local_finish	br_input.c	/^static int br_handle_local_finish(struct sk_buff *skb)$/;"	f	file:	signature:(struct sk_buff *skb)
br_handle_vlan	br_private.h	/^static inline struct sk_buff *br_handle_vlan(struct net_bridge *br,$/;"	f	signature:(struct net_bridge *br, const struct net_port_vlans *v, struct sk_buff *skb)
br_handle_vlan	br_private.h	/^struct sk_buff *br_handle_vlan(struct net_bridge *br,$/;"	p	signature:(struct net_bridge *br, const struct net_port_vlans *v, struct sk_buff *skb)
br_handle_vlan	br_vlan.c	/^struct sk_buff *br_handle_vlan(struct net_bridge *br,$/;"	f	signature:(struct net_bridge *br, const struct net_port_vlans *pv, struct sk_buff *skb)
br_hello_timer_expired	br_stp_timer.c	/^static void br_hello_timer_expired(unsigned long arg)$/;"	f	file:	signature:(unsigned long arg)
br_hold_timer_expired	br_stp_timer.c	/^static void br_hold_timer_expired(unsigned long arg)$/;"	f	file:	signature:(unsigned long arg)
br_ifinfo_notify	br_netlink.c	/^void br_ifinfo_notify(int event, struct net_bridge_port *port)$/;"	f	signature:(int event, struct net_bridge_port *port)
br_ifinfo_notify	br_private.h	/^void br_ifinfo_notify(int event, struct net_bridge_port *port);$/;"	p	signature:(int event, struct net_bridge_port *port)
br_info	br_private.h	327;"	d
br_init	br.c	/^static int __init br_init(void)$/;"	f	file:	signature:(void)
br_init_port	br_private.h	/^void br_init_port(struct net_bridge_port *p);$/;"	p	signature:(struct net_bridge_port *p)
br_init_port	br_stp_if.c	/^void br_init_port(struct net_bridge_port *p)$/;"	f	signature:(struct net_bridge_port *p)
br_input_skb_cb	br_private.h	/^struct br_input_skb_cb {$/;"	s
br_input_skb_cb::brdev	br_private.h	/^	struct net_device *brdev;$/;"	m	struct:br_input_skb_cb	typeref:struct:br_input_skb_cb::net_device	access:public
br_input_skb_cb::igmp	br_private.h	/^	int igmp;$/;"	m	struct:br_input_skb_cb	access:public
br_input_skb_cb::mrouters_only	br_private.h	/^	int mrouters_only;$/;"	m	struct:br_input_skb_cb	access:public
br_input_skb_cb::vlan_filtered	br_private.h	/^	bool vlan_filtered;$/;"	m	struct:br_input_skb_cb	access:public
br_ioctl_deviceless_stub	br_ioctl.c	/^int br_ioctl_deviceless_stub(struct net *net, unsigned int cmd, void __user *uarg)$/;"	f	signature:(struct net *net, unsigned int cmd, void __user *uarg)
br_ioctl_deviceless_stub	br_private.h	/^int br_ioctl_deviceless_stub(struct net *net, unsigned int cmd,$/;"	p	signature:(struct net *net, unsigned int cmd, void __user *arg)
br_ip	br_private.h	/^struct br_ip$/;"	s
br_ip4_multicast_add_group	br_multicast.c	/^static int br_ip4_multicast_add_group(struct net_bridge *br,$/;"	f	file:	signature:(struct net_bridge *br, struct net_bridge_port *port, __be32 group, __u16 vid)
br_ip4_multicast_alloc_query	br_multicast.c	/^static struct sk_buff *br_ip4_multicast_alloc_query(struct net_bridge *br,$/;"	f	file:	signature:(struct net_bridge *br, __be32 group)
br_ip4_multicast_igmp3_report	br_multicast.c	/^static int br_ip4_multicast_igmp3_report(struct net_bridge *br,$/;"	f	file:	signature:(struct net_bridge *br, struct net_bridge_port *port, struct sk_buff *skb, u16 vid)
br_ip4_multicast_leave_group	br_multicast.c	/^static void br_ip4_multicast_leave_group(struct net_bridge *br,$/;"	f	file:	signature:(struct net_bridge *br, struct net_bridge_port *port, __be32 group, __u16 vid)
br_ip4_multicast_port_query_expired	br_multicast.c	/^static void br_ip4_multicast_port_query_expired(unsigned long data)$/;"	f	file:	signature:(unsigned long data)
br_ip4_multicast_querier_expired	br_multicast.c	/^static void br_ip4_multicast_querier_expired(unsigned long data)$/;"	f	file:	signature:(unsigned long data)
br_ip4_multicast_query	br_multicast.c	/^static int br_ip4_multicast_query(struct net_bridge *br,$/;"	f	file:	signature:(struct net_bridge *br, struct net_bridge_port *port, struct sk_buff *skb, u16 vid)
br_ip4_multicast_query_expired	br_multicast.c	/^static void br_ip4_multicast_query_expired(unsigned long data)$/;"	f	file:	signature:(unsigned long data)
br_ip6_multicast_add_group	br_multicast.c	/^static int br_ip6_multicast_add_group(struct net_bridge *br,$/;"	f	file:	signature:(struct net_bridge *br, struct net_bridge_port *port, const struct in6_addr *group, __u16 vid)
br_ip6_multicast_alloc_query	br_multicast.c	/^static struct sk_buff *br_ip6_multicast_alloc_query(struct net_bridge *br,$/;"	f	file:	signature:(struct net_bridge *br, const struct in6_addr *group)
br_ip6_multicast_leave_group	br_multicast.c	/^static void br_ip6_multicast_leave_group(struct net_bridge *br,$/;"	f	file:	signature:(struct net_bridge *br, struct net_bridge_port *port, const struct in6_addr *group, __u16 vid)
br_ip6_multicast_mld2_report	br_multicast.c	/^static int br_ip6_multicast_mld2_report(struct net_bridge *br,$/;"	f	file:	signature:(struct net_bridge *br, struct net_bridge_port *port, struct sk_buff *skb, u16 vid)
br_ip6_multicast_port_query_expired	br_multicast.c	/^static void br_ip6_multicast_port_query_expired(unsigned long data)$/;"	f	file:	signature:(unsigned long data)
br_ip6_multicast_querier_expired	br_multicast.c	/^static void br_ip6_multicast_querier_expired(unsigned long data)$/;"	f	file:	signature:(unsigned long data)
br_ip6_multicast_query	br_multicast.c	/^static int br_ip6_multicast_query(struct net_bridge *br,$/;"	f	file:	signature:(struct net_bridge *br, struct net_bridge_port *port, struct sk_buff *skb, u16 vid)
br_ip6_multicast_query_expired	br_multicast.c	/^static void br_ip6_multicast_query_expired(unsigned long data)$/;"	f	file:	signature:(unsigned long data)
br_ip::__anon1::ip4	br_private.h	/^		__be32	ip4;$/;"	m	union:br_ip::__anon1	access:public
br_ip::__anon1::ip6	br_private.h	/^		struct in6_addr ip6;$/;"	m	union:br_ip::__anon1	typeref:struct:br_ip::__anon1::in6_addr	access:public
br_ip::proto	br_private.h	/^	__be16		proto;$/;"	m	struct:br_ip	access:public
br_ip::u	br_private.h	/^	} u;$/;"	m	struct:br_ip	typeref:union:br_ip::__anon1	access:public
br_ip::vid	br_private.h	/^	__u16		vid;$/;"	m	struct:br_ip	access:public
br_ip_equal	br_multicast.c	/^static inline int br_ip_equal(const struct br_ip *a, const struct br_ip *b)$/;"	f	file:	signature:(const struct br_ip *a, const struct br_ip *b)
br_ip_hash	br_multicast.c	/^static inline int br_ip_hash(struct net_bridge_mdb_htable *mdb,$/;"	f	file:	signature:(struct net_bridge_mdb_htable *mdb, struct br_ip *ip)
br_is_designated_for_some_port	br_stp_timer.c	/^static int br_is_designated_for_some_port(const struct net_bridge *br)$/;"	f	file:	signature:(const struct net_bridge *br)
br_is_designated_port	br_private_stp.h	/^static inline int br_is_designated_port(const struct net_bridge_port *p)$/;"	f	signature:(const struct net_bridge_port *p)
br_is_root_bridge	br_private.h	/^static inline int br_is_root_bridge(const struct net_bridge *br)$/;"	f	signature:(const struct net_bridge *br)
br_log_state	br_private.h	/^void br_log_state(const struct net_bridge_port *p);$/;"	p	signature:(const struct net_bridge_port *p)
br_log_state	br_stp.c	/^void br_log_state(const struct net_bridge_port *p)$/;"	f	signature:(const struct net_bridge_port *p)
br_mac_hash	br_fdb.c	/^static inline int br_mac_hash(const unsigned char *mac, __u16 vid)$/;"	f	file:	signature:(const unsigned char *mac, __u16 vid)
br_mac_zero_aligned	br_stp_if.c	/^static const unsigned short br_mac_zero_aligned[ETH_ALEN >> 1];$/;"	v	file:
br_make_blocking	br_stp.c	/^static void br_make_blocking(struct net_bridge_port *p)$/;"	f	file:	signature:(struct net_bridge_port *p)
br_make_forwarding	br_stp.c	/^static void br_make_forwarding(struct net_bridge_port *p)$/;"	f	file:	signature:(struct net_bridge_port *p)
br_make_port_id	br_stp_if.c	/^static inline port_id br_make_port_id(__u8 priority, __u16 port_no)$/;"	f	file:	signature:(__u8 priority, __u16 port_no)
br_mdb_add	br_mdb.c	/^static int br_mdb_add(struct sk_buff *skb, struct nlmsghdr *nlh)$/;"	f	file:	signature:(struct sk_buff *skb, struct nlmsghdr *nlh)
br_mdb_add_group	br_mdb.c	/^static int br_mdb_add_group(struct net_bridge *br, struct net_bridge_port *port,$/;"	f	file:	signature:(struct net_bridge *br, struct net_bridge_port *port, struct br_ip *group, unsigned char state)
br_mdb_copy	br_multicast.c	/^static int br_mdb_copy(struct net_bridge_mdb_htable *new,$/;"	f	file:	signature:(struct net_bridge_mdb_htable *new, struct net_bridge_mdb_htable *old, int elasticity)
br_mdb_del	br_mdb.c	/^static int br_mdb_del(struct sk_buff *skb, struct nlmsghdr *nlh)$/;"	f	file:	signature:(struct sk_buff *skb, struct nlmsghdr *nlh)
br_mdb_dump	br_mdb.c	/^static int br_mdb_dump(struct sk_buff *skb, struct netlink_callback *cb)$/;"	f	file:	signature:(struct sk_buff *skb, struct netlink_callback *cb)
br_mdb_fill_info	br_mdb.c	/^static int br_mdb_fill_info(struct sk_buff *skb, struct netlink_callback *cb,$/;"	f	file:	signature:(struct sk_buff *skb, struct netlink_callback *cb, struct net_device *dev)
br_mdb_free	br_multicast.c	/^static void br_mdb_free(struct rcu_head *head)$/;"	f	file:	signature:(struct rcu_head *head)
br_mdb_get	br_multicast.c	/^struct net_bridge_mdb_entry *br_mdb_get(struct net_bridge *br,$/;"	f	signature:(struct net_bridge *br, struct sk_buff *skb, u16 vid)
br_mdb_get	br_private.h	/^static inline struct net_bridge_mdb_entry *br_mdb_get(struct net_bridge *br,$/;"	f	signature:(struct net_bridge *br, struct sk_buff *skb, u16 vid)
br_mdb_get	br_private.h	/^struct net_bridge_mdb_entry *br_mdb_get(struct net_bridge *br,$/;"	p	signature:(struct net_bridge *br, struct sk_buff *skb, u16 vid)
br_mdb_init	br_mdb.c	/^void br_mdb_init(void)$/;"	f	signature:(void)
br_mdb_init	br_private.h	/^static inline void br_mdb_init(void)$/;"	f	signature:(void)
br_mdb_init	br_private.h	/^void br_mdb_init(void);$/;"	p	signature:(void)
br_mdb_ip4_get	br_multicast.c	/^static struct net_bridge_mdb_entry *br_mdb_ip4_get($/;"	f	file:	signature:( struct net_bridge_mdb_htable *mdb, __be32 dst, __u16 vid)
br_mdb_ip6_get	br_multicast.c	/^static struct net_bridge_mdb_entry *br_mdb_ip6_get($/;"	f	file:	signature:( struct net_bridge_mdb_htable *mdb, const struct in6_addr *dst, __u16 vid)
br_mdb_ip_get	br_multicast.c	/^struct net_bridge_mdb_entry *br_mdb_ip_get(struct net_bridge_mdb_htable *mdb,$/;"	f	signature:(struct net_bridge_mdb_htable *mdb, struct br_ip *dst)
br_mdb_ip_get	br_private.h	/^br_mdb_ip_get(struct net_bridge_mdb_htable *mdb, struct br_ip *dst);$/;"	p	signature:(struct net_bridge_mdb_htable *mdb, struct br_ip *dst)
br_mdb_notify	br_mdb.c	/^void br_mdb_notify(struct net_device *dev, struct net_bridge_port *port,$/;"	f	signature:(struct net_device *dev, struct net_bridge_port *port, struct br_ip *group, int type)
br_mdb_notify	br_private.h	/^void br_mdb_notify(struct net_device *dev, struct net_bridge_port *port,$/;"	p	signature:(struct net_device *dev, struct net_bridge_port *port, struct br_ip *group, int type)
br_mdb_parse	br_mdb.c	/^static int br_mdb_parse(struct sk_buff *skb, struct nlmsghdr *nlh,$/;"	f	file:	signature:(struct sk_buff *skb, struct nlmsghdr *nlh, struct net_device **pdev, struct br_mdb_entry **pentry)
br_mdb_rehash	br_multicast.c	/^static int br_mdb_rehash(struct net_bridge_mdb_htable __rcu **mdbp, int max,$/;"	f	file:	signature:(struct net_bridge_mdb_htable __rcu **mdbp, int max, int elasticity)
br_mdb_rehash_seq	br_multicast.c	/^unsigned int br_mdb_rehash_seq;$/;"	v
br_mdb_uninit	br_mdb.c	/^void br_mdb_uninit(void)$/;"	f	signature:(void)
br_mdb_uninit	br_private.h	/^static inline void br_mdb_uninit(void)$/;"	f	signature:(void)
br_mdb_uninit	br_private.h	/^void br_mdb_uninit(void);$/;"	p	signature:(void)
br_message_age_timer_expired	br_stp_timer.c	/^static void br_message_age_timer_expired(unsigned long arg)$/;"	f	file:	signature:(unsigned long arg)
br_min_mtu	br_if.c	/^int br_min_mtu(const struct net_bridge *br)$/;"	f	signature:(const struct net_bridge *br)
br_min_mtu	br_private.h	/^int br_min_mtu(const struct net_bridge *br);$/;"	p	signature:(const struct net_bridge *br)
br_multicast_add_group	br_multicast.c	/^static int br_multicast_add_group(struct net_bridge *br,$/;"	f	file:	signature:(struct net_bridge *br, struct net_bridge_port *port, struct br_ip *group)
br_multicast_add_port	br_multicast.c	/^void br_multicast_add_port(struct net_bridge_port *port)$/;"	f	signature:(struct net_bridge_port *port)
br_multicast_add_port	br_private.h	/^static inline void br_multicast_add_port(struct net_bridge_port *port)$/;"	f	signature:(struct net_bridge_port *port)
br_multicast_add_port	br_private.h	/^void br_multicast_add_port(struct net_bridge_port *port);$/;"	p	signature:(struct net_bridge_port *port)
br_multicast_add_router	br_multicast.c	/^static void br_multicast_add_router(struct net_bridge *br,$/;"	f	file:	signature:(struct net_bridge *br, struct net_bridge_port *port)
br_multicast_alloc_query	br_multicast.c	/^static struct sk_buff *br_multicast_alloc_query(struct net_bridge *br,$/;"	f	file:	signature:(struct net_bridge *br, struct br_ip *addr)
br_multicast_del_pg	br_multicast.c	/^static void br_multicast_del_pg(struct net_bridge *br,$/;"	f	file:	signature:(struct net_bridge *br, struct net_bridge_port_group *pg)
br_multicast_del_port	br_multicast.c	/^void br_multicast_del_port(struct net_bridge_port *port)$/;"	f	signature:(struct net_bridge_port *port)
br_multicast_del_port	br_private.h	/^static inline void br_multicast_del_port(struct net_bridge_port *port)$/;"	f	signature:(struct net_bridge_port *port)
br_multicast_del_port	br_private.h	/^void br_multicast_del_port(struct net_bridge_port *port);$/;"	p	signature:(struct net_bridge_port *port)
br_multicast_deliver	br_forward.c	/^void br_multicast_deliver(struct net_bridge_mdb_entry *mdst,$/;"	f	signature:(struct net_bridge_mdb_entry *mdst, struct sk_buff *skb)
br_multicast_deliver	br_private.h	/^static inline void br_multicast_deliver(struct net_bridge_mdb_entry *mdst,$/;"	f	signature:(struct net_bridge_mdb_entry *mdst, struct sk_buff *skb)
br_multicast_deliver	br_private.h	/^void br_multicast_deliver(struct net_bridge_mdb_entry *mdst,$/;"	p	signature:(struct net_bridge_mdb_entry *mdst, struct sk_buff *skb)
br_multicast_disable_port	br_multicast.c	/^void br_multicast_disable_port(struct net_bridge_port *port)$/;"	f	signature:(struct net_bridge_port *port)
br_multicast_disable_port	br_private.h	/^static inline void br_multicast_disable_port(struct net_bridge_port *port)$/;"	f	signature:(struct net_bridge_port *port)
br_multicast_disable_port	br_private.h	/^void br_multicast_disable_port(struct net_bridge_port *port);$/;"	p	signature:(struct net_bridge_port *port)
br_multicast_enable	br_multicast.c	/^static void br_multicast_enable(struct bridge_mcast_query *query)$/;"	f	file:	signature:(struct bridge_mcast_query *query)
br_multicast_enable_port	br_multicast.c	/^void br_multicast_enable_port(struct net_bridge_port *port)$/;"	f	signature:(struct net_bridge_port *port)
br_multicast_enable_port	br_private.h	/^static inline void br_multicast_enable_port(struct net_bridge_port *port)$/;"	f	signature:(struct net_bridge_port *port)
br_multicast_enable_port	br_private.h	/^void br_multicast_enable_port(struct net_bridge_port *port);$/;"	p	signature:(struct net_bridge_port *port)
br_multicast_flood	br_forward.c	/^static void br_multicast_flood(struct net_bridge_mdb_entry *mdst,$/;"	f	file:	signature:(struct net_bridge_mdb_entry *mdst, struct sk_buff *skb, struct sk_buff *skb0, void (*__packet_hook)( const struct net_bridge_port *p, struct sk_buff *skb))
br_multicast_forward	br_forward.c	/^void br_multicast_forward(struct net_bridge_mdb_entry *mdst,$/;"	f	signature:(struct net_bridge_mdb_entry *mdst, struct sk_buff *skb, struct sk_buff *skb2)
br_multicast_forward	br_private.h	/^static inline void br_multicast_forward(struct net_bridge_mdb_entry *mdst,$/;"	f	signature:(struct net_bridge_mdb_entry *mdst, struct sk_buff *skb, struct sk_buff *skb2)
br_multicast_forward	br_private.h	/^void br_multicast_forward(struct net_bridge_mdb_entry *mdst,$/;"	p	signature:(struct net_bridge_mdb_entry *mdst, struct sk_buff *skb, struct sk_buff *skb2)
br_multicast_free_group	br_multicast.c	/^static void br_multicast_free_group(struct rcu_head *head)$/;"	f	file:	signature:(struct rcu_head *head)
br_multicast_free_pg	br_multicast.c	/^void br_multicast_free_pg(struct rcu_head *head)$/;"	f	signature:(struct rcu_head *head)
br_multicast_free_pg	br_private.h	/^void br_multicast_free_pg(struct rcu_head *head);$/;"	p	signature:(struct rcu_head *head)
br_multicast_get_group	br_multicast.c	/^static struct net_bridge_mdb_entry *br_multicast_get_group($/;"	f	file:	signature:( struct net_bridge *br, struct net_bridge_port *port, struct br_ip *group, int hash)
br_multicast_group_expired	br_multicast.c	/^static void br_multicast_group_expired(unsigned long data)$/;"	f	file:	signature:(unsigned long data)
br_multicast_init	br_multicast.c	/^void br_multicast_init(struct net_bridge *br)$/;"	f	signature:(struct net_bridge *br)
br_multicast_init	br_private.h	/^static inline void br_multicast_init(struct net_bridge *br)$/;"	f	signature:(struct net_bridge *br)
br_multicast_init	br_private.h	/^void br_multicast_init(struct net_bridge *br);$/;"	p	signature:(struct net_bridge *br)
br_multicast_ipv4_rcv	br_multicast.c	/^static int br_multicast_ipv4_rcv(struct net_bridge *br,$/;"	f	file:	signature:(struct net_bridge *br, struct net_bridge_port *port, struct sk_buff *skb, u16 vid)
br_multicast_ipv6_rcv	br_multicast.c	/^static int br_multicast_ipv6_rcv(struct net_bridge *br,$/;"	f	file:	signature:(struct net_bridge *br, struct net_bridge_port *port, struct sk_buff *skb, u16 vid)
br_multicast_is_router	br_private.h	/^static inline bool br_multicast_is_router(struct net_bridge *br)$/;"	f	signature:(struct net_bridge *br)
br_multicast_leave_group	br_multicast.c	/^static void br_multicast_leave_group(struct net_bridge *br,$/;"	f	file:	signature:(struct net_bridge *br, struct net_bridge_port *port, struct br_ip *group, struct bridge_mcast_querier *querier, struct bridge_mcast_query *query)
br_multicast_local_router_expired	br_multicast.c	/^static void br_multicast_local_router_expired(unsigned long data)$/;"	f	file:	signature:(unsigned long data)
br_multicast_mark_router	br_multicast.c	/^static void br_multicast_mark_router(struct net_bridge *br,$/;"	f	file:	signature:(struct net_bridge *br, struct net_bridge_port *port)
br_multicast_new_group	br_multicast.c	/^struct net_bridge_mdb_entry *br_multicast_new_group(struct net_bridge *br,$/;"	f	signature:(struct net_bridge *br, struct net_bridge_port *port, struct br_ip *group)
br_multicast_new_group	br_private.h	/^br_multicast_new_group(struct net_bridge *br, struct net_bridge_port *port,$/;"	p	signature:(struct net_bridge *br, struct net_bridge_port *port, struct br_ip *group)
br_multicast_new_port_group	br_multicast.c	/^struct net_bridge_port_group *br_multicast_new_port_group($/;"	f	signature:( struct net_bridge_port *port, struct br_ip *group, struct net_bridge_port_group __rcu *next, unsigned char state)
br_multicast_new_port_group	br_private.h	/^br_multicast_new_port_group(struct net_bridge_port *port, struct br_ip *group,$/;"	p	signature:(struct net_bridge_port *port, struct br_ip *group, struct net_bridge_port_group __rcu *next, unsigned char state)
br_multicast_open	br_multicast.c	/^void br_multicast_open(struct net_bridge *br)$/;"	f	signature:(struct net_bridge *br)
br_multicast_open	br_private.h	/^static inline void br_multicast_open(struct net_bridge *br)$/;"	f	signature:(struct net_bridge *br)
br_multicast_open	br_private.h	/^void br_multicast_open(struct net_bridge *br);$/;"	p	signature:(struct net_bridge *br)
br_multicast_port_group_expired	br_multicast.c	/^static void br_multicast_port_group_expired(unsigned long data)$/;"	f	file:	signature:(unsigned long data)
br_multicast_port_query_expired	br_multicast.c	/^static void br_multicast_port_query_expired(struct net_bridge_port *port,$/;"	f	file:	signature:(struct net_bridge_port *port, struct bridge_mcast_query *query)
br_multicast_querier_exists	br_private.h	/^static inline bool br_multicast_querier_exists(struct net_bridge *br,$/;"	f	signature:(struct net_bridge *br, struct ethhdr *eth)
br_multicast_querier_expired	br_multicast.c	/^static void br_multicast_querier_expired(struct net_bridge *br,$/;"	f	file:	signature:(struct net_bridge *br, struct bridge_mcast_query *query)
br_multicast_query_expired	br_multicast.c	/^static void br_multicast_query_expired(struct net_bridge *br,$/;"	f	file:	signature:(struct net_bridge *br, struct bridge_mcast_query *query)
br_multicast_query_received	br_multicast.c	/^static void br_multicast_query_received(struct net_bridge *br,$/;"	f	file:	signature:(struct net_bridge *br, struct net_bridge_port *port, struct bridge_mcast_querier *querier, int saddr, bool is_general_query, unsigned long max_delay)
br_multicast_rcv	br_multicast.c	/^int br_multicast_rcv(struct net_bridge *br, struct net_bridge_port *port,$/;"	f	signature:(struct net_bridge *br, struct net_bridge_port *port, struct sk_buff *skb, u16 vid)
br_multicast_rcv	br_private.h	/^int br_multicast_rcv(struct net_bridge *br, struct net_bridge_port *port,$/;"	p	signature:(struct net_bridge *br, struct net_bridge_port *port, struct sk_buff *skb, u16 vid)
br_multicast_rcv	br_private.h	/^static inline int br_multicast_rcv(struct net_bridge *br,$/;"	f	signature:(struct net_bridge *br, struct net_bridge_port *port, struct sk_buff *skb, u16 vid)
br_multicast_router_expired	br_multicast.c	/^static void br_multicast_router_expired(unsigned long data)$/;"	f	file:	signature:(unsigned long data)
br_multicast_send_query	br_multicast.c	/^static void br_multicast_send_query(struct net_bridge *br,$/;"	f	file:	signature:(struct net_bridge *br, struct net_bridge_port *port, struct bridge_mcast_query *query)
br_multicast_set_hash_max	br_multicast.c	/^int br_multicast_set_hash_max(struct net_bridge *br, unsigned long val)$/;"	f	signature:(struct net_bridge *br, unsigned long val)
br_multicast_set_hash_max	br_private.h	/^int br_multicast_set_hash_max(struct net_bridge *br, unsigned long val);$/;"	p	signature:(struct net_bridge *br, unsigned long val)
br_multicast_set_port_router	br_multicast.c	/^int br_multicast_set_port_router(struct net_bridge_port *p, unsigned long val)$/;"	f	signature:(struct net_bridge_port *p, unsigned long val)
br_multicast_set_port_router	br_private.h	/^int br_multicast_set_port_router(struct net_bridge_port *p, unsigned long val);$/;"	p	signature:(struct net_bridge_port *p, unsigned long val)
br_multicast_set_querier	br_multicast.c	/^int br_multicast_set_querier(struct net_bridge *br, unsigned long val)$/;"	f	signature:(struct net_bridge *br, unsigned long val)
br_multicast_set_querier	br_private.h	/^int br_multicast_set_querier(struct net_bridge *br, unsigned long val);$/;"	p	signature:(struct net_bridge *br, unsigned long val)
br_multicast_set_router	br_multicast.c	/^int br_multicast_set_router(struct net_bridge *br, unsigned long val)$/;"	f	signature:(struct net_bridge *br, unsigned long val)
br_multicast_set_router	br_private.h	/^int br_multicast_set_router(struct net_bridge *br, unsigned long val);$/;"	p	signature:(struct net_bridge *br, unsigned long val)
br_multicast_start_querier	br_multicast.c	/^static void br_multicast_start_querier(struct net_bridge *br,$/;"	f	file:	signature:(struct net_bridge *br, struct bridge_mcast_query *query)
br_multicast_start_querier	br_multicast.c	/^static void br_multicast_start_querier(struct net_bridge *br,$/;"	p	file:	signature:(struct net_bridge *br, struct bridge_mcast_query *query)
br_multicast_stop	br_multicast.c	/^void br_multicast_stop(struct net_bridge *br)$/;"	f	signature:(struct net_bridge *br)
br_multicast_stop	br_private.h	/^static inline void br_multicast_stop(struct net_bridge *br)$/;"	f	signature:(struct net_bridge *br)
br_multicast_stop	br_private.h	/^void br_multicast_stop(struct net_bridge *br);$/;"	p	signature:(struct net_bridge *br)
br_multicast_toggle	br_multicast.c	/^int br_multicast_toggle(struct net_bridge *br, unsigned long val)$/;"	f	signature:(struct net_bridge *br, unsigned long val)
br_multicast_toggle	br_private.h	/^int br_multicast_toggle(struct net_bridge *br, unsigned long val);$/;"	p	signature:(struct net_bridge *br, unsigned long val)
br_multicast_update_querier_timer	br_multicast.c	/^br_multicast_update_querier_timer(struct net_bridge *br,$/;"	f	file:	signature:(struct net_bridge *br, struct bridge_mcast_querier *querier, unsigned long max_delay)
br_net_exit	br.c	/^static void __net_exit br_net_exit(struct net *net)$/;"	f	file:	signature:(struct net *net)
br_net_ops	br.c	/^static struct pernet_operations br_net_ops = {$/;"	v	typeref:struct:pernet_operations	file:
br_netdev_ops	br_device.c	/^static const struct net_device_ops br_netdev_ops = {$/;"	v	typeref:struct:net_device_ops	file:
br_netfilter_fini	br_netfilter.c	/^void br_netfilter_fini(void)$/;"	f	signature:(void)
br_netfilter_fini	br_private.h	/^void br_netfilter_fini(void);$/;"	p	signature:(void)
br_netfilter_fini	br_private.h	734;"	d
br_netfilter_init	br_netfilter.c	/^int __init br_netfilter_init(void)$/;"	f	signature:(void)
br_netfilter_init	br_private.h	/^int br_netfilter_init(void);$/;"	p	signature:(void)
br_netfilter_init	br_private.h	733;"	d
br_netfilter_rtable_init	br_netfilter.c	/^void br_netfilter_rtable_init(struct net_bridge *br)$/;"	f	signature:(struct net_bridge *br)
br_netfilter_rtable_init	br_private.h	/^void br_netfilter_rtable_init(struct net_bridge *);$/;"	p	signature:(struct net_bridge *)
br_netfilter_rtable_init	br_private.h	735;"	d
br_netlink_fini	br_netlink.c	/^void __exit br_netlink_fini(void)$/;"	f	signature:(void)
br_netlink_fini	br_private.h	/^void br_netlink_fini(void);$/;"	p	signature:(void)
br_netlink_init	br_netlink.c	/^int __init br_netlink_init(void)$/;"	f	signature:(void)
br_netlink_init	br_private.h	/^int br_netlink_init(void);$/;"	p	signature:(void)
br_netpoll_cleanup	br_device.c	/^static void br_netpoll_cleanup(struct net_device *dev)$/;"	f	file:	signature:(struct net_device *dev)
br_netpoll_disable	br_device.c	/^void br_netpoll_disable(struct net_bridge_port *p)$/;"	f	signature:(struct net_bridge_port *p)
br_netpoll_disable	br_private.h	/^static inline void br_netpoll_disable(struct net_bridge_port *p)$/;"	f	signature:(struct net_bridge_port *p)
br_netpoll_disable	br_private.h	/^void br_netpoll_disable(struct net_bridge_port *p);$/;"	p	signature:(struct net_bridge_port *p)
br_netpoll_enable	br_device.c	/^int br_netpoll_enable(struct net_bridge_port *p, gfp_t gfp)$/;"	f	signature:(struct net_bridge_port *p, gfp_t gfp)
br_netpoll_enable	br_private.h	/^int br_netpoll_enable(struct net_bridge_port *p, gfp_t gfp);$/;"	p	signature:(struct net_bridge_port *p, gfp_t gfp)
br_netpoll_enable	br_private.h	/^static inline int br_netpoll_enable(struct net_bridge_port *p, gfp_t gfp)$/;"	f	signature:(struct net_bridge_port *p, gfp_t gfp)
br_netpoll_send_skb	br_private.h	/^static inline void br_netpoll_send_skb(const struct net_bridge_port *p,$/;"	f	signature:(const struct net_bridge_port *p, struct sk_buff *skb)
br_netpoll_setup	br_device.c	/^static int br_netpoll_setup(struct net_device *dev, struct netpoll_info *ni,$/;"	f	file:	signature:(struct net_device *dev, struct netpoll_info *ni, gfp_t gfp)
br_nf_dev_queue_xmit	br_netfilter.c	/^static int br_nf_dev_queue_xmit(struct sk_buff *skb)$/;"	f	file:	signature:(struct sk_buff *skb)
br_nf_forward_arp	br_netfilter.c	/^static unsigned int br_nf_forward_arp(const struct nf_hook_ops *ops,$/;"	f	file:	signature:(const struct nf_hook_ops *ops, struct sk_buff *skb, const struct net_device *in, const struct net_device *out, int (*okfn)(struct sk_buff *))
br_nf_forward_finish	br_netfilter.c	/^static int br_nf_forward_finish(struct sk_buff *skb)$/;"	f	file:	signature:(struct sk_buff *skb)
br_nf_forward_ip	br_netfilter.c	/^static unsigned int br_nf_forward_ip(const struct nf_hook_ops *ops,$/;"	f	file:	signature:(const struct nf_hook_ops *ops, struct sk_buff *skb, const struct net_device *in, const struct net_device *out, int (*okfn)(struct sk_buff *))
br_nf_local_in	br_netfilter.c	/^static unsigned int br_nf_local_in(const struct nf_hook_ops *ops,$/;"	f	file:	signature:(const struct nf_hook_ops *ops, struct sk_buff *skb, const struct net_device *in, const struct net_device *out, int (*okfn)(struct sk_buff *))
br_nf_post_routing	br_netfilter.c	/^static unsigned int br_nf_post_routing(const struct nf_hook_ops *ops,$/;"	f	file:	signature:(const struct nf_hook_ops *ops, struct sk_buff *skb, const struct net_device *in, const struct net_device *out, int (*okfn)(struct sk_buff *))
br_nf_pre_routing	br_netfilter.c	/^static unsigned int br_nf_pre_routing(const struct nf_hook_ops *ops,$/;"	f	file:	signature:(const struct nf_hook_ops *ops, struct sk_buff *skb, const struct net_device *in, const struct net_device *out, int (*okfn)(struct sk_buff *))
br_nf_pre_routing_finish	br_netfilter.c	/^static int br_nf_pre_routing_finish(struct sk_buff *skb)$/;"	f	file:	signature:(struct sk_buff *skb)
br_nf_pre_routing_finish_bridge	br_netfilter.c	/^static int br_nf_pre_routing_finish_bridge(struct sk_buff *skb)$/;"	f	file:	signature:(struct sk_buff *skb)
br_nf_pre_routing_finish_ipv6	br_netfilter.c	/^static int br_nf_pre_routing_finish_ipv6(struct sk_buff *skb)$/;"	f	file:	signature:(struct sk_buff *skb)
br_nf_pre_routing_ipv6	br_netfilter.c	/^static unsigned int br_nf_pre_routing_ipv6(const struct nf_hook_ops *ops,$/;"	f	file:	signature:(const struct nf_hook_ops *ops, struct sk_buff *skb, const struct net_device *in, const struct net_device *out, int (*okfn)(struct sk_buff *))
br_nlmsg_size	br_netlink.c	/^static inline size_t br_nlmsg_size(void)$/;"	f	file:	signature:(void)
br_notice	br_private.h	325;"	d
br_parse_ip_options	br_netfilter.c	/^static int br_parse_ip_options(struct sk_buff *skb)$/;"	f	file:	signature:(struct sk_buff *skb)
br_pass_frame_up	br_input.c	/^static int br_pass_frame_up(struct sk_buff *skb)$/;"	f	file:	signature:(struct sk_buff *skb)
br_poll_controller	br_device.c	/^static void br_poll_controller(struct net_device *br_dev)$/;"	f	file:	signature:(struct net_device *br_dev)
br_port_carrier_check	br_if.c	/^void br_port_carrier_check(struct net_bridge_port *p)$/;"	f	signature:(struct net_bridge_port *p)
br_port_carrier_check	br_private.h	/^void br_port_carrier_check(struct net_bridge_port *p);$/;"	p	signature:(struct net_bridge_port *p)
br_port_exists	br_private.h	201;"	d
br_port_fill_attrs	br_netlink.c	/^static int br_port_fill_attrs(struct sk_buff *skb,$/;"	f	file:	signature:(struct sk_buff *skb, const struct net_bridge_port *p)
br_port_get_check_rcu	br_private.h	/^static inline struct net_bridge_port *br_port_get_check_rcu(const struct net_device *dev)$/;"	f	signature:(const struct net_device *dev)
br_port_get_rcu	br_private.h	/^static inline struct net_bridge_port *br_port_get_rcu(const struct net_device *dev)$/;"	f	signature:(const struct net_device *dev)
br_port_get_rtnl	br_private.h	/^static inline struct net_bridge_port *br_port_get_rtnl(const struct net_device *dev)$/;"	f	signature:(const struct net_device *dev)
br_port_info_size	br_netlink.c	/^static inline size_t br_port_info_size(void)$/;"	f	file:	signature:(void)
br_port_state_names	br_stp.c	/^static const char *const br_port_state_names[] = {$/;"	v	file:
br_port_state_selection	br_private_stp.h	/^void br_port_state_selection(struct net_bridge *);$/;"	p	signature:(struct net_bridge *)
br_port_state_selection	br_stp.c	/^void br_port_state_selection(struct net_bridge *br)$/;"	f	signature:(struct net_bridge *br)
br_printk	br_private.h	318;"	d
br_received_config_bpdu	br_private_stp.h	/^void br_received_config_bpdu(struct net_bridge_port *p,$/;"	p	signature:(struct net_bridge_port *p, const struct br_config_bpdu *bpdu)
br_received_config_bpdu	br_stp.c	/^void br_received_config_bpdu(struct net_bridge_port *p,$/;"	f	signature:(struct net_bridge_port *p, const struct br_config_bpdu *bpdu)
br_received_tcn_bpdu	br_private_stp.h	/^void br_received_tcn_bpdu(struct net_bridge_port *p);$/;"	p	signature:(struct net_bridge_port *p)
br_received_tcn_bpdu	br_stp.c	/^void br_received_tcn_bpdu(struct net_bridge_port *p)$/;"	f	signature:(struct net_bridge_port *p)
br_record_config_information	br_stp.c	/^static void br_record_config_information(struct net_bridge_port *p,$/;"	f	file:	signature:(struct net_bridge_port *p, const struct br_config_bpdu *bpdu)
br_record_config_timeout_values	br_stp.c	/^static void br_record_config_timeout_values(struct net_bridge *br,$/;"	f	file:	signature:(struct net_bridge *br, const struct br_config_bpdu *bpdu)
br_reply	br_stp.c	/^static void br_reply(struct net_bridge_port *p)$/;"	f	file:	signature:(struct net_bridge_port *p)
br_root_port_block	br_stp.c	/^static void br_root_port_block(const struct net_bridge *br,$/;"	f	file:	signature:(const struct net_bridge *br, struct net_bridge_port *p)
br_root_selection	br_stp.c	/^static void br_root_selection(struct net_bridge *br)$/;"	f	file:	signature:(struct net_bridge *br)
br_rports_fill_info	br_mdb.c	/^static int br_rports_fill_info(struct sk_buff *skb, struct netlink_callback *cb,$/;"	f	file:	signature:(struct sk_buff *skb, struct netlink_callback *cb, struct net_device *dev)
br_rx_handler_check_rcu	br_private.h	/^static inline bool br_rx_handler_check_rcu(const struct net_device *dev)$/;"	f	signature:(const struct net_device *dev)
br_send_bpdu	br_stp_bpdu.c	/^static void br_send_bpdu(struct net_bridge_port *p,$/;"	f	file:	signature:(struct net_bridge_port *p, const unsigned char *data, int length)
br_send_config_bpdu	br_private_stp.h	/^void br_send_config_bpdu(struct net_bridge_port *, struct br_config_bpdu *);$/;"	p	signature:(struct net_bridge_port *, struct br_config_bpdu *)
br_send_config_bpdu	br_stp_bpdu.c	/^void br_send_config_bpdu(struct net_bridge_port *p, struct br_config_bpdu *bpdu)$/;"	f	signature:(struct net_bridge_port *p, struct br_config_bpdu *bpdu)
br_send_tcn_bpdu	br_private_stp.h	/^void br_send_tcn_bpdu(struct net_bridge_port *);$/;"	p	signature:(struct net_bridge_port *)
br_send_tcn_bpdu	br_stp_bpdu.c	/^void br_send_tcn_bpdu(struct net_bridge_port *p)$/;"	f	signature:(struct net_bridge_port *p)
br_set_forward_delay	br_private.h	/^int br_set_forward_delay(struct net_bridge *br, unsigned long x);$/;"	p	signature:(struct net_bridge *br, unsigned long x)
br_set_forward_delay	br_stp.c	/^int br_set_forward_delay(struct net_bridge *br, unsigned long val)$/;"	f	signature:(struct net_bridge *br, unsigned long val)
br_set_hello_time	br_private.h	/^int br_set_hello_time(struct net_bridge *br, unsigned long x);$/;"	p	signature:(struct net_bridge *br, unsigned long x)
br_set_hello_time	br_stp.c	/^int br_set_hello_time(struct net_bridge *br, unsigned long val)$/;"	f	signature:(struct net_bridge *br, unsigned long val)
br_set_mac_address	br_device.c	/^static int br_set_mac_address(struct net_device *dev, void *p)$/;"	f	file:	signature:(struct net_device *dev, void *p)
br_set_max_age	br_private.h	/^int br_set_max_age(struct net_bridge *br, unsigned long x);$/;"	p	signature:(struct net_bridge *br, unsigned long x)
br_set_max_age	br_stp.c	/^int br_set_max_age(struct net_bridge *br, unsigned long val)$/;"	f	signature:(struct net_bridge *br, unsigned long val)
br_set_port_flag	br_netlink.c	/^static void br_set_port_flag(struct net_bridge_port *p, struct nlattr *tb[],$/;"	f	file:	signature:(struct net_bridge_port *p, struct nlattr *tb[], int attrtype, unsigned long mask)
br_set_port_state	br_netlink.c	/^static int br_set_port_state(struct net_bridge_port *p, u8 state)$/;"	f	file:	signature:(struct net_bridge_port *p, u8 state)
br_set_ticks	br_stp_bpdu.c	/^static inline void br_set_ticks(unsigned char *dest, int j)$/;"	f	file:	signature:(unsigned char *dest, int j)
br_setlink	br_netlink.c	/^int br_setlink(struct net_device *dev, struct nlmsghdr *nlh)$/;"	f	signature:(struct net_device *dev, struct nlmsghdr *nlh)
br_setlink	br_private.h	/^int br_setlink(struct net_device *dev, struct nlmsghdr *nlmsg);$/;"	p	signature:(struct net_device *dev, struct nlmsghdr *nlmsg)
br_setport	br_netlink.c	/^static int br_setport(struct net_bridge_port *p, struct nlattr *tb[])$/;"	f	file:	signature:(struct net_bridge_port *p, struct nlattr *tb[])
br_should_become_designated_port	br_stp.c	/^static int br_should_become_designated_port(const struct net_bridge_port *p)$/;"	f	file:	signature:(const struct net_bridge_port *p)
br_should_become_root_port	br_stp.c	/^static int br_should_become_root_port(const struct net_bridge_port *p,$/;"	f	file:	signature:(const struct net_bridge_port *p, u16 root_port)
br_should_learn	br_private.h	/^bool br_should_learn(struct net_bridge_port *p, struct sk_buff *skb, u16 *vid);$/;"	p	signature:(struct net_bridge_port *p, struct sk_buff *skb, u16 *vid)
br_should_learn	br_private.h	/^static inline bool br_should_learn(struct net_bridge_port *p,$/;"	f	signature:(struct net_bridge_port *p, struct sk_buff *skb, u16 *vid)
br_should_learn	br_vlan.c	/^bool br_should_learn(struct net_bridge_port *p, struct sk_buff *skb, u16 *vid)$/;"	f	signature:(struct net_bridge_port *p, struct sk_buff *skb, u16 *vid)
br_should_route_hook	br_input.c	/^EXPORT_SYMBOL(br_should_route_hook);$/;"	v
br_show_bridge_id	br_private.h	/^ssize_t br_show_bridge_id(char *buf, const struct bridge_id *id);$/;"	p	signature:(char *buf, const struct bridge_id *id)
br_show_bridge_id	br_stp_if.c	/^ssize_t br_show_bridge_id(char *buf, const struct bridge_id *id)$/;"	f	signature:(char *buf, const struct bridge_id *id)
br_stp_change_bridge_id	br_private.h	/^void br_stp_change_bridge_id(struct net_bridge *br, const unsigned char *a);$/;"	p	signature:(struct net_bridge *br, const unsigned char *a)
br_stp_change_bridge_id	br_stp_if.c	/^void br_stp_change_bridge_id(struct net_bridge *br, const unsigned char *addr)$/;"	f	signature:(struct net_bridge *br, const unsigned char *addr)
br_stp_disable_bridge	br_private.h	/^void br_stp_disable_bridge(struct net_bridge *br);$/;"	p	signature:(struct net_bridge *br)
br_stp_disable_bridge	br_stp_if.c	/^void br_stp_disable_bridge(struct net_bridge *br)$/;"	f	signature:(struct net_bridge *br)
br_stp_disable_port	br_private.h	/^void br_stp_disable_port(struct net_bridge_port *p);$/;"	p	signature:(struct net_bridge_port *p)
br_stp_disable_port	br_stp_if.c	/^void br_stp_disable_port(struct net_bridge_port *p)$/;"	f	signature:(struct net_bridge_port *p)
br_stp_enable_bridge	br_private.h	/^void br_stp_enable_bridge(struct net_bridge *br);$/;"	p	signature:(struct net_bridge *br)
br_stp_enable_bridge	br_stp_if.c	/^void br_stp_enable_bridge(struct net_bridge *br)$/;"	f	signature:(struct net_bridge *br)
br_stp_enable_port	br_private.h	/^void br_stp_enable_port(struct net_bridge_port *p);$/;"	p	signature:(struct net_bridge_port *p)
br_stp_enable_port	br_stp_if.c	/^void br_stp_enable_port(struct net_bridge_port *p)$/;"	f	signature:(struct net_bridge_port *p)
br_stp_port_timer_init	br_private.h	/^void br_stp_port_timer_init(struct net_bridge_port *p);$/;"	p	signature:(struct net_bridge_port *p)
br_stp_port_timer_init	br_stp_timer.c	/^void br_stp_port_timer_init(struct net_bridge_port *p)$/;"	f	signature:(struct net_bridge_port *p)
br_stp_proto	br.c	/^static const struct stp_proto br_stp_proto = {$/;"	v	typeref:struct:stp_proto	file:
br_stp_rcv	br_private.h	/^void br_stp_rcv(const struct stp_proto *proto, struct sk_buff *skb,$/;"	p	signature:(const struct stp_proto *proto, struct sk_buff *skb, struct net_device *dev)
br_stp_rcv	br_stp_bpdu.c	/^void br_stp_rcv(const struct stp_proto *proto, struct sk_buff *skb,$/;"	f	signature:(const struct stp_proto *proto, struct sk_buff *skb, struct net_device *dev)
br_stp_recalculate_bridge_id	br_private.h	/^bool br_stp_recalculate_bridge_id(struct net_bridge *br);$/;"	p	signature:(struct net_bridge *br)
br_stp_recalculate_bridge_id	br_stp_if.c	/^bool br_stp_recalculate_bridge_id(struct net_bridge *br)$/;"	f	signature:(struct net_bridge *br)
br_stp_set_bridge_priority	br_private.h	/^void br_stp_set_bridge_priority(struct net_bridge *br, u16 newprio);$/;"	p	signature:(struct net_bridge *br, u16 newprio)
br_stp_set_bridge_priority	br_stp_if.c	/^void br_stp_set_bridge_priority(struct net_bridge *br, u16 newprio)$/;"	f	signature:(struct net_bridge *br, u16 newprio)
br_stp_set_enabled	br_private.h	/^void br_stp_set_enabled(struct net_bridge *br, unsigned long val);$/;"	p	signature:(struct net_bridge *br, unsigned long val)
br_stp_set_enabled	br_stp_if.c	/^void br_stp_set_enabled(struct net_bridge *br, unsigned long val)$/;"	f	signature:(struct net_bridge *br, unsigned long val)
br_stp_set_path_cost	br_private.h	/^int br_stp_set_path_cost(struct net_bridge_port *p, unsigned long path_cost);$/;"	p	signature:(struct net_bridge_port *p, unsigned long path_cost)
br_stp_set_path_cost	br_stp_if.c	/^int br_stp_set_path_cost(struct net_bridge_port *p, unsigned long path_cost)$/;"	f	signature:(struct net_bridge_port *p, unsigned long path_cost)
br_stp_set_port_priority	br_private.h	/^int br_stp_set_port_priority(struct net_bridge_port *p, unsigned long newprio);$/;"	p	signature:(struct net_bridge_port *p, unsigned long newprio)
br_stp_set_port_priority	br_stp_if.c	/^int br_stp_set_port_priority(struct net_bridge_port *p, unsigned long newprio)$/;"	f	signature:(struct net_bridge_port *p, unsigned long newprio)
br_stp_start	br_stp_if.c	/^static void br_stp_start(struct net_bridge *br)$/;"	f	file:	signature:(struct net_bridge *br)
br_stp_stop	br_stp_if.c	/^static void br_stp_stop(struct net_bridge *br)$/;"	f	file:	signature:(struct net_bridge *br)
br_stp_timer_init	br_private.h	/^void br_stp_timer_init(struct net_bridge *br);$/;"	p	signature:(struct net_bridge *br)
br_stp_timer_init	br_stp_timer.c	/^void br_stp_timer_init(struct net_bridge *br)$/;"	f	signature:(struct net_bridge *br)
br_supersedes_port_info	br_stp.c	/^static int br_supersedes_port_info(const struct net_bridge_port *p,$/;"	f	file:	signature:(const struct net_bridge_port *p, const struct br_config_bpdu *bpdu)
br_sysfs_addbr	br_private.h	/^int br_sysfs_addbr(struct net_device *dev);$/;"	p	signature:(struct net_device *dev)
br_sysfs_addbr	br_private.h	/^static inline int br_sysfs_addbr(struct net_device *dev) { return 0; }$/;"	f	signature:(struct net_device *dev)
br_sysfs_addbr	br_sysfs_br.c	/^int br_sysfs_addbr(struct net_device *dev)$/;"	f	signature:(struct net_device *dev)
br_sysfs_addif	br_private.h	/^int br_sysfs_addif(struct net_bridge_port *p);$/;"	p	signature:(struct net_bridge_port *p)
br_sysfs_addif	br_private.h	/^static inline int br_sysfs_addif(struct net_bridge_port *p) { return 0; }$/;"	f	signature:(struct net_bridge_port *p)
br_sysfs_addif	br_sysfs_if.c	/^int br_sysfs_addif(struct net_bridge_port *p)$/;"	f	signature:(struct net_bridge_port *p)
br_sysfs_delbr	br_private.h	/^static inline void br_sysfs_delbr(struct net_device *dev) { return; }$/;"	f	signature:(struct net_device *dev)
br_sysfs_delbr	br_private.h	/^void br_sysfs_delbr(struct net_device *dev);$/;"	p	signature:(struct net_device *dev)
br_sysfs_delbr	br_sysfs_br.c	/^void br_sysfs_delbr(struct net_device *dev)$/;"	f	signature:(struct net_device *dev)
br_sysfs_renameif	br_private.h	/^int br_sysfs_renameif(struct net_bridge_port *p);$/;"	p	signature:(struct net_bridge_port *p)
br_sysfs_renameif	br_private.h	/^static inline int br_sysfs_renameif(struct net_bridge_port *p) { return 0; }$/;"	f	signature:(struct net_bridge_port *p)
br_sysfs_renameif	br_sysfs_if.c	/^int br_sysfs_renameif(struct net_bridge_port *p)$/;"	f	signature:(struct net_bridge_port *p)
br_tcn_timer_expired	br_stp_timer.c	/^static void br_tcn_timer_expired(unsigned long arg)$/;"	f	file:	signature:(unsigned long arg)
br_timer_value	br_private.h	/^unsigned long br_timer_value(const struct timer_list *timer);$/;"	p	signature:(const struct timer_list *timer)
br_timer_value	br_stp_timer.c	/^unsigned long br_timer_value(const struct timer_list *timer)$/;"	f	signature:(const struct timer_list *timer)
br_topology_change_acknowledge	br_stp.c	/^static void br_topology_change_acknowledge(struct net_bridge_port *p)$/;"	f	file:	signature:(struct net_bridge_port *p)
br_topology_change_acknowledged	br_stp.c	/^static void br_topology_change_acknowledged(struct net_bridge *br)$/;"	f	file:	signature:(struct net_bridge *br)
br_topology_change_detection	br_private_stp.h	/^void br_topology_change_detection(struct net_bridge *br);$/;"	p	signature:(struct net_bridge *br)
br_topology_change_detection	br_stp.c	/^void br_topology_change_detection(struct net_bridge *br)$/;"	f	signature:(struct net_bridge *br)
br_topology_change_timer_expired	br_stp_timer.c	/^static void br_topology_change_timer_expired(unsigned long arg)$/;"	f	file:	signature:(unsigned long arg)
br_transmit_config	br_private_stp.h	/^void br_transmit_config(struct net_bridge_port *p);$/;"	p	signature:(struct net_bridge_port *p)
br_transmit_config	br_stp.c	/^void br_transmit_config(struct net_bridge_port *p)$/;"	f	signature:(struct net_bridge_port *p)
br_transmit_tcn	br_private_stp.h	/^void br_transmit_tcn(struct net_bridge *br);$/;"	p	signature:(struct net_bridge *br)
br_transmit_tcn	br_stp.c	/^void br_transmit_tcn(struct net_bridge *br)$/;"	f	signature:(struct net_bridge *br)
br_type	br_device.c	/^static struct device_type br_type = {$/;"	v	typeref:struct:device_type	file:
br_validate	br_netlink.c	/^static int br_validate(struct nlattr *tb[], struct nlattr *data[])$/;"	f	file:	signature:(struct nlattr *tb[], struct nlattr *data[])
br_vlan_add	br_private.h	/^int br_vlan_add(struct net_bridge *br, u16 vid, u16 flags);$/;"	p	signature:(struct net_bridge *br, u16 vid, u16 flags)
br_vlan_add	br_private.h	/^static inline int br_vlan_add(struct net_bridge *br, u16 vid, u16 flags)$/;"	f	signature:(struct net_bridge *br, u16 vid, u16 flags)
br_vlan_add	br_vlan.c	/^int br_vlan_add(struct net_bridge *br, u16 vid, u16 flags)$/;"	f	signature:(struct net_bridge *br, u16 vid, u16 flags)
br_vlan_delete	br_private.h	/^int br_vlan_delete(struct net_bridge *br, u16 vid);$/;"	p	signature:(struct net_bridge *br, u16 vid)
br_vlan_delete	br_private.h	/^static inline int br_vlan_delete(struct net_bridge *br, u16 vid)$/;"	f	signature:(struct net_bridge *br, u16 vid)
br_vlan_delete	br_vlan.c	/^int br_vlan_delete(struct net_bridge *br, u16 vid)$/;"	f	signature:(struct net_bridge *br, u16 vid)
br_vlan_filter_toggle	br_private.h	/^int br_vlan_filter_toggle(struct net_bridge *br, unsigned long val);$/;"	p	signature:(struct net_bridge *br, unsigned long val)
br_vlan_filter_toggle	br_vlan.c	/^int br_vlan_filter_toggle(struct net_bridge *br, unsigned long val)$/;"	f	signature:(struct net_bridge *br, unsigned long val)
br_vlan_find	br_private.h	/^bool br_vlan_find(struct net_bridge *br, u16 vid);$/;"	p	signature:(struct net_bridge *br, u16 vid)
br_vlan_find	br_private.h	/^static inline bool br_vlan_find(struct net_bridge *br, u16 vid)$/;"	f	signature:(struct net_bridge *br, u16 vid)
br_vlan_find	br_vlan.c	/^bool br_vlan_find(struct net_bridge *br, u16 vid)$/;"	f	signature:(struct net_bridge *br, u16 vid)
br_vlan_flush	br_private.h	/^static inline void br_vlan_flush(struct net_bridge *br)$/;"	f	signature:(struct net_bridge *br)
br_vlan_flush	br_private.h	/^void br_vlan_flush(struct net_bridge *br);$/;"	p	signature:(struct net_bridge *br)
br_vlan_flush	br_vlan.c	/^void br_vlan_flush(struct net_bridge *br)$/;"	f	signature:(struct net_bridge *br)
br_vlan_get_tag	br_private.h	/^static inline int br_vlan_get_tag(const struct sk_buff *skb, u16 *vid)$/;"	f	signature:(const struct sk_buff *skb, u16 *vid)
br_vlan_get_tag	br_private.h	/^static inline u16 br_vlan_get_tag(const struct sk_buff *skb, u16 *tag)$/;"	f	signature:(const struct sk_buff *skb, u16 *tag)
br_warn	br_private.h	323;"	d
brdev	br_private.h	/^	struct net_device *brdev;$/;"	m	struct:br_input_skb_cb	typeref:struct:br_input_skb_cb::net_device	access:public
brforward_read	br_sysfs_br.c	/^static ssize_t brforward_read(struct file *filp, struct kobject *kobj,$/;"	f	file:	signature:(struct file *filp, struct kobject *kobj, struct bin_attribute *bin_attr, char *buf, loff_t off, size_t count)
bridge-y	Makefile	/^bridge-y	:= br.o br_device.o br_fdb.o br_forward.o br_if.o br_input.o \\$/;"	m
bridge_attrs	br_sysfs_br.c	/^static struct attribute *bridge_attrs[] = {$/;"	v	typeref:struct:attribute	file:
bridge_forward	br_sysfs_br.c	/^static struct bin_attribute bridge_forward = {$/;"	v	typeref:struct:bin_attribute	file:
bridge_forward_delay	br_private.h	/^	unsigned long			bridge_forward_delay;$/;"	m	struct:net_bridge	access:public
bridge_group	br_sysfs_br.c	/^static struct attribute_group bridge_group = {$/;"	v	typeref:struct:attribute_group	file:
bridge_hello_time	br_private.h	/^	unsigned long			bridge_hello_time;$/;"	m	struct:net_bridge	access:public
bridge_id	br_private.h	/^	bridge_id			bridge_id;$/;"	m	struct:net_bridge	access:public
bridge_id	br_private.h	/^struct bridge_id$/;"	s
bridge_id	br_private.h	/^typedef struct bridge_id bridge_id;$/;"	t	typeref:struct:bridge_id
bridge_id	br_private_stp.h	/^	bridge_id	bridge_id;$/;"	m	struct:br_config_bpdu	access:public
bridge_id::addr	br_private.h	/^	unsigned char	addr[6];$/;"	m	struct:bridge_id	access:public
bridge_id::prio	br_private.h	/^	unsigned char	prio[2];$/;"	m	struct:bridge_id	access:public
bridge_id_show	br_sysfs_br.c	/^static ssize_t bridge_id_show(struct device *d, struct device_attribute *attr,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, char *buf)
bridge_max_age	br_private.h	/^	unsigned long			bridge_max_age;$/;"	m	struct:net_bridge	access:public
bridge_mcast_querier	br_private.h	/^struct bridge_mcast_querier {$/;"	s
bridge_mcast_querier::delay_time	br_private.h	/^	unsigned long			delay_time;$/;"	m	struct:bridge_mcast_querier	access:public
bridge_mcast_querier::timer	br_private.h	/^	struct timer_list		timer;$/;"	m	struct:bridge_mcast_querier	typeref:struct:bridge_mcast_querier::timer_list	access:public
bridge_mcast_query	br_private.h	/^struct bridge_mcast_query {$/;"	s
bridge_mcast_query::startup_sent	br_private.h	/^	u32			startup_sent;$/;"	m	struct:bridge_mcast_query	access:public
bridge_mcast_query::timer	br_private.h	/^	struct timer_list	timer;$/;"	m	struct:bridge_mcast_query	typeref:struct:bridge_mcast_query::timer_list	access:public
bridge_parent	br_netfilter.c	/^static inline struct net_device *bridge_parent(const struct net_device *dev)$/;"	f	file:	signature:(const struct net_device *dev)
bridge_parent_rtable	br_netfilter.c	/^static inline struct rtable *bridge_parent_rtable(const struct net_device *dev)$/;"	f	file:	signature:(const struct net_device *dev)
brnf_call_arptables	br_netfilter.c	61;"	d	file:
brnf_call_ip6tables	br_netfilter.c	60;"	d	file:
brnf_call_iptables	br_netfilter.c	59;"	d	file:
brnf_filter_pppoe_tagged	br_netfilter.c	63;"	d	file:
brnf_filter_vlan_tagged	br_netfilter.c	62;"	d	file:
brnf_get_logical_dev	br_netfilter.c	/^static struct net_device *brnf_get_logical_dev(struct sk_buff *skb, const struct net_device *dev)$/;"	f	file:	signature:(struct sk_buff *skb, const struct net_device *dev)
brnf_pass_vlan_indev	br_netfilter.c	64;"	d	file:
brnf_sysctl_call_tables	br_netfilter.c	/^int brnf_sysctl_call_tables(struct ctl_table *ctl, int write,$/;"	f	file:	signature:(struct ctl_table *ctl, int write, void __user *buffer, size_t *lenp, loff_t *ppos)
brnf_sysctl_header	br_netfilter.c	/^static struct ctl_table_header *brnf_sysctl_header;$/;"	v	typeref:struct:ctl_table_header	file:
brnf_table	br_netfilter.c	/^static struct ctl_table brnf_table[] = {$/;"	v	typeref:struct:ctl_table	file:
broute_net_exit	netfilter/ebtable_broute.c	/^static void __net_exit broute_net_exit(struct net *net)$/;"	f	file:	signature:(struct net *net)
broute_net_init	netfilter/ebtable_broute.c	/^static int __net_init broute_net_init(struct net *net)$/;"	f	file:	signature:(struct net *net)
broute_net_ops	netfilter/ebtable_broute.c	/^static struct pernet_operations broute_net_ops = {$/;"	v	typeref:struct:pernet_operations	file:
broute_table	netfilter/ebtable_broute.c	/^static const struct ebt_table broute_table = {$/;"	v	typeref:struct:ebt_table	file:
brport_attribute	br_sysfs_if.c	/^struct brport_attribute {$/;"	s	file:
brport_attribute::attr	br_sysfs_if.c	/^	struct attribute	attr;$/;"	m	struct:brport_attribute	typeref:struct:brport_attribute::attribute	file:	access:public
brport_attribute::show	br_sysfs_if.c	/^	ssize_t (*show)(struct net_bridge_port *, char *);$/;"	m	struct:brport_attribute	file:	access:public
brport_attribute::store	br_sysfs_if.c	/^	int (*store)(struct net_bridge_port *, unsigned long);$/;"	m	struct:brport_attribute	file:	access:public
brport_attrs	br_sysfs_if.c	/^static const struct brport_attribute *brport_attrs[] = {$/;"	v	typeref:struct:brport_attribute	file:
brport_ktype	br_if.c	/^static struct kobj_type brport_ktype = {$/;"	v	typeref:struct:kobj_type	file:
brport_show	br_sysfs_if.c	/^static ssize_t brport_show(struct kobject *kobj,$/;"	f	file:	signature:(struct kobject *kobj, struct attribute *attr, char *buf)
brport_store	br_sysfs_if.c	/^static ssize_t brport_store(struct kobject *kobj,$/;"	f	file:	signature:(struct kobject *kobj, struct attribute *attr, const char *buf, size_t count)
brport_sysfs_ops	br_sysfs_if.c	/^const struct sysfs_ops brport_sysfs_ops = {$/;"	v	typeref:struct:sysfs_ops
buf_kern_len	netfilter/ebtables.c	/^	u32 buf_kern_len;	\/* total size of kernel buffer *\/$/;"	m	struct:ebt_entries_buf_state	file:	access:public
buf_kern_offset	netfilter/ebtables.c	/^	u32 buf_kern_offset;	\/* amount of data copied so far *\/$/;"	m	struct:ebt_entries_buf_state	file:	access:public
buf_kern_start	netfilter/ebtables.c	/^	char *buf_kern_start;	\/* kernel buffer to copy (translated) data to *\/$/;"	m	struct:ebt_entries_buf_state	file:	access:public
buf_user_offset	netfilter/ebtables.c	/^	u32 buf_user_offset;	\/* read position in userspace buffer *\/$/;"	m	struct:ebt_entries_buf_state	file:	access:public
burst	netfilter/ebt_limit.c	/^	compat_uint_t avg, burst;$/;"	m	struct:ebt_compat_limit_info	file:	access:public
check	netfilter/ebtable_broute.c	/^static int check(const struct ebt_table_info *info, unsigned int valid_hooks)$/;"	f	file:	signature:(const struct ebt_table_info *info, unsigned int valid_hooks)
check	netfilter/ebtable_filter.c	/^static int check(const struct ebt_table_info *info, unsigned int valid_hooks)$/;"	f	file:	signature:(const struct ebt_table_info *info, unsigned int valid_hooks)
check	netfilter/ebtable_nat.c	/^static int check(const struct ebt_table_info *info, unsigned int valid_hooks)$/;"	f	file:	signature:(const struct ebt_table_info *info, unsigned int valid_hooks)
check_chainloops	netfilter/ebtables.c	/^static int check_chainloops(const struct ebt_entries *chain, struct ebt_cl_stack *cl_s,$/;"	f	file:	signature:(const struct ebt_entries *chain, struct ebt_cl_stack *cl_s, unsigned int udc_cnt, unsigned int hooknr, char *base)
check_hbh_len	br_netfilter.c	/^static int check_hbh_len(struct sk_buff *skb)$/;"	f	file:	signature:(struct sk_buff *skb)
code	netfilter/ebt_ip6.c	/^		u8 code;$/;"	m	struct:pkthdr::__anon7	file:	access:public
compat_calc_entry	netfilter/ebtables.c	/^static int compat_calc_entry(const struct ebt_entry *e,$/;"	f	file:	signature:(const struct ebt_entry *e, const struct ebt_table_info *info, const void *base, struct compat_ebt_replace *newinfo)
compat_calc_match	netfilter/ebtables.c	/^static int compat_calc_match(struct ebt_entry_match *m, int *off)$/;"	f	file:	signature:(struct ebt_entry_match *m, int *off)
compat_calc_watcher	netfilter/ebtables.c	/^static int compat_calc_watcher(struct ebt_entry_watcher *w, int *off)$/;"	f	file:	signature:(struct ebt_entry_watcher *w, int *off)
compat_copy_ebt_replace_from_user	netfilter/ebtables.c	/^static int compat_copy_ebt_replace_from_user(struct ebt_replace *repl,$/;"	f	file:	signature:(struct ebt_replace *repl, void __user *user, unsigned int len)
compat_copy_entries	netfilter/ebtables.c	/^static int compat_copy_entries(unsigned char *data, unsigned int size_user,$/;"	f	file:	signature:(unsigned char *data, unsigned int size_user, struct ebt_entries_buf_state *state)
compat_copy_entry_to_user	netfilter/ebtables.c	/^static int compat_copy_entry_to_user(struct ebt_entry *e, void __user **dstptr,$/;"	f	file:	signature:(struct ebt_entry *e, void __user **dstptr, unsigned int *size)
compat_copy_everything_to_user	netfilter/ebtables.c	/^static int compat_copy_everything_to_user(struct ebt_table *t,$/;"	f	file:	signature:(struct ebt_table *t, void __user *user, int *len, int cmd)
compat_do_ebt_get_ctl	netfilter/ebtables.c	/^static int compat_do_ebt_get_ctl(struct sock *sk, int cmd,$/;"	f	file:	signature:(struct sock *sk, int cmd, void __user *user, int *len)
compat_do_ebt_set_ctl	netfilter/ebtables.c	/^static int compat_do_ebt_set_ctl(struct sock *sk,$/;"	f	file:	signature:(struct sock *sk, int cmd, void __user *user, unsigned int len)
compat_do_replace	netfilter/ebtables.c	/^static int compat_do_replace(struct net *net, void __user *user,$/;"	f	file:	signature:(struct net *net, void __user *user, unsigned int len)
compat_ebt_entry_mwt	netfilter/ebtables.c	/^struct compat_ebt_entry_mwt {$/;"	s	file:
compat_ebt_entry_mwt::__anon5::name	netfilter/ebtables.c	/^		char name[EBT_FUNCTION_MAXNAMELEN];$/;"	m	union:compat_ebt_entry_mwt::__anon5	file:	access:public
compat_ebt_entry_mwt::__anon5::ptr	netfilter/ebtables.c	/^		compat_uptr_t ptr;$/;"	m	union:compat_ebt_entry_mwt::__anon5	file:	access:public
compat_ebt_entry_mwt::data	netfilter/ebtables.c	/^	compat_uint_t data[0];$/;"	m	struct:compat_ebt_entry_mwt	file:	access:public
compat_ebt_entry_mwt::match_size	netfilter/ebtables.c	/^	compat_uint_t match_size;$/;"	m	struct:compat_ebt_entry_mwt	file:	access:public
compat_ebt_entry_mwt::u	netfilter/ebtables.c	/^	} u;$/;"	m	struct:compat_ebt_entry_mwt	typeref:union:compat_ebt_entry_mwt::__anon5	file:	access:public
compat_ebt_mark_m_info	netfilter/ebt_mark_m.c	/^struct compat_ebt_mark_m_info {$/;"	s	file:
compat_ebt_mark_m_info::bitmask	netfilter/ebt_mark_m.c	/^	uint8_t invert, bitmask;$/;"	m	struct:compat_ebt_mark_m_info	file:	access:public
compat_ebt_mark_m_info::invert	netfilter/ebt_mark_m.c	/^	uint8_t invert, bitmask;$/;"	m	struct:compat_ebt_mark_m_info	file:	access:public
compat_ebt_mark_m_info::mark	netfilter/ebt_mark_m.c	/^	compat_ulong_t mark, mask;$/;"	m	struct:compat_ebt_mark_m_info	file:	access:public
compat_ebt_mark_m_info::mask	netfilter/ebt_mark_m.c	/^	compat_ulong_t mark, mask;$/;"	m	struct:compat_ebt_mark_m_info	file:	access:public
compat_ebt_mark_t_info	netfilter/ebt_mark.c	/^struct compat_ebt_mark_t_info {$/;"	s	file:
compat_ebt_mark_t_info::mark	netfilter/ebt_mark.c	/^	compat_ulong_t mark;$/;"	m	struct:compat_ebt_mark_t_info	file:	access:public
compat_ebt_mark_t_info::target	netfilter/ebt_mark.c	/^	compat_uint_t target;$/;"	m	struct:compat_ebt_mark_t_info	file:	access:public
compat_ebt_replace	netfilter/ebtables.c	/^struct compat_ebt_replace {$/;"	s	file:
compat_ebt_replace::counters	netfilter/ebtables.c	/^	compat_uptr_t counters;$/;"	m	struct:compat_ebt_replace	file:	access:public
compat_ebt_replace::entries	netfilter/ebtables.c	/^	compat_uptr_t entries;$/;"	m	struct:compat_ebt_replace	file:	access:public
compat_ebt_replace::entries_size	netfilter/ebtables.c	/^	compat_uint_t entries_size;$/;"	m	struct:compat_ebt_replace	file:	access:public
compat_ebt_replace::hook_entry	netfilter/ebtables.c	/^	compat_uptr_t hook_entry[NF_BR_NUMHOOKS];$/;"	m	struct:compat_ebt_replace	file:	access:public
compat_ebt_replace::name	netfilter/ebtables.c	/^	char name[EBT_TABLE_MAXNAMELEN];$/;"	m	struct:compat_ebt_replace	file:	access:public
compat_ebt_replace::nentries	netfilter/ebtables.c	/^	compat_uint_t nentries;$/;"	m	struct:compat_ebt_replace	file:	access:public
compat_ebt_replace::num_counters	netfilter/ebtables.c	/^	compat_uint_t num_counters;$/;"	m	struct:compat_ebt_replace	file:	access:public
compat_ebt_replace::valid_hooks	netfilter/ebtables.c	/^	compat_uint_t valid_hooks;$/;"	m	struct:compat_ebt_replace	file:	access:public
compat_match_to_user	netfilter/ebtables.c	/^static int compat_match_to_user(struct ebt_entry_match *m, void __user **dstptr,$/;"	f	file:	signature:(struct ebt_entry_match *m, void __user **dstptr, unsigned int *size)
compat_mtw_from_user	netfilter/ebtables.c	/^static int compat_mtw_from_user(struct compat_ebt_entry_mwt *mwt,$/;"	f	file:	signature:(struct compat_ebt_entry_mwt *mwt, enum compat_mwt compat_mwt, struct ebt_entries_buf_state *state, const unsigned char *base)
compat_mwt	netfilter/ebtables.c	/^enum compat_mwt {$/;"	g	file:
compat_table_info	netfilter/ebtables.c	/^static int compat_table_info(const struct ebt_table_info *info,$/;"	f	file:	signature:(const struct ebt_table_info *info, struct compat_ebt_replace *newinfo)
compat_target_to_user	netfilter/ebtables.c	/^static int compat_target_to_user(struct ebt_entry_target *t,$/;"	f	file:	signature:(struct ebt_entry_target *t, void __user **dstptr, unsigned int *size)
compat_update_counters	netfilter/ebtables.c	/^static int compat_update_counters(struct net *net, void __user *user,$/;"	f	file:	signature:(struct net *net, void __user *user, unsigned int len)
compat_watcher_to_user	netfilter/ebtables.c	/^static int compat_watcher_to_user(struct ebt_entry_watcher *w,$/;"	f	file:	signature:(struct ebt_entry_watcher *w, void __user **dstptr, unsigned int *size)
config_pending	br_private.h	/^	unsigned char			config_pending;$/;"	m	struct:net_bridge_port	access:public
copy_counters_to_user	netfilter/ebtables.c	/^static int copy_counters_to_user(struct ebt_table *t,$/;"	f	file:	signature:(struct ebt_table *t, const struct ebt_counter *oldcounters, void __user *user, unsigned int num_counters, unsigned int nentries)
copy_everything_to_user	netfilter/ebtables.c	/^static int copy_everything_to_user(struct ebt_table *t, void __user *user,$/;"	f	file:	signature:(struct ebt_table *t, void __user *user, const int *len, int cmd)
cost	netfilter/ebt_limit.c	/^	compat_uint_t credit, credit_cap, cost;$/;"	m	struct:ebt_compat_limit_info	file:	access:public
counters	netfilter/ebtables.c	/^	compat_uptr_t counters;$/;"	m	struct:compat_ebt_replace	file:	access:public
credit	netfilter/ebt_limit.c	/^	compat_uint_t credit, credit_cap, cost;$/;"	m	struct:ebt_compat_limit_info	file:	access:public
credit_cap	netfilter/ebt_limit.c	/^	compat_uint_t credit, credit_cap, cost;$/;"	m	struct:ebt_compat_limit_info	file:	access:public
cs	netfilter/ebtables.c	/^	struct ebt_chainstack cs;$/;"	m	struct:ebt_cl_stack	typeref:struct:ebt_cl_stack::ebt_chainstack	file:	access:public
ctrl	netfilter/ebt_stp.c	/^	uint8_t ctrl;$/;"	m	struct:stp_header	file:	access:public
data	netfilter/ebtables.c	/^	compat_uint_t data[0];$/;"	m	struct:compat_ebt_entry_mwt	file:	access:public
del_nbp	br_if.c	/^static void del_nbp(struct net_bridge_port *p)$/;"	f	file:	signature:(struct net_bridge_port *p)
delay_time	br_private.h	/^	unsigned long			delay_time;$/;"	m	struct:bridge_mcast_querier	access:public
deliver_clone	br_forward.c	/^static int deliver_clone(const struct net_bridge_port *prev,$/;"	f	file:	signature:(const struct net_bridge_port *prev, struct sk_buff *skb, void (*__packet_hook)(const struct net_bridge_port *p, struct sk_buff *skb))
deliver_clone	br_forward.c	/^static int deliver_clone(const struct net_bridge_port *prev,$/;"	p	file:	signature:(const struct net_bridge_port *prev, struct sk_buff *skb, void (*__packet_hook)(const struct net_bridge_port *p, struct sk_buff *skb))
designated_age	br_private.h	/^	unsigned long			designated_age;$/;"	m	struct:net_bridge_port	access:public
designated_bridge	br_private.h	/^	bridge_id			designated_bridge;$/;"	m	struct:net_bridge_port	access:public
designated_cost	br_private.h	/^	u32				designated_cost;$/;"	m	struct:net_bridge_port	access:public
designated_port	br_private.h	/^	port_id				designated_port;$/;"	m	struct:net_bridge_port	access:public
designated_root	br_private.h	/^	bridge_id			designated_root;$/;"	m	struct:net_bridge	access:public
designated_root	br_private.h	/^	bridge_id			designated_root;$/;"	m	struct:net_bridge_port	access:public
destroy_nbp	br_if.c	/^static void destroy_nbp(struct net_bridge_port *p)$/;"	f	file:	signature:(struct net_bridge_port *p)
destroy_nbp_rcu	br_if.c	/^static void destroy_nbp_rcu(struct rcu_head *head)$/;"	f	file:	signature:(struct rcu_head *head)
dev	br_private.h	/^	struct net_device		*dev;$/;"	m	struct:net_bridge	typeref:struct:net_bridge::net_device	access:public
dev	br_private.h	/^	struct net_device		*dev;$/;"	m	struct:net_bridge_port	typeref:struct:net_bridge_port::net_device	access:public
dnat_took_place	br_netfilter.c	48;"	d	file:
do_ebt_get_ctl	netfilter/ebtables.c	/^static int do_ebt_get_ctl(struct sock *sk, int cmd, void __user *user, int *len)$/;"	f	file:	signature:(struct sock *sk, int cmd, void __user *user, int *len)
do_ebt_set_ctl	netfilter/ebtables.c	/^static int do_ebt_set_ctl(struct sock *sk,$/;"	f	file:	signature:(struct sock *sk, int cmd, void __user *user, unsigned int len)
do_replace	netfilter/ebtables.c	/^static int do_replace(struct net *net, const void __user *user,$/;"	f	file:	signature:(struct net *net, const void __user *user, unsigned int len)
do_replace_finish	netfilter/ebtables.c	/^static int do_replace_finish(struct net *net, struct ebt_replace *repl,$/;"	f	file:	signature:(struct net *net, struct ebt_replace *repl, struct ebt_table_info *newinfo)
do_update_counters	netfilter/ebtables.c	/^static int do_update_counters(struct net *net, const char *name,$/;"	f	file:	signature:(struct net *net, const char *name, struct ebt_counter __user *counters, unsigned int num_counters, const void __user *user, unsigned int len)
dsap	netfilter/ebt_stp.c	/^	uint8_t dsap;$/;"	m	struct:stp_header	file:	access:public
dst	br_private.h	/^	struct net_bridge_port		*dst;$/;"	m	struct:net_bridge_fdb_entry	typeref:struct:net_bridge_fdb_entry::net_bridge_port	access:public
dst	netfilter/ebt_ip.c	/^	__be16 dst;$/;"	m	struct:tcpudphdr	file:	access:public
dst	netfilter/ebt_ip6.c	/^		__be16 dst;$/;"	m	struct:pkthdr::__anon6	file:	access:public
dst	netfilter/ebt_log.c	/^	__be16 dst;$/;"	m	struct:tcpudphdr	file:	access:public
ebt_802_3_fini	netfilter/ebt_802_3.c	/^module_exit(ebt_802_3_fini);$/;"	v
ebt_802_3_fini	netfilter/ebt_802_3.c	/^static void __exit ebt_802_3_fini(void)$/;"	f	file:	signature:(void)
ebt_802_3_init	netfilter/ebt_802_3.c	/^module_init(ebt_802_3_init);$/;"	v
ebt_802_3_init	netfilter/ebt_802_3.c	/^static int __init ebt_802_3_init(void)$/;"	f	file:	signature:(void)
ebt_802_3_mt	netfilter/ebt_802_3.c	/^ebt_802_3_mt(const struct sk_buff *skb, struct xt_action_param *par)$/;"	f	file:	signature:(const struct sk_buff *skb, struct xt_action_param *par)
ebt_802_3_mt_check	netfilter/ebt_802_3.c	/^static int ebt_802_3_mt_check(const struct xt_mtchk_param *par)$/;"	f	file:	signature:(const struct xt_mtchk_param *par)
ebt_among_fini	netfilter/ebt_among.c	/^module_exit(ebt_among_fini);$/;"	v
ebt_among_fini	netfilter/ebt_among.c	/^static void __exit ebt_among_fini(void)$/;"	f	file:	signature:(void)
ebt_among_init	netfilter/ebt_among.c	/^module_init(ebt_among_init);$/;"	v
ebt_among_init	netfilter/ebt_among.c	/^static int __init ebt_among_init(void)$/;"	f	file:	signature:(void)
ebt_among_mt	netfilter/ebt_among.c	/^ebt_among_mt(const struct sk_buff *skb, struct xt_action_param *par)$/;"	f	file:	signature:(const struct sk_buff *skb, struct xt_action_param *par)
ebt_among_mt_check	netfilter/ebt_among.c	/^static int ebt_among_mt_check(const struct xt_mtchk_param *par)$/;"	f	file:	signature:(const struct xt_mtchk_param *par)
ebt_arp_fini	netfilter/ebt_arp.c	/^module_exit(ebt_arp_fini);$/;"	v
ebt_arp_fini	netfilter/ebt_arp.c	/^static void __exit ebt_arp_fini(void)$/;"	f	file:	signature:(void)
ebt_arp_init	netfilter/ebt_arp.c	/^module_init(ebt_arp_init);$/;"	v
ebt_arp_init	netfilter/ebt_arp.c	/^static int __init ebt_arp_init(void)$/;"	f	file:	signature:(void)
ebt_arp_mt	netfilter/ebt_arp.c	/^ebt_arp_mt(const struct sk_buff *skb, struct xt_action_param *par)$/;"	f	file:	signature:(const struct sk_buff *skb, struct xt_action_param *par)
ebt_arp_mt_check	netfilter/ebt_arp.c	/^static int ebt_arp_mt_check(const struct xt_mtchk_param *par)$/;"	f	file:	signature:(const struct xt_mtchk_param *par)
ebt_arpreply_fini	netfilter/ebt_arpreply.c	/^module_exit(ebt_arpreply_fini);$/;"	v
ebt_arpreply_fini	netfilter/ebt_arpreply.c	/^static void __exit ebt_arpreply_fini(void)$/;"	f	file:	signature:(void)
ebt_arpreply_init	netfilter/ebt_arpreply.c	/^module_init(ebt_arpreply_init);$/;"	v
ebt_arpreply_init	netfilter/ebt_arpreply.c	/^static int __init ebt_arpreply_init(void)$/;"	f	file:	signature:(void)
ebt_arpreply_tg	netfilter/ebt_arpreply.c	/^ebt_arpreply_tg(struct sk_buff *skb, const struct xt_action_param *par)$/;"	f	file:	signature:(struct sk_buff *skb, const struct xt_action_param *par)
ebt_arpreply_tg_check	netfilter/ebt_arpreply.c	/^static int ebt_arpreply_tg_check(const struct xt_tgchk_param *par)$/;"	f	file:	signature:(const struct xt_tgchk_param *par)
ebt_basic_match	netfilter/ebtables.c	/^ebt_basic_match(const struct ebt_entry *e, const struct sk_buff *skb,$/;"	f	file:	signature:(const struct ebt_entry *e, const struct sk_buff *skb, const struct net_device *in, const struct net_device *out)
ebt_broute	netfilter/ebtable_broute.c	/^static int ebt_broute(struct sk_buff *skb)$/;"	f	file:	signature:(struct sk_buff *skb)
ebt_buf_add	netfilter/ebtables.c	/^static int ebt_buf_add(struct ebt_entries_buf_state *state,$/;"	f	file:	signature:(struct ebt_entries_buf_state *state, void *data, unsigned int sz)
ebt_buf_add_pad	netfilter/ebtables.c	/^static int ebt_buf_add_pad(struct ebt_entries_buf_state *state, unsigned int sz)$/;"	f	file:	signature:(struct ebt_entries_buf_state *state, unsigned int sz)
ebt_buf_count	netfilter/ebtables.c	/^static int ebt_buf_count(struct ebt_entries_buf_state *state, unsigned int sz)$/;"	f	file:	signature:(struct ebt_entries_buf_state *state, unsigned int sz)
ebt_check_entry	netfilter/ebtables.c	/^ebt_check_entry(struct ebt_entry *e, struct net *net,$/;"	f	file:	signature:(struct ebt_entry *e, struct net *net, const struct ebt_table_info *newinfo, const char *name, unsigned int *cnt, struct ebt_cl_stack *cl_s, unsigned int udc_cnt)
ebt_check_entry_size_and_hooks	netfilter/ebtables.c	/^ebt_check_entry_size_and_hooks(const struct ebt_entry *e,$/;"	f	file:	signature:(const struct ebt_entry *e, const struct ebt_table_info *newinfo, unsigned int *n, unsigned int *cnt, unsigned int *totalcnt, unsigned int *udc_cnt)
ebt_check_match	netfilter/ebtables.c	/^ebt_check_match(struct ebt_entry_match *m, struct xt_mtchk_param *par,$/;"	f	file:	signature:(struct ebt_entry_match *m, struct xt_mtchk_param *par, unsigned int *cnt)
ebt_check_watcher	netfilter/ebtables.c	/^ebt_check_watcher(struct ebt_entry_watcher *w, struct xt_tgchk_param *par,$/;"	f	file:	signature:(struct ebt_entry_watcher *w, struct xt_tgchk_param *par, unsigned int *cnt)
ebt_cl_stack	netfilter/ebtables.c	/^struct ebt_cl_stack$/;"	s	file:
ebt_cl_stack::cs	netfilter/ebtables.c	/^	struct ebt_chainstack cs;$/;"	m	struct:ebt_cl_stack	typeref:struct:ebt_cl_stack::ebt_chainstack	file:	access:public
ebt_cl_stack::from	netfilter/ebtables.c	/^	int from;$/;"	m	struct:ebt_cl_stack	file:	access:public
ebt_cl_stack::hookmask	netfilter/ebtables.c	/^	unsigned int hookmask;$/;"	m	struct:ebt_cl_stack	file:	access:public
ebt_cleanup_entry	netfilter/ebtables.c	/^ebt_cleanup_entry(struct ebt_entry *e, struct net *net, unsigned int *cnt)$/;"	f	file:	signature:(struct ebt_entry *e, struct net *net, unsigned int *cnt)
ebt_cleanup_match	netfilter/ebtables.c	/^ebt_cleanup_match(struct ebt_entry_match *m, struct net *net, unsigned int *i)$/;"	f	file:	signature:(struct ebt_entry_match *m, struct net *net, unsigned int *i)
ebt_cleanup_watcher	netfilter/ebtables.c	/^ebt_cleanup_watcher(struct ebt_entry_watcher *w, struct net *net, unsigned int *i)$/;"	f	file:	signature:(struct ebt_entry_watcher *w, struct net *net, unsigned int *i)
ebt_compat_entry_padsize	netfilter/ebtables.c	/^static int ebt_compat_entry_padsize(void)$/;"	f	file:	signature:(void)
ebt_compat_limit_info	netfilter/ebt_limit.c	/^struct ebt_compat_limit_info {$/;"	s	file:
ebt_compat_limit_info::avg	netfilter/ebt_limit.c	/^	compat_uint_t avg, burst;$/;"	m	struct:ebt_compat_limit_info	file:	access:public
ebt_compat_limit_info::burst	netfilter/ebt_limit.c	/^	compat_uint_t avg, burst;$/;"	m	struct:ebt_compat_limit_info	file:	access:public
ebt_compat_limit_info::cost	netfilter/ebt_limit.c	/^	compat_uint_t credit, credit_cap, cost;$/;"	m	struct:ebt_compat_limit_info	file:	access:public
ebt_compat_limit_info::credit	netfilter/ebt_limit.c	/^	compat_uint_t credit, credit_cap, cost;$/;"	m	struct:ebt_compat_limit_info	file:	access:public
ebt_compat_limit_info::credit_cap	netfilter/ebt_limit.c	/^	compat_uint_t credit, credit_cap, cost;$/;"	m	struct:ebt_compat_limit_info	file:	access:public
ebt_compat_limit_info::prev	netfilter/ebt_limit.c	/^	compat_ulong_t prev;$/;"	m	struct:ebt_compat_limit_info	file:	access:public
ebt_compat_match_offset	netfilter/ebtables.c	/^static int ebt_compat_match_offset(const struct xt_match *match,$/;"	f	file:	signature:(const struct xt_match *match, unsigned int userlen)
ebt_dev_check	netfilter/ebtables.c	/^ebt_dev_check(const char *entry, const struct net_device *device)$/;"	f	file:	signature:(const char *entry, const struct net_device *device)
ebt_dnat_fini	netfilter/ebt_dnat.c	/^module_exit(ebt_dnat_fini);$/;"	v
ebt_dnat_fini	netfilter/ebt_dnat.c	/^static void __exit ebt_dnat_fini(void)$/;"	f	file:	signature:(void)
ebt_dnat_init	netfilter/ebt_dnat.c	/^module_init(ebt_dnat_init);$/;"	v
ebt_dnat_init	netfilter/ebt_dnat.c	/^static int __init ebt_dnat_init(void)$/;"	f	file:	signature:(void)
ebt_dnat_tg	netfilter/ebt_dnat.c	/^ebt_dnat_tg(struct sk_buff *skb, const struct xt_action_param *par)$/;"	f	file:	signature:(struct sk_buff *skb, const struct xt_action_param *par)
ebt_dnat_tg_check	netfilter/ebt_dnat.c	/^static int ebt_dnat_tg_check(const struct xt_tgchk_param *par)$/;"	f	file:	signature:(const struct xt_tgchk_param *par)
ebt_do_match	netfilter/ebtables.c	/^ebt_do_match(struct ebt_entry_match *m, const struct sk_buff *skb,$/;"	f	file:	signature:(struct ebt_entry_match *m, const struct sk_buff *skb, struct xt_action_param *par)
ebt_do_table	netfilter/ebtables.c	/^EXPORT_SYMBOL(ebt_do_table);$/;"	v
ebt_do_table	netfilter/ebtables.c	/^unsigned int ebt_do_table (unsigned int hook, struct sk_buff *skb,$/;"	f	signature:(unsigned int hook, struct sk_buff *skb, const struct net_device *in, const struct net_device *out, struct ebt_table *table)
ebt_do_watcher	netfilter/ebtables.c	/^ebt_do_watcher(const struct ebt_entry_watcher *w, struct sk_buff *skb,$/;"	f	file:	signature:(const struct ebt_entry_watcher *w, struct sk_buff *skb, struct xt_action_param *par)
ebt_entries_buf_state	netfilter/ebtables.c	/^struct ebt_entries_buf_state {$/;"	s	file:
ebt_entries_buf_state::buf_kern_len	netfilter/ebtables.c	/^	u32 buf_kern_len;	\/* total size of kernel buffer *\/$/;"	m	struct:ebt_entries_buf_state	file:	access:public
ebt_entries_buf_state::buf_kern_offset	netfilter/ebtables.c	/^	u32 buf_kern_offset;	\/* amount of data copied so far *\/$/;"	m	struct:ebt_entries_buf_state	file:	access:public
ebt_entries_buf_state::buf_kern_start	netfilter/ebtables.c	/^	char *buf_kern_start;	\/* kernel buffer to copy (translated) data to *\/$/;"	m	struct:ebt_entries_buf_state	file:	access:public
ebt_entries_buf_state::buf_user_offset	netfilter/ebtables.c	/^	u32 buf_user_offset;	\/* read position in userspace buffer *\/$/;"	m	struct:ebt_entries_buf_state	file:	access:public
ebt_filter_config	netfilter/ebt_stp.c	/^static bool ebt_filter_config(const struct ebt_stp_info *info,$/;"	f	file:	signature:(const struct ebt_stp_info *info, const struct stp_config_pdu *stpc)
ebt_get_udc_positions	netfilter/ebtables.c	/^ebt_get_udc_positions(struct ebt_entry *e, struct ebt_table_info *newinfo,$/;"	f	file:	signature:(struct ebt_entry *e, struct ebt_table_info *newinfo, unsigned int *n, struct ebt_cl_stack *udc)
ebt_in_hook	netfilter/ebtable_filter.c	/^ebt_in_hook(const struct nf_hook_ops *ops, struct sk_buff *skb,$/;"	f	file:	signature:(const struct nf_hook_ops *ops, struct sk_buff *skb, const struct net_device *in, const struct net_device *out, int (*okfn)(struct sk_buff *))
ebt_ip6_fini	netfilter/ebt_ip6.c	/^module_exit(ebt_ip6_fini);$/;"	v
ebt_ip6_fini	netfilter/ebt_ip6.c	/^static void __exit ebt_ip6_fini(void)$/;"	f	file:	signature:(void)
ebt_ip6_init	netfilter/ebt_ip6.c	/^module_init(ebt_ip6_init);$/;"	v
ebt_ip6_init	netfilter/ebt_ip6.c	/^static int __init ebt_ip6_init(void)$/;"	f	file:	signature:(void)
ebt_ip6_mt	netfilter/ebt_ip6.c	/^ebt_ip6_mt(const struct sk_buff *skb, struct xt_action_param *par)$/;"	f	file:	signature:(const struct sk_buff *skb, struct xt_action_param *par)
ebt_ip6_mt_check	netfilter/ebt_ip6.c	/^static int ebt_ip6_mt_check(const struct xt_mtchk_param *par)$/;"	f	file:	signature:(const struct xt_mtchk_param *par)
ebt_ip_fini	netfilter/ebt_ip.c	/^module_exit(ebt_ip_fini);$/;"	v
ebt_ip_fini	netfilter/ebt_ip.c	/^static void __exit ebt_ip_fini(void)$/;"	f	file:	signature:(void)
ebt_ip_init	netfilter/ebt_ip.c	/^module_init(ebt_ip_init);$/;"	v
ebt_ip_init	netfilter/ebt_ip.c	/^static int __init ebt_ip_init(void)$/;"	f	file:	signature:(void)
ebt_ip_mt	netfilter/ebt_ip.c	/^ebt_ip_mt(const struct sk_buff *skb, struct xt_action_param *par)$/;"	f	file:	signature:(const struct sk_buff *skb, struct xt_action_param *par)
ebt_ip_mt_check	netfilter/ebt_ip.c	/^static int ebt_ip_mt_check(const struct xt_mtchk_param *par)$/;"	f	file:	signature:(const struct xt_mtchk_param *par)
ebt_limit_fini	netfilter/ebt_limit.c	/^module_exit(ebt_limit_fini);$/;"	v
ebt_limit_fini	netfilter/ebt_limit.c	/^static void __exit ebt_limit_fini(void)$/;"	f	file:	signature:(void)
ebt_limit_init	netfilter/ebt_limit.c	/^module_init(ebt_limit_init);$/;"	v
ebt_limit_init	netfilter/ebt_limit.c	/^static int __init ebt_limit_init(void)$/;"	f	file:	signature:(void)
ebt_limit_mt	netfilter/ebt_limit.c	/^ebt_limit_mt(const struct sk_buff *skb, struct xt_action_param *par)$/;"	f	file:	signature:(const struct sk_buff *skb, struct xt_action_param *par)
ebt_limit_mt_check	netfilter/ebt_limit.c	/^static int ebt_limit_mt_check(const struct xt_mtchk_param *par)$/;"	f	file:	signature:(const struct xt_mtchk_param *par)
ebt_log_fini	netfilter/ebt_log.c	/^module_exit(ebt_log_fini);$/;"	v
ebt_log_fini	netfilter/ebt_log.c	/^static void __exit ebt_log_fini(void)$/;"	f	file:	signature:(void)
ebt_log_init	netfilter/ebt_log.c	/^module_init(ebt_log_init);$/;"	v
ebt_log_init	netfilter/ebt_log.c	/^static int __init ebt_log_init(void)$/;"	f	file:	signature:(void)
ebt_log_net_fini	netfilter/ebt_log.c	/^static void __net_exit ebt_log_net_fini(struct net *net)$/;"	f	file:	signature:(struct net *net)
ebt_log_net_init	netfilter/ebt_log.c	/^static int __net_init ebt_log_net_init(struct net *net)$/;"	f	file:	signature:(struct net *net)
ebt_log_net_ops	netfilter/ebt_log.c	/^static struct pernet_operations ebt_log_net_ops = {$/;"	v	typeref:struct:pernet_operations	file:
ebt_log_packet	netfilter/ebt_log.c	/^ebt_log_packet(struct net *net, u_int8_t pf, unsigned int hooknum,$/;"	f	file:	signature:(struct net *net, u_int8_t pf, unsigned int hooknum, const struct sk_buff *skb, const struct net_device *in, const struct net_device *out, const struct nf_loginfo *loginfo, const char *prefix)
ebt_log_packet	netfilter/ebt_ulog.c	/^static void ebt_log_packet(struct net *net, u_int8_t pf, unsigned int hooknum,$/;"	f	file:	signature:(struct net *net, u_int8_t pf, unsigned int hooknum, const struct sk_buff *skb, const struct net_device *in, const struct net_device *out, const struct nf_loginfo *li, const char *prefix)
ebt_log_tg	netfilter/ebt_log.c	/^ebt_log_tg(struct sk_buff *skb, const struct xt_action_param *par)$/;"	f	file:	signature:(struct sk_buff *skb, const struct xt_action_param *par)
ebt_log_tg_check	netfilter/ebt_log.c	/^static int ebt_log_tg_check(const struct xt_tgchk_param *par)$/;"	f	file:	signature:(const struct xt_tgchk_param *par)
ebt_mac_wormhash_check_integrity	netfilter/ebt_among.c	/^static int ebt_mac_wormhash_check_integrity(const struct ebt_mac_wormhash$/;"	f	file:	signature:(const struct ebt_mac_wormhash *wh)
ebt_mac_wormhash_contains	netfilter/ebt_among.c	/^static bool ebt_mac_wormhash_contains(const struct ebt_mac_wormhash *wh,$/;"	f	file:	signature:(const struct ebt_mac_wormhash *wh, const char *mac, __be32 ip)
ebt_make_matchname	netfilter/ebtables.c	/^static inline int ebt_make_matchname(const struct ebt_entry_match *m,$/;"	f	file:	signature:(const struct ebt_entry_match *m, const char *base, char __user *ubase)
ebt_make_names	netfilter/ebtables.c	/^ebt_make_names(struct ebt_entry *e, const char *base, char __user *ubase)$/;"	f	file:	signature:(struct ebt_entry *e, const char *base, char __user *ubase)
ebt_make_watchername	netfilter/ebtables.c	/^static inline int ebt_make_watchername(const struct ebt_entry_watcher *w,$/;"	f	file:	signature:(const struct ebt_entry_watcher *w, const char *base, char __user *ubase)
ebt_mark_fini	netfilter/ebt_mark.c	/^module_exit(ebt_mark_fini);$/;"	v
ebt_mark_fini	netfilter/ebt_mark.c	/^static void __exit ebt_mark_fini(void)$/;"	f	file:	signature:(void)
ebt_mark_init	netfilter/ebt_mark.c	/^module_init(ebt_mark_init);$/;"	v
ebt_mark_init	netfilter/ebt_mark.c	/^static int __init ebt_mark_init(void)$/;"	f	file:	signature:(void)
ebt_mark_m_fini	netfilter/ebt_mark_m.c	/^module_exit(ebt_mark_m_fini);$/;"	v
ebt_mark_m_fini	netfilter/ebt_mark_m.c	/^static void __exit ebt_mark_m_fini(void)$/;"	f	file:	signature:(void)
ebt_mark_m_init	netfilter/ebt_mark_m.c	/^module_init(ebt_mark_m_init);$/;"	v
ebt_mark_m_init	netfilter/ebt_mark_m.c	/^static int __init ebt_mark_m_init(void)$/;"	f	file:	signature:(void)
ebt_mark_mt	netfilter/ebt_mark_m.c	/^ebt_mark_mt(const struct sk_buff *skb, struct xt_action_param *par)$/;"	f	file:	signature:(const struct sk_buff *skb, struct xt_action_param *par)
ebt_mark_mt_check	netfilter/ebt_mark_m.c	/^static int ebt_mark_mt_check(const struct xt_mtchk_param *par)$/;"	f	file:	signature:(const struct xt_mtchk_param *par)
ebt_mark_tg	netfilter/ebt_mark.c	/^ebt_mark_tg(struct sk_buff *skb, const struct xt_action_param *par)$/;"	f	file:	signature:(struct sk_buff *skb, const struct xt_action_param *par)
ebt_mark_tg_check	netfilter/ebt_mark.c	/^static int ebt_mark_tg_check(const struct xt_tgchk_param *par)$/;"	f	file:	signature:(const struct xt_tgchk_param *par)
ebt_nat_in	netfilter/ebtable_nat.c	/^ebt_nat_in(const struct nf_hook_ops *ops, struct sk_buff *skb,$/;"	f	file:	signature:(const struct nf_hook_ops *ops, struct sk_buff *skb, const struct net_device *in, const struct net_device *out, int (*okfn)(struct sk_buff *))
ebt_nat_out	netfilter/ebtable_nat.c	/^ebt_nat_out(const struct nf_hook_ops *ops, struct sk_buff *skb,$/;"	f	file:	signature:(const struct nf_hook_ops *ops, struct sk_buff *skb, const struct net_device *in, const struct net_device *out, int (*okfn)(struct sk_buff *))
ebt_next_entry	netfilter/ebtables.c	/^struct ebt_entry *ebt_next_entry(const struct ebt_entry *entry)$/;"	f	file:	signature:(const struct ebt_entry *entry)
ebt_nflog_fini	netfilter/ebt_nflog.c	/^module_exit(ebt_nflog_fini);$/;"	v
ebt_nflog_fini	netfilter/ebt_nflog.c	/^static void __exit ebt_nflog_fini(void)$/;"	f	file:	signature:(void)
ebt_nflog_init	netfilter/ebt_nflog.c	/^module_init(ebt_nflog_init);$/;"	v
ebt_nflog_init	netfilter/ebt_nflog.c	/^static int __init ebt_nflog_init(void)$/;"	f	file:	signature:(void)
ebt_nflog_tg	netfilter/ebt_nflog.c	/^ebt_nflog_tg(struct sk_buff *skb, const struct xt_action_param *par)$/;"	f	file:	signature:(struct sk_buff *skb, const struct xt_action_param *par)
ebt_nflog_tg_check	netfilter/ebt_nflog.c	/^static int ebt_nflog_tg_check(const struct xt_tgchk_param *par)$/;"	f	file:	signature:(const struct xt_tgchk_param *par)
ebt_out_hook	netfilter/ebtable_filter.c	/^ebt_out_hook(const struct nf_hook_ops *ops, struct sk_buff *skb,$/;"	f	file:	signature:(const struct nf_hook_ops *ops, struct sk_buff *skb, const struct net_device *in, const struct net_device *out, int (*okfn)(struct sk_buff *))
ebt_pkttype_fini	netfilter/ebt_pkttype.c	/^module_exit(ebt_pkttype_fini);$/;"	v
ebt_pkttype_fini	netfilter/ebt_pkttype.c	/^static void __exit ebt_pkttype_fini(void)$/;"	f	file:	signature:(void)
ebt_pkttype_init	netfilter/ebt_pkttype.c	/^module_init(ebt_pkttype_init);$/;"	v
ebt_pkttype_init	netfilter/ebt_pkttype.c	/^static int __init ebt_pkttype_init(void)$/;"	f	file:	signature:(void)
ebt_pkttype_mt	netfilter/ebt_pkttype.c	/^ebt_pkttype_mt(const struct sk_buff *skb, struct xt_action_param *par)$/;"	f	file:	signature:(const struct sk_buff *skb, struct xt_action_param *par)
ebt_pkttype_mt_check	netfilter/ebt_pkttype.c	/^static int ebt_pkttype_mt_check(const struct xt_mtchk_param *par)$/;"	f	file:	signature:(const struct xt_mtchk_param *par)
ebt_redirect_fini	netfilter/ebt_redirect.c	/^module_exit(ebt_redirect_fini);$/;"	v
ebt_redirect_fini	netfilter/ebt_redirect.c	/^static void __exit ebt_redirect_fini(void)$/;"	f	file:	signature:(void)
ebt_redirect_init	netfilter/ebt_redirect.c	/^module_init(ebt_redirect_init);$/;"	v
ebt_redirect_init	netfilter/ebt_redirect.c	/^static int __init ebt_redirect_init(void)$/;"	f	file:	signature:(void)
ebt_redirect_tg	netfilter/ebt_redirect.c	/^ebt_redirect_tg(struct sk_buff *skb, const struct xt_action_param *par)$/;"	f	file:	signature:(struct sk_buff *skb, const struct xt_action_param *par)
ebt_redirect_tg_check	netfilter/ebt_redirect.c	/^static int ebt_redirect_tg_check(const struct xt_tgchk_param *par)$/;"	f	file:	signature:(const struct xt_tgchk_param *par)
ebt_register_table	netfilter/ebtables.c	/^EXPORT_SYMBOL(ebt_register_table);$/;"	v
ebt_register_table	netfilter/ebtables.c	/^ebt_register_table(struct net *net, const struct ebt_table *input_table)$/;"	f	signature:(struct net *net, const struct ebt_table *input_table)
ebt_size_mwt	netfilter/ebtables.c	/^static int ebt_size_mwt(struct compat_ebt_entry_mwt *match32,$/;"	f	file:	signature:(struct compat_ebt_entry_mwt *match32, unsigned int size_left, enum compat_mwt type, struct ebt_entries_buf_state *state, const void *base)
ebt_snat_fini	netfilter/ebt_snat.c	/^module_exit(ebt_snat_fini);$/;"	v
ebt_snat_fini	netfilter/ebt_snat.c	/^static void __exit ebt_snat_fini(void)$/;"	f	file:	signature:(void)
ebt_snat_init	netfilter/ebt_snat.c	/^module_init(ebt_snat_init);$/;"	v
ebt_snat_init	netfilter/ebt_snat.c	/^static int __init ebt_snat_init(void)$/;"	f	file:	signature:(void)
ebt_snat_tg	netfilter/ebt_snat.c	/^ebt_snat_tg(struct sk_buff *skb, const struct xt_action_param *par)$/;"	f	file:	signature:(struct sk_buff *skb, const struct xt_action_param *par)
ebt_snat_tg_check	netfilter/ebt_snat.c	/^static int ebt_snat_tg_check(const struct xt_tgchk_param *par)$/;"	f	file:	signature:(const struct xt_tgchk_param *par)
ebt_sockopts	netfilter/ebtables.c	/^static struct nf_sockopt_ops ebt_sockopts = {$/;"	v	typeref:struct:nf_sockopt_ops	file:
ebt_standard_compat_from_user	netfilter/ebtables.c	/^static void ebt_standard_compat_from_user(void *dst, const void *src)$/;"	f	file:	signature:(void *dst, const void *src)
ebt_standard_compat_to_user	netfilter/ebtables.c	/^static int ebt_standard_compat_to_user(void __user *dst, const void *src)$/;"	f	file:	signature:(void __user *dst, const void *src)
ebt_standard_target	netfilter/ebtables.c	/^static struct xt_target ebt_standard_target = {$/;"	v	typeref:struct:xt_target	file:
ebt_stp_fini	netfilter/ebt_stp.c	/^module_exit(ebt_stp_fini);$/;"	v
ebt_stp_fini	netfilter/ebt_stp.c	/^static void __exit ebt_stp_fini(void)$/;"	f	file:	signature:(void)
ebt_stp_init	netfilter/ebt_stp.c	/^module_init(ebt_stp_init);$/;"	v
ebt_stp_init	netfilter/ebt_stp.c	/^static int __init ebt_stp_init(void)$/;"	f	file:	signature:(void)
ebt_stp_mt	netfilter/ebt_stp.c	/^ebt_stp_mt(const struct sk_buff *skb, struct xt_action_param *par)$/;"	f	file:	signature:(const struct sk_buff *skb, struct xt_action_param *par)
ebt_stp_mt_check	netfilter/ebt_stp.c	/^static int ebt_stp_mt_check(const struct xt_mtchk_param *par)$/;"	f	file:	signature:(const struct xt_mtchk_param *par)
ebt_ulog_buff_t	netfilter/ebt_ulog.c	/^} ebt_ulog_buff_t;$/;"	t	typeref:struct:__anon4	file:
ebt_ulog_fini	netfilter/ebt_ulog.c	/^module_exit(ebt_ulog_fini);$/;"	v
ebt_ulog_fini	netfilter/ebt_ulog.c	/^static void __exit ebt_ulog_fini(void)$/;"	f	file:	signature:(void)
ebt_ulog_init	netfilter/ebt_ulog.c	/^module_init(ebt_ulog_init);$/;"	v
ebt_ulog_init	netfilter/ebt_ulog.c	/^static int __init ebt_ulog_init(void)$/;"	f	file:	signature:(void)
ebt_ulog_net	netfilter/ebt_ulog.c	/^struct ebt_ulog_net {$/;"	s	file:
ebt_ulog_net::ebtulognl	netfilter/ebt_ulog.c	/^	struct sock *ebtulognl;$/;"	m	struct:ebt_ulog_net	typeref:struct:ebt_ulog_net::sock	file:	access:public
ebt_ulog_net::nlgroup	netfilter/ebt_ulog.c	/^	unsigned int nlgroup[EBT_ULOG_MAXNLGROUPS];$/;"	m	struct:ebt_ulog_net	file:	access:public
ebt_ulog_net::ulog_buffers	netfilter/ebt_ulog.c	/^	ebt_ulog_buff_t ulog_buffers[EBT_ULOG_MAXNLGROUPS];$/;"	m	struct:ebt_ulog_net	file:	access:public
ebt_ulog_net_fini	netfilter/ebt_ulog.c	/^static void __net_exit ebt_ulog_net_fini(struct net *net)$/;"	f	file:	signature:(struct net *net)
ebt_ulog_net_init	netfilter/ebt_ulog.c	/^static int __net_init ebt_ulog_net_init(struct net *net)$/;"	f	file:	signature:(struct net *net)
ebt_ulog_net_ops	netfilter/ebt_ulog.c	/^static struct pernet_operations ebt_ulog_net_ops = {$/;"	v	typeref:struct:pernet_operations	file:
ebt_ulog_packet	netfilter/ebt_ulog.c	/^static void ebt_ulog_packet(struct net *net, unsigned int hooknr,$/;"	f	file:	signature:(struct net *net, unsigned int hooknr, const struct sk_buff *skb, const struct net_device *in, const struct net_device *out, const struct ebt_ulog_info *uloginfo, const char *prefix)
ebt_ulog_pernet	netfilter/ebt_ulog.c	/^static struct ebt_ulog_net *ebt_ulog_pernet(struct net *net)$/;"	f	file:	signature:(struct net *net)
ebt_ulog_tg	netfilter/ebt_ulog.c	/^ebt_ulog_tg(struct sk_buff *skb, const struct xt_action_param *par)$/;"	f	file:	signature:(struct sk_buff *skb, const struct xt_action_param *par)
ebt_ulog_tg_check	netfilter/ebt_ulog.c	/^static int ebt_ulog_tg_check(const struct xt_tgchk_param *par)$/;"	f	file:	signature:(const struct xt_tgchk_param *par)
ebt_unregister_table	netfilter/ebtables.c	/^EXPORT_SYMBOL(ebt_unregister_table);$/;"	v
ebt_unregister_table	netfilter/ebtables.c	/^void ebt_unregister_table(struct net *net, struct ebt_table *table)$/;"	f	signature:(struct net *net, struct ebt_table *table)
ebt_verify_pointers	netfilter/ebtables.c	/^static int ebt_verify_pointers(const struct ebt_replace *repl,$/;"	f	file:	signature:(const struct ebt_replace *repl, struct ebt_table_info *newinfo)
ebt_vlan_fini	netfilter/ebt_vlan.c	/^module_exit(ebt_vlan_fini);$/;"	v
ebt_vlan_fini	netfilter/ebt_vlan.c	/^static void __exit ebt_vlan_fini(void)$/;"	f	file:	signature:(void)
ebt_vlan_init	netfilter/ebt_vlan.c	/^module_init(ebt_vlan_init);$/;"	v
ebt_vlan_init	netfilter/ebt_vlan.c	/^static int __init ebt_vlan_init(void)$/;"	f	file:	signature:(void)
ebt_vlan_mt	netfilter/ebt_vlan.c	/^ebt_vlan_mt(const struct sk_buff *skb, struct xt_action_param *par)$/;"	f	file:	signature:(const struct sk_buff *skb, struct xt_action_param *par)
ebt_vlan_mt_check	netfilter/ebt_vlan.c	/^static int ebt_vlan_mt_check(const struct xt_mtchk_param *par)$/;"	f	file:	signature:(const struct xt_mtchk_param *par)
ebtable_broute_fini	netfilter/ebtable_broute.c	/^module_exit(ebtable_broute_fini);$/;"	v
ebtable_broute_fini	netfilter/ebtable_broute.c	/^static void __exit ebtable_broute_fini(void)$/;"	f	file:	signature:(void)
ebtable_broute_init	netfilter/ebtable_broute.c	/^module_init(ebtable_broute_init);$/;"	v
ebtable_broute_init	netfilter/ebtable_broute.c	/^static int __init ebtable_broute_init(void)$/;"	f	file:	signature:(void)
ebtable_filter_fini	netfilter/ebtable_filter.c	/^module_exit(ebtable_filter_fini);$/;"	v
ebtable_filter_fini	netfilter/ebtable_filter.c	/^static void __exit ebtable_filter_fini(void)$/;"	f	file:	signature:(void)
ebtable_filter_init	netfilter/ebtable_filter.c	/^module_init(ebtable_filter_init);$/;"	v
ebtable_filter_init	netfilter/ebtable_filter.c	/^static int __init ebtable_filter_init(void)$/;"	f	file:	signature:(void)
ebtable_nat_fini	netfilter/ebtable_nat.c	/^module_exit(ebtable_nat_fini);$/;"	v
ebtable_nat_fini	netfilter/ebtable_nat.c	/^static void __exit ebtable_nat_fini(void)$/;"	f	file:	signature:(void)
ebtable_nat_init	netfilter/ebtable_nat.c	/^module_init(ebtable_nat_init);$/;"	v
ebtable_nat_init	netfilter/ebtable_nat.c	/^static int __init ebtable_nat_init(void)$/;"	f	file:	signature:(void)
ebtables_fini	netfilter/ebtables.c	/^module_exit(ebtables_fini);$/;"	v
ebtables_fini	netfilter/ebtables.c	/^static void __exit ebtables_fini(void)$/;"	f	file:	signature:(void)
ebtables_init	netfilter/ebtables.c	/^module_init(ebtables_init);$/;"	v
ebtables_init	netfilter/ebtables.c	/^static int __init ebtables_init(void)$/;"	f	file:	signature:(void)
ebtulognl	netfilter/ebt_ulog.c	/^	struct sock *ebtulognl;$/;"	m	struct:ebt_ulog_net	typeref:struct:ebt_ulog_net::sock	file:	access:public
entries	netfilter/ebtables.c	/^	compat_uptr_t entries;$/;"	m	struct:compat_ebt_replace	file:	access:public
entries_size	netfilter/ebtables.c	/^	compat_uint_t entries_size;$/;"	m	struct:compat_ebt_replace	file:	access:public
fake_cow_metrics	br_netfilter.c	/^static u32 *fake_cow_metrics(struct dst_entry *dst, unsigned long old)$/;"	f	file:	signature:(struct dst_entry *dst, unsigned long old)
fake_dst_ops	br_netfilter.c	/^static struct dst_ops fake_dst_ops = {$/;"	v	typeref:struct:dst_ops	file:
fake_mtu	br_netfilter.c	/^static unsigned int fake_mtu(const struct dst_entry *dst)$/;"	f	file:	signature:(const struct dst_entry *dst)
fake_neigh_lookup	br_netfilter.c	/^static struct neighbour *fake_neigh_lookup(const struct dst_entry *dst,$/;"	f	file:	signature:(const struct dst_entry *dst, struct sk_buff *skb, const void *daddr)
fake_redirect	br_netfilter.c	/^static void fake_redirect(struct dst_entry *dst, struct sock *sk,$/;"	f	file:	signature:(struct dst_entry *dst, struct sock *sk, struct sk_buff *skb)
fake_rtable	br_private.h	/^	struct rtable 			fake_rtable;$/;"	m	struct:net_bridge	typeref:struct:net_bridge::rtable	access:public
fake_update_pmtu	br_netfilter.c	/^static void fake_update_pmtu(struct dst_entry *dst, struct sock *sk,$/;"	f	file:	signature:(struct dst_entry *dst, struct sock *sk, struct sk_buff *skb, u32 mtu)
fdb_add_entry	br_fdb.c	/^static int fdb_add_entry(struct net_bridge_port *source, const __u8 *addr,$/;"	f	file:	signature:(struct net_bridge_port *source, const __u8 *addr, __u16 state, __u16 flags, __u16 vid)
fdb_create	br_fdb.c	/^static struct net_bridge_fdb_entry *fdb_create(struct hlist_head *head,$/;"	f	file:	signature:(struct hlist_head *head, struct net_bridge_port *source, const unsigned char *addr, __u16 vid)
fdb_delete	br_fdb.c	/^static void fdb_delete(struct net_bridge *br, struct net_bridge_fdb_entry *f)$/;"	f	file:	signature:(struct net_bridge *br, struct net_bridge_fdb_entry *f)
fdb_delete_by_addr	br_fdb.c	/^static int fdb_delete_by_addr(struct net_bridge *br, const u8 *addr, u16 vlan)$/;"	f	file:	signature:(struct net_bridge *br, const u8 *addr, u16 vlan)
fdb_delete_local	br_fdb.c	/^static void fdb_delete_local(struct net_bridge *br,$/;"	f	file:	signature:(struct net_bridge *br, const struct net_bridge_port *p, struct net_bridge_fdb_entry *f)
fdb_fill_info	br_fdb.c	/^static int fdb_fill_info(struct sk_buff *skb, const struct net_bridge *br,$/;"	f	file:	signature:(struct sk_buff *skb, const struct net_bridge *br, const struct net_bridge_fdb_entry *fdb, u32 portid, u32 seq, int type, unsigned int flags)
fdb_find	br_fdb.c	/^static struct net_bridge_fdb_entry *fdb_find(struct hlist_head *head,$/;"	f	file:	signature:(struct hlist_head *head, const unsigned char *addr, __u16 vid)
fdb_find	br_fdb.c	/^static struct net_bridge_fdb_entry *fdb_find(struct hlist_head *head,$/;"	p	file:	signature:(struct hlist_head *head, const unsigned char *addr, __u16 vid)
fdb_find_rcu	br_fdb.c	/^static struct net_bridge_fdb_entry *fdb_find_rcu(struct hlist_head *head,$/;"	f	file:	signature:(struct hlist_head *head, const unsigned char *addr, __u16 vid)
fdb_insert	br_fdb.c	/^static int fdb_insert(struct net_bridge *br, struct net_bridge_port *source,$/;"	f	file:	signature:(struct net_bridge *br, struct net_bridge_port *source, const unsigned char *addr, u16 vid)
fdb_insert	br_fdb.c	/^static int fdb_insert(struct net_bridge *br, struct net_bridge_port *source,$/;"	p	file:	signature:(struct net_bridge *br, struct net_bridge_port *source, const unsigned char *addr, u16 vid)
fdb_nlmsg_size	br_fdb.c	/^static inline size_t fdb_nlmsg_size(void)$/;"	f	file:	signature:(void)
fdb_notify	br_fdb.c	/^static void fdb_notify(struct net_bridge *br,$/;"	f	file:	signature:(struct net_bridge *br, const struct net_bridge_fdb_entry *fdb, int type)
fdb_notify	br_fdb.c	/^static void fdb_notify(struct net_bridge *br,$/;"	p	file:	signature:(struct net_bridge *br, const struct net_bridge_fdb_entry *, int)
fdb_rcu_free	br_fdb.c	/^static void fdb_rcu_free(struct rcu_head *head)$/;"	f	file:	signature:(struct rcu_head *head)
fdb_to_nud	br_fdb.c	/^static int fdb_to_nud(const struct net_bridge_fdb_entry *fdb)$/;"	f	file:	signature:(const struct net_bridge_fdb_entry *fdb)
filter_bridge	netfilter/nf_tables_bridge.c	/^static const struct nf_chain_type filter_bridge = {$/;"	v	typeref:struct:nf_chain_type	file:
find_inlist_lock	netfilter/ebtables.c	/^find_inlist_lock(struct list_head *head, const char *name, const char *prefix,$/;"	f	file:	signature:(struct list_head *head, const char *name, const char *prefix, int *error, struct mutex *mutex)
find_inlist_lock_noload	netfilter/ebtables.c	/^find_inlist_lock_noload(struct list_head *head, const char *name, int *error,$/;"	f	file:	signature:(struct list_head *head, const char *name, int *error, struct mutex *mutex)
find_portno	br_if.c	/^static int find_portno(struct net_bridge *br)$/;"	f	file:	signature:(struct net_bridge *br)
find_table_lock	netfilter/ebtables.c	/^find_table_lock(struct net *net, const char *name, int *error,$/;"	f	file:	signature:(struct net *net, const char *name, int *error, struct mutex *mutex)
flags	br_private.h	/^	unsigned long 			flags;$/;"	m	struct:net_bridge_port	access:public
flags	netfilter/ebt_stp.c	/^	uint8_t flags;$/;"	m	struct:stp_config_pdu	file:	access:public
flush_store	br_sysfs_br.c	/^static ssize_t flush_store(struct device *d,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, const char *buf, size_t len)
flushtimeout	netfilter/ebt_ulog.c	/^static unsigned int flushtimeout = 10;$/;"	v	file:
forward_delay	br_private.h	/^	unsigned long			forward_delay;$/;"	m	struct:net_bridge	access:public
forward_delay	br_private_stp.h	/^	int		forward_delay;$/;"	m	struct:br_config_bpdu	access:public
forward_delay	netfilter/ebt_stp.c	/^	uint8_t forward_delay[2];$/;"	m	struct:stp_config_pdu	file:	access:public
forward_delay_show	br_sysfs_br.c	/^static ssize_t forward_delay_show(struct device *d,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, char *buf)
forward_delay_store	br_sysfs_br.c	/^static ssize_t forward_delay_store(struct device *d,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, const char *buf, size_t len)
forward_delay_timer	br_private.h	/^	struct timer_list		forward_delay_timer;$/;"	m	struct:net_bridge_port	typeref:struct:net_bridge_port::timer_list	access:public
frame_filter	netfilter/ebtable_filter.c	/^static const struct ebt_table frame_filter = {$/;"	v	typeref:struct:ebt_table	file:
frame_filter_net_exit	netfilter/ebtable_filter.c	/^static void __net_exit frame_filter_net_exit(struct net *net)$/;"	f	file:	signature:(struct net *net)
frame_filter_net_init	netfilter/ebtable_filter.c	/^static int __net_init frame_filter_net_init(struct net *net)$/;"	f	file:	signature:(struct net *net)
frame_filter_net_ops	netfilter/ebtable_filter.c	/^static struct pernet_operations frame_filter_net_ops = {$/;"	v	typeref:struct:pernet_operations	file:
frame_nat	netfilter/ebtable_nat.c	/^static struct ebt_table frame_nat = {$/;"	v	typeref:struct:ebt_table	file:
frame_nat_net_exit	netfilter/ebtable_nat.c	/^static void __net_exit frame_nat_net_exit(struct net *net)$/;"	f	file:	signature:(struct net *net)
frame_nat_net_init	netfilter/ebtable_nat.c	/^static int __net_init frame_nat_net_init(struct net *net)$/;"	f	file:	signature:(struct net *net)
frame_nat_net_ops	netfilter/ebtable_nat.c	/^static struct pernet_operations frame_nat_net_ops = {$/;"	v	typeref:struct:pernet_operations	file:
from	netfilter/ebtables.c	/^	int from;$/;"	m	struct:ebt_cl_stack	file:	access:public
gc_timer	br_private.h	/^	struct timer_list		gc_timer;$/;"	m	struct:net_bridge	typeref:struct:net_bridge::timer_list	access:public
gc_timer_show	br_sysfs_br.c	/^static ssize_t gc_timer_show(struct device *d, struct device_attribute *attr,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, char *buf)
get_bridge_ifindices	br_ioctl.c	/^static int get_bridge_ifindices(struct net *net, int *indices, int num)$/;"	f	file:	signature:(struct net *net, int *indices, int num)
get_counters	netfilter/ebtables.c	/^static void get_counters(const struct ebt_counter *oldcounters,$/;"	f	file:	signature:(const struct ebt_counter *oldcounters, struct ebt_counter *counters, unsigned int nentries)
get_fdb_entries	br_ioctl.c	/^static int get_fdb_entries(struct net_bridge *br, void __user *userbuf,$/;"	f	file:	signature:(struct net_bridge *br, void __user *userbuf, unsigned long maxnum, unsigned long offset)
get_ip_dst	netfilter/ebt_among.c	/^static int get_ip_dst(const struct sk_buff *skb, __be32 *addr)$/;"	f	file:	signature:(const struct sk_buff *skb, __be32 *addr)
get_ip_src	netfilter/ebt_among.c	/^static int get_ip_src(const struct sk_buff *skb, __be32 *addr)$/;"	f	file:	signature:(const struct sk_buff *skb, __be32 *addr)
get_port_ifindices	br_ioctl.c	/^static void get_port_ifindices(struct net_bridge *br, int *ifindices, int num)$/;"	f	file:	signature:(struct net_bridge *br, int *ifindices, int num)
group_addr	br_private.h	/^	u8				group_addr[ETH_ALEN];$/;"	m	struct:net_bridge	access:public
group_addr_show	br_sysfs_br.c	/^static ssize_t group_addr_show(struct device *d,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, char *buf)
group_addr_store	br_sysfs_br.c	/^static ssize_t group_addr_store(struct device *d,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, const char *buf, size_t len)
group_fwd_mask	br_private.h	/^	u16				group_fwd_mask;$/;"	m	struct:net_bridge	access:public
group_fwd_mask_show	br_sysfs_br.c	/^static ssize_t group_fwd_mask_show(struct device *d,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, char *buf)
group_fwd_mask_store	br_sysfs_br.c	/^static ssize_t group_fwd_mask_store(struct device *d,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, const char *buf, size_t len)
has_expired	br_fdb.c	/^static inline int has_expired(const struct net_bridge *br,$/;"	f	file:	signature:(const struct net_bridge *br, const struct net_bridge_fdb_entry *fdb)
hash	br_private.h	/^	struct hlist_head		hash[BR_HASH_SIZE];$/;"	m	struct:net_bridge	typeref:struct:net_bridge::hlist_head	access:public
hash_elasticity	br_private.h	/^	u32				hash_elasticity;$/;"	m	struct:net_bridge	access:public
hash_elasticity_show	br_sysfs_br.c	/^static ssize_t hash_elasticity_show(struct device *d,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, char *buf)
hash_elasticity_store	br_sysfs_br.c	/^static ssize_t hash_elasticity_store(struct device *d,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, const char *buf, size_t len)
hash_lock	br_private.h	/^	spinlock_t			hash_lock;$/;"	m	struct:net_bridge	access:public
hash_max	br_private.h	/^	u32				hash_max;$/;"	m	struct:net_bridge	access:public
hash_max_show	br_sysfs_br.c	/^static ssize_t hash_max_show(struct device *d, struct device_attribute *attr,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, char *buf)
hash_max_store	br_sysfs_br.c	/^static ssize_t hash_max_store(struct device *d, struct device_attribute *attr,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, const char *buf, size_t len)
hello_time	br_private.h	/^	unsigned long			hello_time;$/;"	m	struct:net_bridge	access:public
hello_time	br_private_stp.h	/^	int		hello_time;$/;"	m	struct:br_config_bpdu	access:public
hello_time	netfilter/ebt_stp.c	/^	uint8_t hello_time[2];$/;"	m	struct:stp_config_pdu	file:	access:public
hello_time_show	br_sysfs_br.c	/^static ssize_t hello_time_show(struct device *d, struct device_attribute *attr,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, char *buf)
hello_time_store	br_sysfs_br.c	/^static ssize_t hello_time_store(struct device *d,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, const char *buf, size_t len)
hello_timer	br_private.h	/^	struct timer_list		hello_timer;$/;"	m	struct:net_bridge	typeref:struct:net_bridge::timer_list	access:public
hello_timer_show	br_sysfs_br.c	/^static ssize_t hello_timer_show(struct device *d,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, char *buf)
hlist	br_private.h	/^	struct hlist_node		hlist;$/;"	m	struct:net_bridge_fdb_entry	typeref:struct:net_bridge_fdb_entry::hlist_node	access:public
hlist	br_private.h	/^	struct hlist_node		hlist[2];$/;"	m	struct:net_bridge_mdb_entry	typeref:struct:net_bridge_mdb_entry::hlist_node	access:public
hold_time	br_fdb.c	/^static inline unsigned long hold_time(const struct net_bridge *br)$/;"	f	file:	signature:(const struct net_bridge *br)
hold_timer	br_private.h	/^	struct timer_list		hold_timer;$/;"	m	struct:net_bridge_port	typeref:struct:net_bridge_port::timer_list	access:public
hook_entry	netfilter/ebtables.c	/^	compat_uptr_t hook_entry[NF_BR_NUMHOOKS];$/;"	m	struct:compat_ebt_replace	file:	access:public
hookmask	netfilter/ebtables.c	/^	unsigned int hookmask;$/;"	m	struct:ebt_cl_stack	file:	access:public
icmphdr	netfilter/ebt_ip6.c	/^	} icmphdr;$/;"	m	union:pkthdr	typeref:struct:pkthdr::__anon7	file:	access:public
ifla_br_policy	br_netlink.c	/^static const struct nla_policy ifla_br_policy[IFLA_MAX+1] = {$/;"	v	typeref:struct:nla_policy	file:
ifla_brport_policy	br_netlink.c	/^static const struct nla_policy ifla_brport_policy[IFLA_BRPORT_MAX + 1] = {$/;"	v	typeref:struct:nla_policy	file:
ifobj	br_private.h	/^	struct kobject			*ifobj;$/;"	m	struct:net_bridge	typeref:struct:net_bridge::kobject	access:public
igmp	br_private.h	/^	int igmp;$/;"	m	struct:br_input_skb_cb	access:public
initial_chain	netfilter/ebtable_broute.c	/^static struct ebt_entries initial_chain = {$/;"	v	typeref:struct:ebt_entries	file:
initial_chains	netfilter/ebtable_filter.c	/^static struct ebt_entries initial_chains[] = {$/;"	v	typeref:struct:ebt_entries	file:
initial_chains	netfilter/ebtable_nat.c	/^static struct ebt_entries initial_chains[] = {$/;"	v	typeref:struct:ebt_entries	file:
initial_table	netfilter/ebtable_broute.c	/^static struct ebt_replace_kernel initial_table = {$/;"	v	typeref:struct:ebt_replace_kernel	file:
initial_table	netfilter/ebtable_filter.c	/^static struct ebt_replace_kernel initial_table = {$/;"	v	typeref:struct:ebt_replace_kernel	file:
initial_table	netfilter/ebtable_nat.c	/^static struct ebt_replace_kernel initial_table = {$/;"	v	typeref:struct:ebt_replace_kernel	file:
invert	netfilter/ebt_mark_m.c	/^	uint8_t invert, bitmask;$/;"	m	struct:compat_ebt_mark_m_info	file:	access:public
ip4	br_private.h	/^		__be32	ip4;$/;"	m	union:br_ip::__anon1	access:public
ip4_querier	br_private.h	/^	struct bridge_mcast_querier	ip4_querier;$/;"	m	struct:net_bridge	typeref:struct:net_bridge::bridge_mcast_querier	access:public
ip4_query	br_private.h	/^	struct bridge_mcast_query	ip4_query;$/;"	m	struct:net_bridge	typeref:struct:net_bridge::bridge_mcast_query	access:public
ip4_query	br_private.h	/^	struct bridge_mcast_query	ip4_query;$/;"	m	struct:net_bridge_port	typeref:struct:net_bridge_port::bridge_mcast_query	access:public
ip6	br_private.h	/^		struct in6_addr ip6;$/;"	m	union:br_ip::__anon1	typeref:struct:br_ip::__anon1::in6_addr	access:public
ip6_querier	br_private.h	/^	struct bridge_mcast_querier	ip6_querier;$/;"	m	struct:net_bridge	typeref:struct:net_bridge::bridge_mcast_querier	access:public
ip6_query	br_private.h	/^	struct bridge_mcast_query	ip6_query;$/;"	m	struct:net_bridge	typeref:struct:net_bridge::bridge_mcast_query	access:public
ip6_query	br_private.h	/^	struct bridge_mcast_query	ip6_query;$/;"	m	struct:net_bridge_port	typeref:struct:net_bridge_port::bridge_mcast_query	access:public
ip_dst	netfilter/ebt_log.c	/^	unsigned char ip_dst[4];$/;"	m	struct:arppayload	file:	access:public
ip_sabotage_in	br_netfilter.c	/^static unsigned int ip_sabotage_in(const struct nf_hook_ops *ops,$/;"	f	file:	signature:(const struct nf_hook_ops *ops, struct sk_buff *skb, const struct net_device *in, const struct net_device *out, int (*okfn)(struct sk_buff *))
ip_src	netfilter/ebt_log.c	/^	unsigned char ip_src[4];$/;"	m	struct:arppayload	file:	access:public
is_local	br_private.h	/^	unsigned char			is_local;$/;"	m	struct:net_bridge_fdb_entry	access:public
is_static	br_private.h	/^	unsigned char			is_static;$/;"	m	struct:net_bridge_fdb_entry	access:public
is_valid_mdb_entry	br_mdb.c	/^static bool is_valid_mdb_entry(struct br_mdb_entry *entry)$/;"	f	file:	signature:(struct br_mdb_entry *entry)
kobj	br_private.h	/^	struct kobject			kobj;$/;"	m	struct:net_bridge_port	typeref:struct:net_bridge_port::kobject	access:public
lastnlh	netfilter/ebt_ulog.c	/^	struct nlmsghdr *lastnlh;	\/* netlink header of last msg in skb *\/$/;"	m	struct:__anon4	typeref:struct:__anon4::nlmsghdr	file:	access:public
list	br_private.h	/^	struct list_head		list;$/;"	m	struct:net_bridge_port	typeref:struct:net_bridge_port::list_head	access:public
lock	br_private.h	/^	spinlock_t			lock;$/;"	m	struct:net_bridge	access:public
lock	netfilter/ebt_ulog.c	/^	spinlock_t lock;		\/* the per-queue lock *\/$/;"	m	struct:__anon4	file:	access:public
mac_addr	br_private.h	/^struct mac_addr$/;"	s
mac_addr	br_private.h	/^typedef struct mac_addr mac_addr;$/;"	t	typeref:struct:mac_addr
mac_addr::addr	br_private.h	/^	unsigned char	addr[6];$/;"	m	struct:mac_addr	access:public
mac_dst	netfilter/ebt_log.c	/^	unsigned char mac_dst[ETH_ALEN];$/;"	m	struct:arppayload	file:	access:public
mac_src	netfilter/ebt_log.c	/^	unsigned char mac_src[ETH_ALEN];$/;"	m	struct:arppayload	file:	access:public
mark	netfilter/ebt_mark.c	/^	compat_ulong_t mark;$/;"	m	struct:compat_ebt_mark_t_info	file:	access:public
mark	netfilter/ebt_mark_m.c	/^	compat_ulong_t mark, mask;$/;"	m	struct:compat_ebt_mark_m_info	file:	access:public
mark_mt_compat_from_user	netfilter/ebt_mark_m.c	/^static void mark_mt_compat_from_user(void *dst, const void *src)$/;"	f	file:	signature:(void *dst, const void *src)
mark_mt_compat_to_user	netfilter/ebt_mark_m.c	/^static int mark_mt_compat_to_user(void __user *dst, const void *src)$/;"	f	file:	signature:(void __user *dst, const void *src)
mark_tg_compat_from_user	netfilter/ebt_mark.c	/^static void mark_tg_compat_from_user(void *dst, const void *src)$/;"	f	file:	signature:(void *dst, const void *src)
mark_tg_compat_to_user	netfilter/ebt_mark.c	/^static int mark_tg_compat_to_user(void __user *dst, const void *src)$/;"	f	file:	signature:(void __user *dst, const void *src)
mask	netfilter/ebt_mark_m.c	/^	compat_ulong_t mark, mask;$/;"	m	struct:compat_ebt_mark_m_info	file:	access:public
match_size	netfilter/ebtables.c	/^	compat_uint_t match_size;$/;"	m	struct:compat_ebt_entry_mwt	file:	access:public
max	br_private.h	/^	u32				max;$/;"	m	struct:net_bridge_mdb_htable	access:public
max_age	br_private.h	/^	unsigned long			max_age;$/;"	m	struct:net_bridge	access:public
max_age	br_private_stp.h	/^	int		max_age;$/;"	m	struct:br_config_bpdu	access:public
max_age	netfilter/ebt_stp.c	/^	uint8_t max_age[2];$/;"	m	struct:stp_config_pdu	file:	access:public
max_age_show	br_sysfs_br.c	/^static ssize_t max_age_show(struct device *d, struct device_attribute *attr,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, char *buf)
max_age_store	br_sysfs_br.c	/^static ssize_t max_age_store(struct device *d, struct device_attribute *attr,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, const char *buf, size_t len)
maybe_deliver	br_forward.c	/^static struct net_bridge_port *maybe_deliver($/;"	f	file:	signature:( struct net_bridge_port *prev, struct net_bridge_port *p, struct sk_buff *skb, void (*__packet_hook)(const struct net_bridge_port *p, struct sk_buff *skb))
mdb	br_private.h	/^	struct net_bridge_mdb_htable __rcu *mdb;$/;"	m	struct:net_bridge	typeref:struct:net_bridge::__rcu	access:public
message_age	br_private_stp.h	/^	int		message_age;$/;"	m	struct:br_config_bpdu	access:public
message_age_timer	br_private.h	/^	struct timer_list		message_age_timer;$/;"	m	struct:net_bridge_port	typeref:struct:net_bridge_port::timer_list	access:public
mglist	br_private.h	/^	bool				mglist;$/;"	m	struct:net_bridge_mdb_entry	access:public
mglist	br_private.h	/^	struct hlist_head		mglist;$/;"	m	struct:net_bridge_port	typeref:struct:net_bridge_port::hlist_head	access:public
mglist	br_private.h	/^	struct hlist_node		mglist;$/;"	m	struct:net_bridge_port_group	typeref:struct:net_bridge_port_group::hlist_node	access:public
mhash	br_private.h	/^	struct hlist_head		*mhash;$/;"	m	struct:net_bridge_mdb_htable	typeref:struct:net_bridge_mdb_htable::hlist_head	access:public
mlock_dereference	br_private.h	479;"	d
mrouters_only	br_private.h	/^	int mrouters_only;$/;"	m	struct:br_input_skb_cb	access:public
msg_age	netfilter/ebt_stp.c	/^	uint8_t msg_age[2];$/;"	m	struct:stp_config_pdu	file:	access:public
multicast_disabled	br_private.h	/^	u8				multicast_disabled:1;$/;"	m	struct:net_bridge	access:public
multicast_last_member_count	br_private.h	/^	u32				multicast_last_member_count;$/;"	m	struct:net_bridge	access:public
multicast_last_member_count_show	br_sysfs_br.c	/^static ssize_t multicast_last_member_count_show(struct device *d,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, char *buf)
multicast_last_member_count_store	br_sysfs_br.c	/^static ssize_t multicast_last_member_count_store(struct device *d,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, const char *buf, size_t len)
multicast_last_member_interval	br_private.h	/^	unsigned long			multicast_last_member_interval;$/;"	m	struct:net_bridge	access:public
multicast_last_member_interval_show	br_sysfs_br.c	/^static ssize_t multicast_last_member_interval_show($/;"	f	file:	signature:( struct device *d, struct device_attribute *attr, char *buf)
multicast_last_member_interval_store	br_sysfs_br.c	/^static ssize_t multicast_last_member_interval_store($/;"	f	file:	signature:( struct device *d, struct device_attribute *attr, const char *buf, size_t len)
multicast_lock	br_private.h	/^	spinlock_t			multicast_lock;$/;"	m	struct:net_bridge	access:public
multicast_membership_interval	br_private.h	/^	unsigned long			multicast_membership_interval;$/;"	m	struct:net_bridge	access:public
multicast_membership_interval_show	br_sysfs_br.c	/^static ssize_t multicast_membership_interval_show($/;"	f	file:	signature:( struct device *d, struct device_attribute *attr, char *buf)
multicast_membership_interval_store	br_sysfs_br.c	/^static ssize_t multicast_membership_interval_store($/;"	f	file:	signature:( struct device *d, struct device_attribute *attr, const char *buf, size_t len)
multicast_querier	br_private.h	/^	u8				multicast_querier:1;$/;"	m	struct:net_bridge	access:public
multicast_querier_interval	br_private.h	/^	unsigned long			multicast_querier_interval;$/;"	m	struct:net_bridge	access:public
multicast_querier_interval_show	br_sysfs_br.c	/^static ssize_t multicast_querier_interval_show(struct device *d,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, char *buf)
multicast_querier_interval_store	br_sysfs_br.c	/^static ssize_t multicast_querier_interval_store(struct device *d,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, const char *buf, size_t len)
multicast_querier_show	br_sysfs_br.c	/^static ssize_t multicast_querier_show(struct device *d,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, char *buf)
multicast_querier_store	br_sysfs_br.c	/^static ssize_t multicast_querier_store(struct device *d,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, const char *buf, size_t len)
multicast_query_interval	br_private.h	/^	unsigned long			multicast_query_interval;$/;"	m	struct:net_bridge	access:public
multicast_query_interval_show	br_sysfs_br.c	/^static ssize_t multicast_query_interval_show(struct device *d,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, char *buf)
multicast_query_interval_store	br_sysfs_br.c	/^static ssize_t multicast_query_interval_store(struct device *d,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, const char *buf, size_t len)
multicast_query_response_interval	br_private.h	/^	unsigned long			multicast_query_response_interval;$/;"	m	struct:net_bridge	access:public
multicast_query_response_interval_show	br_sysfs_br.c	/^static ssize_t multicast_query_response_interval_show($/;"	f	file:	signature:( struct device *d, struct device_attribute *attr, char *buf)
multicast_query_response_interval_store	br_sysfs_br.c	/^static ssize_t multicast_query_response_interval_store($/;"	f	file:	signature:( struct device *d, struct device_attribute *attr, const char *buf, size_t len)
multicast_query_use_ifaddr	br_private.h	/^	u8				multicast_query_use_ifaddr:1;$/;"	m	struct:net_bridge	access:public
multicast_query_use_ifaddr_show	br_sysfs_br.c	/^static ssize_t multicast_query_use_ifaddr_show(struct device *d,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, char *buf)
multicast_query_use_ifaddr_store	br_sysfs_br.c	/^multicast_query_use_ifaddr_store(struct device *d,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, const char *buf, size_t len)
multicast_router	br_private.h	/^	unsigned char			multicast_router;$/;"	m	struct:net_bridge	access:public
multicast_router	br_private.h	/^	unsigned char			multicast_router;$/;"	m	struct:net_bridge_port	access:public
multicast_router_show	br_sysfs_br.c	/^static ssize_t multicast_router_show(struct device *d,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, char *buf)
multicast_router_store	br_sysfs_br.c	/^static ssize_t multicast_router_store(struct device *d,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, const char *buf, size_t len)
multicast_router_timer	br_private.h	/^	struct timer_list		multicast_router_timer;$/;"	m	struct:net_bridge	typeref:struct:net_bridge::timer_list	access:public
multicast_router_timer	br_private.h	/^	struct timer_list		multicast_router_timer;$/;"	m	struct:net_bridge_port	typeref:struct:net_bridge_port::timer_list	access:public
multicast_snooping_show	br_sysfs_br.c	/^static ssize_t multicast_snooping_show(struct device *d,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, char *buf)
multicast_snooping_store	br_sysfs_br.c	/^static ssize_t multicast_snooping_store(struct device *d,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, const char *buf, size_t len)
multicast_startup_query_count	br_private.h	/^	u32				multicast_startup_query_count;$/;"	m	struct:net_bridge	access:public
multicast_startup_query_count_show	br_sysfs_br.c	/^static ssize_t multicast_startup_query_count_show($/;"	f	file:	signature:( struct device *d, struct device_attribute *attr, char *buf)
multicast_startup_query_count_store	br_sysfs_br.c	/^static ssize_t multicast_startup_query_count_store($/;"	f	file:	signature:( struct device *d, struct device_attribute *attr, const char *buf, size_t len)
multicast_startup_query_interval	br_private.h	/^	unsigned long			multicast_startup_query_interval;$/;"	m	struct:net_bridge	access:public
multicast_startup_query_interval_show	br_sysfs_br.c	/^static ssize_t multicast_startup_query_interval_show($/;"	f	file:	signature:( struct device *d, struct device_attribute *attr, char *buf)
multicast_startup_query_interval_store	br_sysfs_br.c	/^static ssize_t multicast_startup_query_interval_store($/;"	f	file:	signature:( struct device *d, struct device_attribute *attr, const char *buf, size_t len)
name	netfilter/ebtables.c	/^		char name[EBT_FUNCTION_MAXNAMELEN];$/;"	m	union:compat_ebt_entry_mwt::__anon5	file:	access:public
name	netfilter/ebtables.c	/^	char name[EBT_TABLE_MAXNAMELEN];$/;"	m	struct:compat_ebt_replace	file:	access:public
nbp_get_vlan_info	br_private.h	/^static inline struct net_port_vlans *nbp_get_vlan_info($/;"	f	signature:( const struct net_bridge_port *p)
nbp_vlan_add	br_private.h	/^int nbp_vlan_add(struct net_bridge_port *port, u16 vid, u16 flags);$/;"	p	signature:(struct net_bridge_port *port, u16 vid, u16 flags)
nbp_vlan_add	br_private.h	/^static inline int nbp_vlan_add(struct net_bridge_port *port, u16 vid, u16 flags)$/;"	f	signature:(struct net_bridge_port *port, u16 vid, u16 flags)
nbp_vlan_add	br_vlan.c	/^int nbp_vlan_add(struct net_bridge_port *port, u16 vid, u16 flags)$/;"	f	signature:(struct net_bridge_port *port, u16 vid, u16 flags)
nbp_vlan_delete	br_private.h	/^int nbp_vlan_delete(struct net_bridge_port *port, u16 vid);$/;"	p	signature:(struct net_bridge_port *port, u16 vid)
nbp_vlan_delete	br_private.h	/^static inline int nbp_vlan_delete(struct net_bridge_port *port, u16 vid)$/;"	f	signature:(struct net_bridge_port *port, u16 vid)
nbp_vlan_delete	br_vlan.c	/^int nbp_vlan_delete(struct net_bridge_port *port, u16 vid)$/;"	f	signature:(struct net_bridge_port *port, u16 vid)
nbp_vlan_find	br_private.h	/^bool nbp_vlan_find(struct net_bridge_port *port, u16 vid);$/;"	p	signature:(struct net_bridge_port *port, u16 vid)
nbp_vlan_find	br_private.h	/^static inline bool nbp_vlan_find(struct net_bridge_port *port, u16 vid)$/;"	f	signature:(struct net_bridge_port *port, u16 vid)
nbp_vlan_find	br_vlan.c	/^bool nbp_vlan_find(struct net_bridge_port *port, u16 vid)$/;"	f	signature:(struct net_bridge_port *port, u16 vid)
nbp_vlan_flush	br_private.h	/^static inline void nbp_vlan_flush(struct net_bridge_port *port)$/;"	f	signature:(struct net_bridge_port *port)
nbp_vlan_flush	br_private.h	/^void nbp_vlan_flush(struct net_bridge_port *port);$/;"	p	signature:(struct net_bridge_port *port)
nbp_vlan_flush	br_vlan.c	/^void nbp_vlan_flush(struct net_bridge_port *port)$/;"	f	signature:(struct net_bridge_port *port)
nentries	netfilter/ebtables.c	/^	compat_uint_t nentries;$/;"	m	struct:compat_ebt_replace	file:	access:public
net_bridge	br_private.h	/^struct net_bridge$/;"	s
net_bridge::BR_KERNEL_STP	br_private.h	/^		BR_KERNEL_STP,		\/* old STP in kernel *\/$/;"	e	enum:net_bridge::__anon3
net_bridge::BR_NO_STP	br_private.h	/^		BR_NO_STP, 		\/* no spanning tree *\/$/;"	e	enum:net_bridge::__anon3
net_bridge::BR_USER_STP	br_private.h	/^		BR_USER_STP,		\/* new RSTP in userspace *\/$/;"	e	enum:net_bridge::__anon3
net_bridge::ageing_time	br_private.h	/^	unsigned long			ageing_time;$/;"	m	struct:net_bridge	access:public
net_bridge::bridge_forward_delay	br_private.h	/^	unsigned long			bridge_forward_delay;$/;"	m	struct:net_bridge	access:public
net_bridge::bridge_hello_time	br_private.h	/^	unsigned long			bridge_hello_time;$/;"	m	struct:net_bridge	access:public
net_bridge::bridge_id	br_private.h	/^	bridge_id			bridge_id;$/;"	m	struct:net_bridge	access:public
net_bridge::bridge_max_age	br_private.h	/^	unsigned long			bridge_max_age;$/;"	m	struct:net_bridge	access:public
net_bridge::designated_root	br_private.h	/^	bridge_id			designated_root;$/;"	m	struct:net_bridge	access:public
net_bridge::dev	br_private.h	/^	struct net_device		*dev;$/;"	m	struct:net_bridge	typeref:struct:net_bridge::net_device	access:public
net_bridge::fake_rtable	br_private.h	/^	struct rtable 			fake_rtable;$/;"	m	struct:net_bridge	typeref:struct:net_bridge::rtable	access:public
net_bridge::forward_delay	br_private.h	/^	unsigned long			forward_delay;$/;"	m	struct:net_bridge	access:public
net_bridge::gc_timer	br_private.h	/^	struct timer_list		gc_timer;$/;"	m	struct:net_bridge	typeref:struct:net_bridge::timer_list	access:public
net_bridge::group_addr	br_private.h	/^	u8				group_addr[ETH_ALEN];$/;"	m	struct:net_bridge	access:public
net_bridge::group_fwd_mask	br_private.h	/^	u16				group_fwd_mask;$/;"	m	struct:net_bridge	access:public
net_bridge::hash	br_private.h	/^	struct hlist_head		hash[BR_HASH_SIZE];$/;"	m	struct:net_bridge	typeref:struct:net_bridge::hlist_head	access:public
net_bridge::hash_elasticity	br_private.h	/^	u32				hash_elasticity;$/;"	m	struct:net_bridge	access:public
net_bridge::hash_lock	br_private.h	/^	spinlock_t			hash_lock;$/;"	m	struct:net_bridge	access:public
net_bridge::hash_max	br_private.h	/^	u32				hash_max;$/;"	m	struct:net_bridge	access:public
net_bridge::hello_time	br_private.h	/^	unsigned long			hello_time;$/;"	m	struct:net_bridge	access:public
net_bridge::hello_timer	br_private.h	/^	struct timer_list		hello_timer;$/;"	m	struct:net_bridge	typeref:struct:net_bridge::timer_list	access:public
net_bridge::ifobj	br_private.h	/^	struct kobject			*ifobj;$/;"	m	struct:net_bridge	typeref:struct:net_bridge::kobject	access:public
net_bridge::ip4_querier	br_private.h	/^	struct bridge_mcast_querier	ip4_querier;$/;"	m	struct:net_bridge	typeref:struct:net_bridge::bridge_mcast_querier	access:public
net_bridge::ip4_query	br_private.h	/^	struct bridge_mcast_query	ip4_query;$/;"	m	struct:net_bridge	typeref:struct:net_bridge::bridge_mcast_query	access:public
net_bridge::ip6_querier	br_private.h	/^	struct bridge_mcast_querier	ip6_querier;$/;"	m	struct:net_bridge	typeref:struct:net_bridge::bridge_mcast_querier	access:public
net_bridge::ip6_query	br_private.h	/^	struct bridge_mcast_query	ip6_query;$/;"	m	struct:net_bridge	typeref:struct:net_bridge::bridge_mcast_query	access:public
net_bridge::lock	br_private.h	/^	spinlock_t			lock;$/;"	m	struct:net_bridge	access:public
net_bridge::max_age	br_private.h	/^	unsigned long			max_age;$/;"	m	struct:net_bridge	access:public
net_bridge::mdb	br_private.h	/^	struct net_bridge_mdb_htable __rcu *mdb;$/;"	m	struct:net_bridge	typeref:struct:net_bridge::__rcu	access:public
net_bridge::multicast_disabled	br_private.h	/^	u8				multicast_disabled:1;$/;"	m	struct:net_bridge	access:public
net_bridge::multicast_last_member_count	br_private.h	/^	u32				multicast_last_member_count;$/;"	m	struct:net_bridge	access:public
net_bridge::multicast_last_member_interval	br_private.h	/^	unsigned long			multicast_last_member_interval;$/;"	m	struct:net_bridge	access:public
net_bridge::multicast_lock	br_private.h	/^	spinlock_t			multicast_lock;$/;"	m	struct:net_bridge	access:public
net_bridge::multicast_membership_interval	br_private.h	/^	unsigned long			multicast_membership_interval;$/;"	m	struct:net_bridge	access:public
net_bridge::multicast_querier	br_private.h	/^	u8				multicast_querier:1;$/;"	m	struct:net_bridge	access:public
net_bridge::multicast_querier_interval	br_private.h	/^	unsigned long			multicast_querier_interval;$/;"	m	struct:net_bridge	access:public
net_bridge::multicast_query_interval	br_private.h	/^	unsigned long			multicast_query_interval;$/;"	m	struct:net_bridge	access:public
net_bridge::multicast_query_response_interval	br_private.h	/^	unsigned long			multicast_query_response_interval;$/;"	m	struct:net_bridge	access:public
net_bridge::multicast_query_use_ifaddr	br_private.h	/^	u8				multicast_query_use_ifaddr:1;$/;"	m	struct:net_bridge	access:public
net_bridge::multicast_router	br_private.h	/^	unsigned char			multicast_router;$/;"	m	struct:net_bridge	access:public
net_bridge::multicast_router_timer	br_private.h	/^	struct timer_list		multicast_router_timer;$/;"	m	struct:net_bridge	typeref:struct:net_bridge::timer_list	access:public
net_bridge::multicast_startup_query_count	br_private.h	/^	u32				multicast_startup_query_count;$/;"	m	struct:net_bridge	access:public
net_bridge::multicast_startup_query_interval	br_private.h	/^	unsigned long			multicast_startup_query_interval;$/;"	m	struct:net_bridge	access:public
net_bridge::nf_call_arptables	br_private.h	/^	bool				nf_call_arptables;$/;"	m	struct:net_bridge	access:public
net_bridge::nf_call_ip6tables	br_private.h	/^	bool				nf_call_ip6tables;$/;"	m	struct:net_bridge	access:public
net_bridge::nf_call_iptables	br_private.h	/^	bool				nf_call_iptables;$/;"	m	struct:net_bridge	access:public
net_bridge::port_list	br_private.h	/^	struct list_head		port_list;$/;"	m	struct:net_bridge	typeref:struct:net_bridge::list_head	access:public
net_bridge::root_path_cost	br_private.h	/^	u32				root_path_cost;$/;"	m	struct:net_bridge	access:public
net_bridge::root_port	br_private.h	/^	u16				root_port;$/;"	m	struct:net_bridge	access:public
net_bridge::router_list	br_private.h	/^	struct hlist_head		router_list;$/;"	m	struct:net_bridge	typeref:struct:net_bridge::hlist_head	access:public
net_bridge::stats	br_private.h	/^	struct pcpu_sw_netstats		__percpu *stats;$/;"	m	struct:net_bridge	typeref:struct:net_bridge::__percpu	access:public
net_bridge::stp_enabled	br_private.h	/^	} stp_enabled;$/;"	m	struct:net_bridge	typeref:enum:net_bridge::__anon3	access:public
net_bridge::tcn_timer	br_private.h	/^	struct timer_list		tcn_timer;$/;"	m	struct:net_bridge	typeref:struct:net_bridge::timer_list	access:public
net_bridge::topology_change	br_private.h	/^	unsigned char			topology_change;$/;"	m	struct:net_bridge	access:public
net_bridge::topology_change_detected	br_private.h	/^	unsigned char			topology_change_detected;$/;"	m	struct:net_bridge	access:public
net_bridge::topology_change_timer	br_private.h	/^	struct timer_list		topology_change_timer;$/;"	m	struct:net_bridge	typeref:struct:net_bridge::timer_list	access:public
net_bridge::vlan_enabled	br_private.h	/^	u8				vlan_enabled;$/;"	m	struct:net_bridge	access:public
net_bridge::vlan_info	br_private.h	/^	struct net_port_vlans __rcu	*vlan_info;$/;"	m	struct:net_bridge	typeref:struct:net_bridge::__rcu	access:public
net_bridge_fdb_entry	br_private.h	/^struct net_bridge_fdb_entry$/;"	s
net_bridge_fdb_entry::added_by_user	br_private.h	/^	unsigned char			added_by_user;$/;"	m	struct:net_bridge_fdb_entry	access:public
net_bridge_fdb_entry::addr	br_private.h	/^	mac_addr			addr;$/;"	m	struct:net_bridge_fdb_entry	access:public
net_bridge_fdb_entry::dst	br_private.h	/^	struct net_bridge_port		*dst;$/;"	m	struct:net_bridge_fdb_entry	typeref:struct:net_bridge_fdb_entry::net_bridge_port	access:public
net_bridge_fdb_entry::hlist	br_private.h	/^	struct hlist_node		hlist;$/;"	m	struct:net_bridge_fdb_entry	typeref:struct:net_bridge_fdb_entry::hlist_node	access:public
net_bridge_fdb_entry::is_local	br_private.h	/^	unsigned char			is_local;$/;"	m	struct:net_bridge_fdb_entry	access:public
net_bridge_fdb_entry::is_static	br_private.h	/^	unsigned char			is_static;$/;"	m	struct:net_bridge_fdb_entry	access:public
net_bridge_fdb_entry::rcu	br_private.h	/^	struct rcu_head			rcu;$/;"	m	struct:net_bridge_fdb_entry	typeref:struct:net_bridge_fdb_entry::rcu_head	access:public
net_bridge_fdb_entry::updated	br_private.h	/^	unsigned long			updated;$/;"	m	struct:net_bridge_fdb_entry	access:public
net_bridge_fdb_entry::used	br_private.h	/^	unsigned long			used;$/;"	m	struct:net_bridge_fdb_entry	access:public
net_bridge_fdb_entry::vlan_id	br_private.h	/^	__u16				vlan_id;$/;"	m	struct:net_bridge_fdb_entry	access:public
net_bridge_mdb_entry	br_private.h	/^struct net_bridge_mdb_entry$/;"	s
net_bridge_mdb_entry::addr	br_private.h	/^	struct br_ip			addr;$/;"	m	struct:net_bridge_mdb_entry	typeref:struct:net_bridge_mdb_entry::br_ip	access:public
net_bridge_mdb_entry::br	br_private.h	/^	struct net_bridge		*br;$/;"	m	struct:net_bridge_mdb_entry	typeref:struct:net_bridge_mdb_entry::net_bridge	access:public
net_bridge_mdb_entry::hlist	br_private.h	/^	struct hlist_node		hlist[2];$/;"	m	struct:net_bridge_mdb_entry	typeref:struct:net_bridge_mdb_entry::hlist_node	access:public
net_bridge_mdb_entry::mglist	br_private.h	/^	bool				mglist;$/;"	m	struct:net_bridge_mdb_entry	access:public
net_bridge_mdb_entry::ports	br_private.h	/^	struct net_bridge_port_group __rcu *ports;$/;"	m	struct:net_bridge_mdb_entry	typeref:struct:net_bridge_mdb_entry::__rcu	access:public
net_bridge_mdb_entry::rcu	br_private.h	/^	struct rcu_head			rcu;$/;"	m	struct:net_bridge_mdb_entry	typeref:struct:net_bridge_mdb_entry::rcu_head	access:public
net_bridge_mdb_entry::timer	br_private.h	/^	struct timer_list		timer;$/;"	m	struct:net_bridge_mdb_entry	typeref:struct:net_bridge_mdb_entry::timer_list	access:public
net_bridge_mdb_htable	br_private.h	/^struct net_bridge_mdb_htable$/;"	s
net_bridge_mdb_htable::max	br_private.h	/^	u32				max;$/;"	m	struct:net_bridge_mdb_htable	access:public
net_bridge_mdb_htable::mhash	br_private.h	/^	struct hlist_head		*mhash;$/;"	m	struct:net_bridge_mdb_htable	typeref:struct:net_bridge_mdb_htable::hlist_head	access:public
net_bridge_mdb_htable::old	br_private.h	/^	struct net_bridge_mdb_htable	*old;$/;"	m	struct:net_bridge_mdb_htable	typeref:struct:net_bridge_mdb_htable::net_bridge_mdb_htable	access:public
net_bridge_mdb_htable::rcu	br_private.h	/^	struct rcu_head			rcu;$/;"	m	struct:net_bridge_mdb_htable	typeref:struct:net_bridge_mdb_htable::rcu_head	access:public
net_bridge_mdb_htable::secret	br_private.h	/^	u32				secret;$/;"	m	struct:net_bridge_mdb_htable	access:public
net_bridge_mdb_htable::size	br_private.h	/^	u32				size;$/;"	m	struct:net_bridge_mdb_htable	access:public
net_bridge_mdb_htable::ver	br_private.h	/^	u32				ver;$/;"	m	struct:net_bridge_mdb_htable	access:public
net_bridge_port	br_private.h	/^struct net_bridge_port$/;"	s
net_bridge_port::br	br_private.h	/^	struct net_bridge		*br;$/;"	m	struct:net_bridge_port	typeref:struct:net_bridge_port::net_bridge	access:public
net_bridge_port::config_pending	br_private.h	/^	unsigned char			config_pending;$/;"	m	struct:net_bridge_port	access:public
net_bridge_port::designated_age	br_private.h	/^	unsigned long			designated_age;$/;"	m	struct:net_bridge_port	access:public
net_bridge_port::designated_bridge	br_private.h	/^	bridge_id			designated_bridge;$/;"	m	struct:net_bridge_port	access:public
net_bridge_port::designated_cost	br_private.h	/^	u32				designated_cost;$/;"	m	struct:net_bridge_port	access:public
net_bridge_port::designated_port	br_private.h	/^	port_id				designated_port;$/;"	m	struct:net_bridge_port	access:public
net_bridge_port::designated_root	br_private.h	/^	bridge_id			designated_root;$/;"	m	struct:net_bridge_port	access:public
net_bridge_port::dev	br_private.h	/^	struct net_device		*dev;$/;"	m	struct:net_bridge_port	typeref:struct:net_bridge_port::net_device	access:public
net_bridge_port::flags	br_private.h	/^	unsigned long 			flags;$/;"	m	struct:net_bridge_port	access:public
net_bridge_port::forward_delay_timer	br_private.h	/^	struct timer_list		forward_delay_timer;$/;"	m	struct:net_bridge_port	typeref:struct:net_bridge_port::timer_list	access:public
net_bridge_port::hold_timer	br_private.h	/^	struct timer_list		hold_timer;$/;"	m	struct:net_bridge_port	typeref:struct:net_bridge_port::timer_list	access:public
net_bridge_port::ip4_query	br_private.h	/^	struct bridge_mcast_query	ip4_query;$/;"	m	struct:net_bridge_port	typeref:struct:net_bridge_port::bridge_mcast_query	access:public
net_bridge_port::ip6_query	br_private.h	/^	struct bridge_mcast_query	ip6_query;$/;"	m	struct:net_bridge_port	typeref:struct:net_bridge_port::bridge_mcast_query	access:public
net_bridge_port::kobj	br_private.h	/^	struct kobject			kobj;$/;"	m	struct:net_bridge_port	typeref:struct:net_bridge_port::kobject	access:public
net_bridge_port::list	br_private.h	/^	struct list_head		list;$/;"	m	struct:net_bridge_port	typeref:struct:net_bridge_port::list_head	access:public
net_bridge_port::message_age_timer	br_private.h	/^	struct timer_list		message_age_timer;$/;"	m	struct:net_bridge_port	typeref:struct:net_bridge_port::timer_list	access:public
net_bridge_port::mglist	br_private.h	/^	struct hlist_head		mglist;$/;"	m	struct:net_bridge_port	typeref:struct:net_bridge_port::hlist_head	access:public
net_bridge_port::multicast_router	br_private.h	/^	unsigned char			multicast_router;$/;"	m	struct:net_bridge_port	access:public
net_bridge_port::multicast_router_timer	br_private.h	/^	struct timer_list		multicast_router_timer;$/;"	m	struct:net_bridge_port	typeref:struct:net_bridge_port::timer_list	access:public
net_bridge_port::np	br_private.h	/^	struct netpoll			*np;$/;"	m	struct:net_bridge_port	typeref:struct:net_bridge_port::netpoll	access:public
net_bridge_port::path_cost	br_private.h	/^	u32				path_cost;$/;"	m	struct:net_bridge_port	access:public
net_bridge_port::port_id	br_private.h	/^	port_id				port_id;$/;"	m	struct:net_bridge_port	access:public
net_bridge_port::port_no	br_private.h	/^	u16				port_no;$/;"	m	struct:net_bridge_port	access:public
net_bridge_port::priority	br_private.h	/^	u8				priority;$/;"	m	struct:net_bridge_port	access:public
net_bridge_port::rcu	br_private.h	/^	struct rcu_head			rcu;$/;"	m	struct:net_bridge_port	typeref:struct:net_bridge_port::rcu_head	access:public
net_bridge_port::rlist	br_private.h	/^	struct hlist_node		rlist;$/;"	m	struct:net_bridge_port	typeref:struct:net_bridge_port::hlist_node	access:public
net_bridge_port::state	br_private.h	/^	u8				state;$/;"	m	struct:net_bridge_port	access:public
net_bridge_port::sysfs_name	br_private.h	/^	char				sysfs_name[IFNAMSIZ];$/;"	m	struct:net_bridge_port	access:public
net_bridge_port::topology_change_ack	br_private.h	/^	unsigned char			topology_change_ack;$/;"	m	struct:net_bridge_port	access:public
net_bridge_port::vlan_info	br_private.h	/^	struct net_port_vlans __rcu	*vlan_info;$/;"	m	struct:net_bridge_port	typeref:struct:net_bridge_port::__rcu	access:public
net_bridge_port_group	br_private.h	/^struct net_bridge_port_group {$/;"	s
net_bridge_port_group::addr	br_private.h	/^	struct br_ip			addr;$/;"	m	struct:net_bridge_port_group	typeref:struct:net_bridge_port_group::br_ip	access:public
net_bridge_port_group::mglist	br_private.h	/^	struct hlist_node		mglist;$/;"	m	struct:net_bridge_port_group	typeref:struct:net_bridge_port_group::hlist_node	access:public
net_bridge_port_group::next	br_private.h	/^	struct net_bridge_port_group __rcu *next;$/;"	m	struct:net_bridge_port_group	typeref:struct:net_bridge_port_group::__rcu	access:public
net_bridge_port_group::port	br_private.h	/^	struct net_bridge_port		*port;$/;"	m	struct:net_bridge_port_group	typeref:struct:net_bridge_port_group::net_bridge_port	access:public
net_bridge_port_group::rcu	br_private.h	/^	struct rcu_head			rcu;$/;"	m	struct:net_bridge_port_group	typeref:struct:net_bridge_port_group::rcu_head	access:public
net_bridge_port_group::state	br_private.h	/^	unsigned char			state;$/;"	m	struct:net_bridge_port_group	access:public
net_bridge_port_group::timer	br_private.h	/^	struct timer_list		timer;$/;"	m	struct:net_bridge_port_group	typeref:struct:net_bridge_port_group::timer_list	access:public
net_port_vlans	br_private.h	/^struct net_port_vlans {$/;"	s
net_port_vlans::__anon2::br	br_private.h	/^		struct net_bridge		*br;$/;"	m	union:net_port_vlans::__anon2	typeref:struct:net_port_vlans::__anon2::net_bridge	access:public
net_port_vlans::__anon2::port	br_private.h	/^		struct net_bridge_port		*port;$/;"	m	union:net_port_vlans::__anon2	typeref:struct:net_port_vlans::__anon2::net_bridge_port	access:public
net_port_vlans::num_vlans	br_private.h	/^	u16				num_vlans;$/;"	m	struct:net_port_vlans	access:public
net_port_vlans::parent	br_private.h	/^	}				parent;$/;"	m	struct:net_port_vlans	typeref:union:net_port_vlans::__anon2	access:public
net_port_vlans::port_idx	br_private.h	/^	u16				port_idx;$/;"	m	struct:net_port_vlans	access:public
net_port_vlans::pvid	br_private.h	/^	u16				pvid;$/;"	m	struct:net_port_vlans	access:public
net_port_vlans::rcu	br_private.h	/^	struct rcu_head			rcu;$/;"	m	struct:net_port_vlans	typeref:struct:net_port_vlans::rcu_head	access:public
net_port_vlans::untagged_bitmap	br_private.h	/^	unsigned long			untagged_bitmap[BR_VLAN_BITMAP_LEN];$/;"	m	struct:net_port_vlans	access:public
net_port_vlans::vlan_bitmap	br_private.h	/^	unsigned long			vlan_bitmap[BR_VLAN_BITMAP_LEN];$/;"	m	struct:net_port_vlans	access:public
new_nbp	br_if.c	/^static struct net_bridge_port *new_nbp(struct net_bridge *br,$/;"	f	file:	signature:(struct net_bridge *br, struct net_device *dev)
next	br_private.h	/^	struct net_bridge_port_group __rcu *next;$/;"	m	struct:net_bridge_port_group	typeref:struct:net_bridge_port_group::__rcu	access:public
nf_bridge_alloc	br_netfilter.c	/^static inline struct nf_bridge_info *nf_bridge_alloc(struct sk_buff *skb)$/;"	f	file:	signature:(struct sk_buff *skb)
nf_bridge_copy_header	br_netfilter.c	/^int nf_bridge_copy_header(struct sk_buff *skb)$/;"	f	signature:(struct sk_buff *skb)
nf_bridge_pull_encap_header	br_netfilter.c	/^static inline void nf_bridge_pull_encap_header(struct sk_buff *skb)$/;"	f	file:	signature:(struct sk_buff *skb)
nf_bridge_pull_encap_header_rcsum	br_netfilter.c	/^static inline void nf_bridge_pull_encap_header_rcsum(struct sk_buff *skb)$/;"	f	file:	signature:(struct sk_buff *skb)
nf_bridge_push_encap_header	br_netfilter.c	/^static inline void nf_bridge_push_encap_header(struct sk_buff *skb)$/;"	f	file:	signature:(struct sk_buff *skb)
nf_bridge_save_header	br_netfilter.c	/^static inline void nf_bridge_save_header(struct sk_buff *skb)$/;"	f	file:	signature:(struct sk_buff *skb)
nf_bridge_unshare	br_netfilter.c	/^static inline struct nf_bridge_info *nf_bridge_unshare(struct sk_buff *skb)$/;"	f	file:	signature:(struct sk_buff *skb)
nf_bridge_update_protocol	br_netfilter.c	/^static inline void nf_bridge_update_protocol(struct sk_buff *skb)$/;"	f	file:	signature:(struct sk_buff *skb)
nf_call_arptables	br_private.h	/^	bool				nf_call_arptables;$/;"	m	struct:net_bridge	access:public
nf_call_arptables_show	br_sysfs_br.c	/^static ssize_t nf_call_arptables_show($/;"	f	file:	signature:( struct device *d, struct device_attribute *attr, char *buf)
nf_call_arptables_store	br_sysfs_br.c	/^static ssize_t nf_call_arptables_store($/;"	f	file:	signature:( struct device *d, struct device_attribute *attr, const char *buf, size_t len)
nf_call_ip6tables	br_private.h	/^	bool				nf_call_ip6tables;$/;"	m	struct:net_bridge	access:public
nf_call_ip6tables_show	br_sysfs_br.c	/^static ssize_t nf_call_ip6tables_show($/;"	f	file:	signature:( struct device *d, struct device_attribute *attr, char *buf)
nf_call_ip6tables_store	br_sysfs_br.c	/^static ssize_t nf_call_ip6tables_store($/;"	f	file:	signature:( struct device *d, struct device_attribute *attr, const char *buf, size_t len)
nf_call_iptables	br_private.h	/^	bool				nf_call_iptables;$/;"	m	struct:net_bridge	access:public
nf_call_iptables_show	br_sysfs_br.c	/^static ssize_t nf_call_iptables_show($/;"	f	file:	signature:( struct device *d, struct device_attribute *attr, char *buf)
nf_call_iptables_store	br_sysfs_br.c	/^static ssize_t nf_call_iptables_store($/;"	f	file:	signature:( struct device *d, struct device_attribute *attr, const char *buf, size_t len)
nf_tables_bridge_exit	netfilter/nf_tables_bridge.c	/^module_exit(nf_tables_bridge_exit);$/;"	v
nf_tables_bridge_exit	netfilter/nf_tables_bridge.c	/^static void __exit nf_tables_bridge_exit(void)$/;"	f	file:	signature:(void)
nf_tables_bridge_exit_net	netfilter/nf_tables_bridge.c	/^static void nf_tables_bridge_exit_net(struct net *net)$/;"	f	file:	signature:(struct net *net)
nf_tables_bridge_init	netfilter/nf_tables_bridge.c	/^module_init(nf_tables_bridge_init);$/;"	v
nf_tables_bridge_init	netfilter/nf_tables_bridge.c	/^static int __init nf_tables_bridge_init(void)$/;"	f	file:	signature:(void)
nf_tables_bridge_init_net	netfilter/nf_tables_bridge.c	/^static int nf_tables_bridge_init_net(struct net *net)$/;"	f	file:	signature:(struct net *net)
nf_tables_bridge_net_ops	netfilter/nf_tables_bridge.c	/^static struct pernet_operations nf_tables_bridge_net_ops = {$/;"	v	typeref:struct:pernet_operations	file:
nft_do_chain_bridge	netfilter/nf_tables_bridge.c	/^nft_do_chain_bridge(const struct nf_hook_ops *ops,$/;"	f	file:	signature:(const struct nf_hook_ops *ops, struct sk_buff *skb, const struct net_device *in, const struct net_device *out, int (*okfn)(struct sk_buff *))
nlbufsiz	netfilter/ebt_ulog.c	/^static unsigned int nlbufsiz = NLMSG_GOODSIZE;$/;"	v	file:
nlgroup	netfilter/ebt_ulog.c	/^	unsigned int nlgroup[EBT_ULOG_MAXNLGROUPS];$/;"	m	struct:ebt_ulog_net	file:	access:public
nlmsg_populate_mdb_fill	br_mdb.c	/^static int nlmsg_populate_mdb_fill(struct sk_buff *skb,$/;"	f	file:	signature:(struct sk_buff *skb, struct net_device *dev, struct br_mdb_entry *entry, u32 pid, u32 seq, int type, unsigned int flags)
np	br_private.h	/^	struct netpoll			*np;$/;"	m	struct:net_bridge_port	typeref:struct:net_bridge_port::netpoll	access:public
num_counters	netfilter/ebtables.c	/^	compat_uint_t num_counters;$/;"	m	struct:compat_ebt_replace	file:	access:public
num_vlans	br_private.h	/^	u16				num_vlans;$/;"	m	struct:net_port_vlans	access:public
old	br_private.h	/^	struct net_bridge_mdb_htable	*old;$/;"	m	struct:net_bridge_mdb_htable	typeref:struct:net_bridge_mdb_htable::net_bridge_mdb_htable	access:public
old_dev_ioctl	br_ioctl.c	/^static int old_dev_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)$/;"	f	file:	signature:(struct net_device *dev, struct ifreq *rq, int cmd)
old_deviceless	br_ioctl.c	/^static int old_deviceless(struct net *net, void __user *uarg)$/;"	f	file:	signature:(struct net *net, void __user *uarg)
packet_length	br_forward.c	/^static inline unsigned int packet_length(const struct sk_buff *skb)$/;"	f	file:	signature:(const struct sk_buff *skb)
parent	br_private.h	/^	}				parent;$/;"	m	struct:net_port_vlans	typeref:union:net_port_vlans::__anon2	access:public
path_cost	br_private.h	/^	u32				path_cost;$/;"	m	struct:net_bridge_port	access:public
pid	netfilter/ebt_stp.c	/^	uint8_t pid;$/;"	m	struct:stp_header	file:	access:public
pkthdr	netfilter/ebt_ip6.c	/^union pkthdr {$/;"	u	file:
pkthdr::__anon6::dst	netfilter/ebt_ip6.c	/^		__be16 dst;$/;"	m	struct:pkthdr::__anon6	file:	access:public
pkthdr::__anon6::src	netfilter/ebt_ip6.c	/^		__be16 src;$/;"	m	struct:pkthdr::__anon6	file:	access:public
pkthdr::__anon7::code	netfilter/ebt_ip6.c	/^		u8 code;$/;"	m	struct:pkthdr::__anon7	file:	access:public
pkthdr::__anon7::type	netfilter/ebt_ip6.c	/^		u8 type;$/;"	m	struct:pkthdr::__anon7	file:	access:public
pkthdr::icmphdr	netfilter/ebt_ip6.c	/^	} icmphdr;$/;"	m	union:pkthdr	typeref:struct:pkthdr::__anon7	file:	access:public
pkthdr::tcpudphdr	netfilter/ebt_ip6.c	/^	} tcpudphdr;$/;"	m	union:pkthdr	typeref:struct:pkthdr::__anon6	file:	access:public
port	br_private.h	/^		struct net_bridge_port		*port;$/;"	m	union:net_port_vlans::__anon2	typeref:struct:net_port_vlans::__anon2::net_bridge_port	access:public
port	br_private.h	/^	struct net_bridge_port		*port;$/;"	m	struct:net_bridge_port_group	typeref:struct:net_bridge_port_group::net_bridge_port	access:public
port	netfilter/ebt_stp.c	/^	uint8_t port[2];$/;"	m	struct:stp_config_pdu	file:	access:public
port_cost	br_if.c	/^static int port_cost(struct net_device *dev)$/;"	f	file:	signature:(struct net_device *dev)
port_id	br_private.h	/^	port_id				port_id;$/;"	m	struct:net_bridge_port	access:public
port_id	br_private.h	/^typedef __u16 port_id;$/;"	t
port_id	br_private_stp.h	/^	port_id		port_id;$/;"	m	struct:br_config_bpdu	access:public
port_idx	br_private.h	/^	u16				port_idx;$/;"	m	struct:net_port_vlans	access:public
port_list	br_private.h	/^	struct list_head		port_list;$/;"	m	struct:net_bridge	typeref:struct:net_bridge::list_head	access:public
port_no	br_private.h	/^	u16				port_no;$/;"	m	struct:net_bridge_port	access:public
ports	br_private.h	/^	struct net_bridge_port_group __rcu *ports;$/;"	m	struct:net_bridge_mdb_entry	typeref:struct:net_bridge_mdb_entry::__rcu	access:public
pppoe_proto	br_netfilter.c	/^static inline __be16 pppoe_proto(const struct sk_buff *skb)$/;"	f	file:	signature:(const struct sk_buff *skb)
pr_fmt	netfilter/ebt_among.c	10;"	d	file:
pr_fmt	netfilter/ebt_limit.c	13;"	d	file:
pr_fmt	netfilter/ebt_ulog.c	30;"	d	file:
pr_fmt	netfilter/ebtables.c	17;"	d	file:
prev	netfilter/ebt_limit.c	/^	compat_ulong_t prev;$/;"	m	struct:ebt_compat_limit_info	file:	access:public
print_ports	netfilter/ebt_log.c	/^print_ports(const struct sk_buff *skb, uint8_t protocol, int offset)$/;"	f	file:	signature:(const struct sk_buff *skb, uint8_t protocol, int offset)
prio	br_private.h	/^	unsigned char	prio[2];$/;"	m	struct:bridge_id	access:public
priority	br_private.h	/^	u8				priority;$/;"	m	struct:net_bridge_port	access:public
priority_show	br_sysfs_br.c	/^static ssize_t priority_show(struct device *d, struct device_attribute *attr,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, char *buf)
priority_store	br_sysfs_br.c	/^static ssize_t priority_store(struct device *d, struct device_attribute *attr,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, const char *buf, size_t len)
proto	br_private.h	/^	__be16		proto;$/;"	m	struct:br_ip	access:public
ptr	netfilter/ebtables.c	/^		compat_uptr_t ptr;$/;"	m	union:compat_ebt_entry_mwt::__anon5	file:	access:public
pvid	br_private.h	/^	u16				pvid;$/;"	m	struct:net_port_vlans	access:public
qlen	netfilter/ebt_ulog.c	/^	unsigned int qlen;		\/* number of nlmsgs' in the skb *\/$/;"	m	struct:__anon4	file:	access:public
rcu	br_private.h	/^	struct rcu_head			rcu;$/;"	m	struct:net_bridge_fdb_entry	typeref:struct:net_bridge_fdb_entry::rcu_head	access:public
rcu	br_private.h	/^	struct rcu_head			rcu;$/;"	m	struct:net_bridge_mdb_entry	typeref:struct:net_bridge_mdb_entry::rcu_head	access:public
rcu	br_private.h	/^	struct rcu_head			rcu;$/;"	m	struct:net_bridge_mdb_htable	typeref:struct:net_bridge_mdb_htable::rcu_head	access:public
rcu	br_private.h	/^	struct rcu_head			rcu;$/;"	m	struct:net_bridge_port	typeref:struct:net_bridge_port::rcu_head	access:public
rcu	br_private.h	/^	struct rcu_head			rcu;$/;"	m	struct:net_bridge_port_group	typeref:struct:net_bridge_port_group::rcu_head	access:public
rcu	br_private.h	/^	struct rcu_head			rcu;$/;"	m	struct:net_port_vlans	typeref:struct:net_port_vlans::rcu_head	access:public
release_nbp	br_if.c	/^static void release_nbp(struct kobject *kobj)$/;"	f	file:	signature:(struct kobject *kobj)
rlist	br_private.h	/^	struct hlist_node		rlist;$/;"	m	struct:net_bridge_port	typeref:struct:net_bridge_port::hlist_node	access:public
root	br_private_stp.h	/^	bridge_id	root;$/;"	m	struct:br_config_bpdu	access:public
root	netfilter/ebt_stp.c	/^	uint8_t root[8];$/;"	m	struct:stp_config_pdu	file:	access:public
root_cost	netfilter/ebt_stp.c	/^	uint8_t root_cost[4];$/;"	m	struct:stp_config_pdu	file:	access:public
root_id_show	br_sysfs_br.c	/^static ssize_t root_id_show(struct device *d, struct device_attribute *attr,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, char *buf)
root_path_cost	br_private.h	/^	u32				root_path_cost;$/;"	m	struct:net_bridge	access:public
root_path_cost	br_private_stp.h	/^	int		root_path_cost;$/;"	m	struct:br_config_bpdu	access:public
root_path_cost_show	br_sysfs_br.c	/^static ssize_t root_path_cost_show(struct device *d,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, char *buf)
root_port	br_private.h	/^	u16				root_port;$/;"	m	struct:net_bridge	access:public
root_port_show	br_sysfs_br.c	/^static ssize_t root_port_show(struct device *d, struct device_attribute *attr,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, char *buf)
router_list	br_private.h	/^	struct hlist_head		router_list;$/;"	m	struct:net_bridge	typeref:struct:net_bridge::hlist_head	access:public
rtnl_mdb_nlmsg_size	br_mdb.c	/^static inline size_t rtnl_mdb_nlmsg_size(void)$/;"	f	file:	signature:(void)
secret	br_private.h	/^	u32				secret;$/;"	m	struct:net_bridge_mdb_htable	access:public
sender	netfilter/ebt_stp.c	/^	uint8_t sender[8];$/;"	m	struct:stp_config_pdu	file:	access:public
set_ageing_time	br_sysfs_br.c	/^static int set_ageing_time(struct net_bridge *br, unsigned long val)$/;"	f	file:	signature:(struct net_bridge *br, unsigned long val)
set_elasticity	br_sysfs_br.c	/^static int set_elasticity(struct net_bridge *br, unsigned long val)$/;"	f	file:	signature:(struct net_bridge *br, unsigned long val)
set_last_member_count	br_sysfs_br.c	/^static int set_last_member_count(struct net_bridge *br, unsigned long val)$/;"	f	file:	signature:(struct net_bridge *br, unsigned long val)
set_last_member_interval	br_sysfs_br.c	/^static int set_last_member_interval(struct net_bridge *br, unsigned long val)$/;"	f	file:	signature:(struct net_bridge *br, unsigned long val)
set_membership_interval	br_sysfs_br.c	/^static int set_membership_interval(struct net_bridge *br, unsigned long val)$/;"	f	file:	signature:(struct net_bridge *br, unsigned long val)
set_nf_call_arptables	br_sysfs_br.c	/^static int set_nf_call_arptables(struct net_bridge *br, unsigned long val)$/;"	f	file:	signature:(struct net_bridge *br, unsigned long val)
set_nf_call_ip6tables	br_sysfs_br.c	/^static int set_nf_call_ip6tables(struct net_bridge *br, unsigned long val)$/;"	f	file:	signature:(struct net_bridge *br, unsigned long val)
set_nf_call_iptables	br_sysfs_br.c	/^static int set_nf_call_iptables(struct net_bridge *br, unsigned long val)$/;"	f	file:	signature:(struct net_bridge *br, unsigned long val)
set_priority	br_sysfs_br.c	/^static int set_priority(struct net_bridge *br, unsigned long val)$/;"	f	file:	signature:(struct net_bridge *br, unsigned long val)
set_querier_interval	br_sysfs_br.c	/^static int set_querier_interval(struct net_bridge *br, unsigned long val)$/;"	f	file:	signature:(struct net_bridge *br, unsigned long val)
set_query_interval	br_sysfs_br.c	/^static int set_query_interval(struct net_bridge *br, unsigned long val)$/;"	f	file:	signature:(struct net_bridge *br, unsigned long val)
set_query_response_interval	br_sysfs_br.c	/^static int set_query_response_interval(struct net_bridge *br, unsigned long val)$/;"	f	file:	signature:(struct net_bridge *br, unsigned long val)
set_query_use_ifaddr	br_sysfs_br.c	/^static int set_query_use_ifaddr(struct net_bridge *br, unsigned long val)$/;"	f	file:	signature:(struct net_bridge *br, unsigned long val)
set_startup_query_count	br_sysfs_br.c	/^static int set_startup_query_count(struct net_bridge *br, unsigned long val)$/;"	f	file:	signature:(struct net_bridge *br, unsigned long val)
set_startup_query_interval	br_sysfs_br.c	/^static int set_startup_query_interval(struct net_bridge *br, unsigned long val)$/;"	f	file:	signature:(struct net_bridge *br, unsigned long val)
setup_pre_routing	br_netfilter.c	/^static struct net_device *setup_pre_routing(struct sk_buff *skb)$/;"	f	file:	signature:(struct sk_buff *skb)
should_deliver	br_forward.c	/^static inline int should_deliver(const struct net_bridge_port *p,$/;"	f	file:	signature:(const struct net_bridge_port *p, const struct sk_buff *skb)
show	br_sysfs_if.c	/^	ssize_t (*show)(struct net_bridge_port *, char *);$/;"	m	struct:brport_attribute	file:	access:public
show_change_ack	br_sysfs_if.c	/^static ssize_t show_change_ack(struct net_bridge_port *p, char *buf)$/;"	f	file:	signature:(struct net_bridge_port *p, char *buf)
show_config_pending	br_sysfs_if.c	/^static ssize_t show_config_pending(struct net_bridge_port *p, char *buf)$/;"	f	file:	signature:(struct net_bridge_port *p, char *buf)
show_designated_bridge	br_sysfs_if.c	/^static ssize_t show_designated_bridge(struct net_bridge_port *p, char *buf)$/;"	f	file:	signature:(struct net_bridge_port *p, char *buf)
show_designated_cost	br_sysfs_if.c	/^static ssize_t show_designated_cost(struct net_bridge_port *p, char *buf)$/;"	f	file:	signature:(struct net_bridge_port *p, char *buf)
show_designated_port	br_sysfs_if.c	/^static ssize_t show_designated_port(struct net_bridge_port *p, char *buf)$/;"	f	file:	signature:(struct net_bridge_port *p, char *buf)
show_designated_root	br_sysfs_if.c	/^static ssize_t show_designated_root(struct net_bridge_port *p, char *buf)$/;"	f	file:	signature:(struct net_bridge_port *p, char *buf)
show_forward_delay_timer	br_sysfs_if.c	/^static ssize_t show_forward_delay_timer(struct net_bridge_port *p,$/;"	f	file:	signature:(struct net_bridge_port *p, char *buf)
show_hold_timer	br_sysfs_if.c	/^static ssize_t show_hold_timer(struct net_bridge_port *p,$/;"	f	file:	signature:(struct net_bridge_port *p, char *buf)
show_message_age_timer	br_sysfs_if.c	/^static ssize_t show_message_age_timer(struct net_bridge_port *p,$/;"	f	file:	signature:(struct net_bridge_port *p, char *buf)
show_multicast_router	br_sysfs_if.c	/^static ssize_t show_multicast_router(struct net_bridge_port *p, char *buf)$/;"	f	file:	signature:(struct net_bridge_port *p, char *buf)
show_path_cost	br_sysfs_if.c	/^static ssize_t show_path_cost(struct net_bridge_port *p, char *buf)$/;"	f	file:	signature:(struct net_bridge_port *p, char *buf)
show_port_id	br_sysfs_if.c	/^static ssize_t show_port_id(struct net_bridge_port *p, char *buf)$/;"	f	file:	signature:(struct net_bridge_port *p, char *buf)
show_port_no	br_sysfs_if.c	/^static ssize_t show_port_no(struct net_bridge_port *p, char *buf)$/;"	f	file:	signature:(struct net_bridge_port *p, char *buf)
show_port_state	br_sysfs_if.c	/^static ssize_t show_port_state(struct net_bridge_port *p, char *buf)$/;"	f	file:	signature:(struct net_bridge_port *p, char *buf)
show_priority	br_sysfs_if.c	/^static ssize_t show_priority(struct net_bridge_port *p, char *buf)$/;"	f	file:	signature:(struct net_bridge_port *p, char *buf)
size	br_private.h	/^	u32				size;$/;"	m	struct:net_bridge_mdb_htable	access:public
size_entry_mwt	netfilter/ebtables.c	/^static int size_entry_mwt(struct ebt_entry *entry, const unsigned char *base,$/;"	f	file:	signature:(struct ebt_entry *entry, const unsigned char *base, unsigned int *total, struct ebt_entries_buf_state *state)
skb	netfilter/ebt_ulog.c	/^	struct sk_buff *skb;		\/* the pre-allocated skb *\/$/;"	m	struct:__anon4	typeref:struct:__anon4::sk_buff	file:	access:public
skb_origaddr	br_netfilter.c	45;"	d	file:
src	netfilter/ebt_ip.c	/^	__be16 src;$/;"	m	struct:tcpudphdr	file:	access:public
src	netfilter/ebt_ip6.c	/^		__be16 src;$/;"	m	struct:pkthdr::__anon6	file:	access:public
src	netfilter/ebt_log.c	/^	__be16 src;$/;"	m	struct:tcpudphdr	file:	access:public
ssap	netfilter/ebt_stp.c	/^	uint8_t ssap;$/;"	m	struct:stp_header	file:	access:public
startup_sent	br_private.h	/^	u32			startup_sent;$/;"	m	struct:bridge_mcast_query	access:public
state	br_private.h	/^	u8				state;$/;"	m	struct:net_bridge_port	access:public
state	br_private.h	/^	unsigned char			state;$/;"	m	struct:net_bridge_port_group	access:public
stats	br_private.h	/^	struct pcpu_sw_netstats		__percpu *stats;$/;"	m	struct:net_bridge	typeref:struct:net_bridge::__percpu	access:public
store	br_sysfs_if.c	/^	int (*store)(struct net_bridge_port *, unsigned long);$/;"	m	struct:brport_attribute	file:	access:public
store_bridge_parm	br_sysfs_br.c	/^static ssize_t store_bridge_parm(struct device *d,$/;"	f	file:	signature:(struct device *d, const char *buf, size_t len, int (*set)(struct net_bridge *, unsigned long))
store_flush	br_sysfs_if.c	/^static int store_flush(struct net_bridge_port *p, unsigned long v)$/;"	f	file:	signature:(struct net_bridge_port *p, unsigned long v)
store_multicast_router	br_sysfs_if.c	/^static int store_multicast_router(struct net_bridge_port *p,$/;"	f	file:	signature:(struct net_bridge_port *p, unsigned long v)
store_orig_dstaddr	br_netfilter.c	47;"	d	file:
stp_config_pdu	netfilter/ebt_stp.c	/^struct stp_config_pdu {$/;"	s	file:
stp_config_pdu::flags	netfilter/ebt_stp.c	/^	uint8_t flags;$/;"	m	struct:stp_config_pdu	file:	access:public
stp_config_pdu::forward_delay	netfilter/ebt_stp.c	/^	uint8_t forward_delay[2];$/;"	m	struct:stp_config_pdu	file:	access:public
stp_config_pdu::hello_time	netfilter/ebt_stp.c	/^	uint8_t hello_time[2];$/;"	m	struct:stp_config_pdu	file:	access:public
stp_config_pdu::max_age	netfilter/ebt_stp.c	/^	uint8_t max_age[2];$/;"	m	struct:stp_config_pdu	file:	access:public
stp_config_pdu::msg_age	netfilter/ebt_stp.c	/^	uint8_t msg_age[2];$/;"	m	struct:stp_config_pdu	file:	access:public
stp_config_pdu::port	netfilter/ebt_stp.c	/^	uint8_t port[2];$/;"	m	struct:stp_config_pdu	file:	access:public
stp_config_pdu::root	netfilter/ebt_stp.c	/^	uint8_t root[8];$/;"	m	struct:stp_config_pdu	file:	access:public
stp_config_pdu::root_cost	netfilter/ebt_stp.c	/^	uint8_t root_cost[4];$/;"	m	struct:stp_config_pdu	file:	access:public
stp_config_pdu::sender	netfilter/ebt_stp.c	/^	uint8_t sender[8];$/;"	m	struct:stp_config_pdu	file:	access:public
stp_enabled	br_private.h	/^	} stp_enabled;$/;"	m	struct:net_bridge	typeref:enum:net_bridge::__anon3	access:public
stp_header	netfilter/ebt_stp.c	/^struct stp_header {$/;"	s	file:
stp_header::ctrl	netfilter/ebt_stp.c	/^	uint8_t ctrl;$/;"	m	struct:stp_header	file:	access:public
stp_header::dsap	netfilter/ebt_stp.c	/^	uint8_t dsap;$/;"	m	struct:stp_header	file:	access:public
stp_header::pid	netfilter/ebt_stp.c	/^	uint8_t pid;$/;"	m	struct:stp_header	file:	access:public
stp_header::ssap	netfilter/ebt_stp.c	/^	uint8_t ssap;$/;"	m	struct:stp_header	file:	access:public
stp_header::type	netfilter/ebt_stp.c	/^	uint8_t type;$/;"	m	struct:stp_header	file:	access:public
stp_header::vers	netfilter/ebt_stp.c	/^	uint8_t vers;$/;"	m	struct:stp_header	file:	access:public
stp_state_show	br_sysfs_br.c	/^static ssize_t stp_state_show(struct device *d,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, char *buf)
stp_state_store	br_sysfs_br.c	/^static ssize_t stp_state_store(struct device *d,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, const char *buf, size_t len)
sysfs_name	br_private.h	/^	char				sysfs_name[IFNAMSIZ];$/;"	m	struct:net_bridge_port	access:public
target	netfilter/ebt_mark.c	/^	compat_uint_t target;$/;"	m	struct:compat_ebt_mark_t_info	file:	access:public
tcn_timer	br_private.h	/^	struct timer_list		tcn_timer;$/;"	m	struct:net_bridge	typeref:struct:net_bridge::timer_list	access:public
tcn_timer_show	br_sysfs_br.c	/^static ssize_t tcn_timer_show(struct device *d, struct device_attribute *attr,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, char *buf)
tcpudphdr	netfilter/ebt_ip.c	/^struct tcpudphdr {$/;"	s	file:
tcpudphdr	netfilter/ebt_ip6.c	/^	} tcpudphdr;$/;"	m	union:pkthdr	typeref:struct:pkthdr::__anon6	file:	access:public
tcpudphdr	netfilter/ebt_log.c	/^struct tcpudphdr$/;"	s	file:
tcpudphdr::dst	netfilter/ebt_ip.c	/^	__be16 dst;$/;"	m	struct:tcpudphdr	file:	access:public
tcpudphdr::dst	netfilter/ebt_log.c	/^	__be16 dst;$/;"	m	struct:tcpudphdr	file:	access:public
tcpudphdr::src	netfilter/ebt_ip.c	/^	__be16 src;$/;"	m	struct:tcpudphdr	file:	access:public
tcpudphdr::src	netfilter/ebt_log.c	/^	__be16 src;$/;"	m	struct:tcpudphdr	file:	access:public
timer	br_private.h	/^	struct timer_list		timer;$/;"	m	struct:bridge_mcast_querier	typeref:struct:bridge_mcast_querier::timer_list	access:public
timer	br_private.h	/^	struct timer_list		timer;$/;"	m	struct:net_bridge_mdb_entry	typeref:struct:net_bridge_mdb_entry::timer_list	access:public
timer	br_private.h	/^	struct timer_list		timer;$/;"	m	struct:net_bridge_port_group	typeref:struct:net_bridge_port_group::timer_list	access:public
timer	br_private.h	/^	struct timer_list	timer;$/;"	m	struct:bridge_mcast_query	typeref:struct:bridge_mcast_query::timer_list	access:public
timer	netfilter/ebt_ulog.c	/^	struct timer_list timer;	\/* the timer function *\/$/;"	m	struct:__anon4	typeref:struct:__anon4::timer_list	file:	access:public
to_bridge	br_sysfs_br.c	26;"	d	file:
to_brport	br_sysfs_if.c	210;"	d	file:
to_brport_attr	br_sysfs_if.c	209;"	d	file:
to_dev	br_sysfs_br.c	25;"	d	file:
topology_change	br_private.h	/^	unsigned char			topology_change;$/;"	m	struct:net_bridge	access:public
topology_change	br_private_stp.h	/^	unsigned int	topology_change:1;$/;"	m	struct:br_config_bpdu	access:public
topology_change_ack	br_private.h	/^	unsigned char			topology_change_ack;$/;"	m	struct:net_bridge_port	access:public
topology_change_ack	br_private_stp.h	/^	unsigned int	topology_change_ack:1;$/;"	m	struct:br_config_bpdu	access:public
topology_change_detected	br_private.h	/^	unsigned char			topology_change_detected;$/;"	m	struct:net_bridge	access:public
topology_change_detected_show	br_sysfs_br.c	/^static ssize_t topology_change_detected_show(struct device *d,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, char *buf)
topology_change_show	br_sysfs_br.c	/^static ssize_t topology_change_show(struct device *d,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, char *buf)
topology_change_timer	br_private.h	/^	struct timer_list		topology_change_timer;$/;"	m	struct:net_bridge	typeref:struct:net_bridge::timer_list	access:public
topology_change_timer_show	br_sysfs_br.c	/^static ssize_t topology_change_timer_show(struct device *d,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, char *buf)
translate_table	netfilter/ebtables.c	/^static int translate_table(struct net *net, const char *name,$/;"	f	file:	signature:(struct net *net, const char *name, struct ebt_table_info *newinfo)
type	netfilter/ebt_ip6.c	/^		u8 type;$/;"	m	struct:pkthdr::__anon7	file:	access:public
type	netfilter/ebt_stp.c	/^	uint8_t type;$/;"	m	struct:stp_header	file:	access:public
u	br_private.h	/^	} u;$/;"	m	struct:br_ip	typeref:union:br_ip::__anon1	access:public
u	netfilter/ebtables.c	/^	} u;$/;"	m	struct:compat_ebt_entry_mwt	typeref:union:compat_ebt_entry_mwt::__anon5	file:	access:public
ulog_alloc_skb	netfilter/ebt_ulog.c	/^static struct sk_buff *ulog_alloc_skb(unsigned int size)$/;"	f	file:	signature:(unsigned int size)
ulog_buffers	netfilter/ebt_ulog.c	/^	ebt_ulog_buff_t ulog_buffers[EBT_ULOG_MAXNLGROUPS];$/;"	m	struct:ebt_ulog_net	file:	access:public
ulog_send	netfilter/ebt_ulog.c	/^static void ulog_send(struct ebt_ulog_net *ebt, unsigned int nlgroup)$/;"	f	file:	signature:(struct ebt_ulog_net *ebt, unsigned int nlgroup)
ulog_timer	netfilter/ebt_ulog.c	/^static void ulog_timer(unsigned long data)$/;"	f	file:	signature:(unsigned long data)
untagged_bitmap	br_private.h	/^	unsigned long			untagged_bitmap[BR_VLAN_BITMAP_LEN];$/;"	m	struct:net_port_vlans	access:public
update_counters	netfilter/ebtables.c	/^static int update_counters(struct net *net, const void __user *user,$/;"	f	file:	signature:(struct net *net, const void __user *user, unsigned int len)
updated	br_private.h	/^	unsigned long			updated;$/;"	m	struct:net_bridge_fdb_entry	access:public
used	br_private.h	/^	unsigned long			used;$/;"	m	struct:net_bridge_fdb_entry	access:public
user2credits	netfilter/ebt_limit.c	/^user2credits(u_int32_t user)$/;"	f	file:	signature:(u_int32_t user)
valid_hooks	netfilter/ebtables.c	/^	compat_uint_t valid_hooks;$/;"	m	struct:compat_ebt_replace	file:	access:public
ver	br_private.h	/^	u32				ver;$/;"	m	struct:net_bridge_mdb_htable	access:public
vers	netfilter/ebt_stp.c	/^	uint8_t vers;$/;"	m	struct:stp_header	file:	access:public
vid	br_private.h	/^	__u16		vid;$/;"	m	struct:br_ip	access:public
vlan_bitmap	br_private.h	/^	unsigned long			vlan_bitmap[BR_VLAN_BITMAP_LEN];$/;"	m	struct:net_port_vlans	access:public
vlan_enabled	br_private.h	/^	u8				vlan_enabled;$/;"	m	struct:net_bridge	access:public
vlan_filtered	br_private.h	/^	bool vlan_filtered;$/;"	m	struct:br_input_skb_cb	access:public
vlan_filtering_show	br_sysfs_br.c	/^static ssize_t vlan_filtering_show(struct device *d,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, char *buf)
vlan_filtering_store	br_sysfs_br.c	/^static ssize_t vlan_filtering_store(struct device *d,$/;"	f	file:	signature:(struct device *d, struct device_attribute *attr, const char *buf, size_t len)
vlan_id	br_private.h	/^	__u16				vlan_id;$/;"	m	struct:net_bridge_fdb_entry	access:public
vlan_info	br_private.h	/^	struct net_port_vlans __rcu	*vlan_info;$/;"	m	struct:net_bridge	typeref:struct:net_bridge::__rcu	access:public
vlan_info	br_private.h	/^	struct net_port_vlans __rcu	*vlan_info;$/;"	m	struct:net_bridge_port	typeref:struct:net_bridge_port::__rcu	access:public
vlan_proto	br_netfilter.c	/^static inline __be16 vlan_proto(const struct sk_buff *skb)$/;"	f	file:	signature:(const struct sk_buff *skb)
