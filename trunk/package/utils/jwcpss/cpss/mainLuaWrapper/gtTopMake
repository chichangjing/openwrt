###########################################
##                                       ##
##    Top Make file for LUA              ##
##                                       ##
###########################################
PROJ_NAME = mainLuaWrapper

include $(USER_BASE)/gtDefsTopMake.mk


PROJECT_PATH =  $(OS_INCLUDE)       \
                $(OS_PATH)          \
                $(SYSCONFIG_PATH)   \
                $(COMMON_PATH)      \
                $(PP_DRV_PATH)      \
                $(EXT_DRV_PATH)     \
                $(EXT_MAC_PATH)     \
                $(EXT_UTILS_PATH)   \
                $(FA_DRV_PATH)      \
                $(XBAR_DRV_PATH)    \
                $(DUNE_DRV_PATH)    \
                $(UTFTOOL_PATH)     \
                $(CMD_PATH)         \
                $(FPGA_PATH)        \
                $(GALTIS_PATH)      \
                $(LUA_PATH)         \
                $(LUA_SRC_PATH)     \
                $(FPGA_COMMON_PATH)
                
#not allowed to use next paths :
#   because located in cpssEnabler , that real application may not have
#   only the main cmd in the cpssEnabler is allowed
#               $(SYSCONFIG_PATH)  
#               $(EXT_DRV_PATH)    
#               $(OS_PATH)         

ifeq (EXISTS, $(CHX_FAMILY))
AD_CFLAGS += $(FD)CONFIG_DDR3

PROJECT_PATH += $(FIS)$(SW_ROOT)/mainPpDrv/src/cpss/generic/labServices/h$(FIE)
PROJECT_PATH += $(FIS)$(SW_ROOT)/mainPpDrv/src/cpss/generic/labServices/port/gop/h$(FIE)
PROJECT_PATH += $(FIS)$(SW_ROOT)/mainPpDrv/src/cpss/generic/labServices/port/gop/h/port$(FIE)
PROJECT_PATH += $(FIS)$(SW_ROOT)/mainPpDrv/src/cpss/generic/labServices/ddr/ddr3libv2/h/Driver$(FIE)
PROJECT_PATH += $(FIS)$(SW_ROOT)/mainPpDrv/src/cpss/generic/labServices/ddr/ddr3libv2/h/Driver/ddr3$(FIE)
PROJECT_PATH += $(FIS)$(SW_ROOT)/mainPpDrv/src/cpss/generic/labServices/ddr/ddr3libv2/h/Silicon$(FIE)
PROJECT_PATH += $(FIS)$(SW_ROOT)/mainPpDrv/src/cpss/generic/labServices/ddr/bap/h$(FIE)

endif
ifeq (EXISTS,$(RTOS_ON_SIM))
  PROJECT_PATH += $(SIMULATION_PATH)
endif

#Shared memory requires OS_PATH
ifeq (1,$(SHARED_MEMORY))
  PROJECT_PATH += $(OS_PATH) \
                  $(SYSCONFIG_PATH) \
                  $(EXT_DRV_PATH)
endif


PROJECT_PATH += $(FIS)$(SW_ROOT)/common/h/cpss/extServices/os$(FIE)

# check if need to use 'GM_USED'.
#needed when 'force' image to use GM.
#also needed for Puma2,3 where use always GM. (for simulation)
ifeq (EXISTS, $(FORCE_GM_USE))
  AD_CFLAGS += $(FD)GM_USED
else
  ifeq (EXISTS, $(PM_FAMILY))
    ifeq (EXISTS, $(ASIC_SIMULATION))
      AD_CFLAGS += $(FD)GM_USED
    endif
  endif
endif 

##########
## Fpga ##
##########
ifeq (RHODES, $(FPGA_TYPE))
AD_CFLAGS += $(FD)IMPL_FPGA
endif

ifeq (gnu.host_gcc, $(TOOL).$(TOOLKIT_MAKE_RULES))
  #don't threat #warning as error
  CFLAGS2 += -Wno-error=cpp
endif

CFLAGS += $(CFLAGS1) $(CFLAGS2) $(CFLAGS_OPT) $(OS_DEFINE) $(CPU_FLAGS) $(LFLAGS) $(AD_CFLAGS) $(CMD_CFLAGS)

include $(USER_BASE)/gtTargetsTopMake.mk

ifeq (visual,$(TOOL))
  #for visual no need for 'onelib' and 'elf' , because same end result --> use elf !
  full: elf
else
  full: elf onelib
endif


